#! /bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated by GNU Autoconf 2.65 for dvda-author 10.06.
#
# Report bugs to <fabnicol@users.sourceforge.net>.
#
#
# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
# 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation,
# Inc.
#
#
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  # We cannot yet assume a decent shell, so we have to provide a
	# neutralization value for shells without unset; and this also
	# works around shells that cannot unset nonexistent variables.
	BASH_ENV=/dev/null
	ENV=/dev/null
	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
	export CONFIG_SHELL
	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org and
$0: fabnicol@users.sourceforge.net about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"


} # as_fn_mkdir_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error ERROR [LINENO LOG_FD]
# ---------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with status $?, using 1 if that was 0.
as_fn_error ()
{
  as_status=$?; test $as_status -eq 0 && as_status=1
  if test "$3"; then
    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
  fi
  $as_echo "$as_me: error: $1" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if ( -- /) >/dev/null 2>&1 && test "X` -- / 2>&1`" = "X/"; then
  as_basename=
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


test -n "$DJDIR" || exec 7<&0 </dev/null
exec 6>&1

# Name of the host.
# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_clean_files=
ac_config_libobj_dir=.
LIBOBJS=
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=

# Identity of this package.
PACKAGE_NAME='dvda-author'
PACKAGE_TARNAME='dvda-author'
PACKAGE_VERSION='10.06'
PACKAGE_STRING='dvda-author 10.06'
PACKAGE_BUGREPORT='fabnicol@users.sourceforge.net'
PACKAGE_URL=''

# Factoring default headers for most tests.
ac_includes_default="\
#include <stdio.h>
#ifdef HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#ifdef HAVE_SYS_STAT_H
# include <sys/stat.h>
#endif
#ifdef STDC_HEADERS
# include <stdlib.h>
# include <stddef.h>
#else
# ifdef HAVE_STDLIB_H
#  include <stdlib.h>
# endif
#endif
#ifdef HAVE_STRING_H
# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
#  include <memory.h>
# endif
# include <string.h>
#endif
#ifdef HAVE_STRINGS_H
# include <strings.h>
#endif
#ifdef HAVE_INTTYPES_H
# include <inttypes.h>
#endif
#ifdef HAVE_STDINT_H
# include <stdint.h>
#endif
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif"

ac_unique_file="src/videoimport.c"
ac_default_prefix=/usr
ac_default_prefix=/usr
ac_subst_vars='am__EXEEXT_FALSE
am__EXEEXT_TRUE
LTLIBOBJS
MENUDIR
PIXDIR
SHORTLINKDIR
DEBUG_FLAGS
LIBSOXCONVERT_CPPFLAGS
ROOTDIR
LIBOBJS
LN_S
FIXWAV_LINK
FIXWAV_LIB
FIXWAV_CONFIGURE_FILE
MAYBE_FIXWAV
HAVE_FIXWAV_BUILD_FALSE
HAVE_FIXWAV_BUILD_TRUE
CONFIGURE_FIXWAV_FLAGS
IBERTY_LINK
IBERTY_LIB
IBERTY_CONFIGURE_FILE
MAYBE_IBERTY
CONFIGURE_IBERTY_FLAGS
LIBOGG_LINK
LIBOGG_LIB
LIBOGG_CONFIGURE_FILE
MAYBE_LIBOGG
CONFIGURE_LIBOGG_FLAGS
SOX_LINK
SOX_LIB
SOX_CONFIGURE_FILE
MAYBE_SOX
CONFIGURE_SOX_FLAGS
FLAC_LINK
FLAC_LIB
FLAC_CONFIGURE_FILE
MAYBE_FLAC
CONFIGURE_FLAC_FLAGS
CDRTOOLS_LINK
CDRTOOLS_LIB
CDRTOOLS_CONFIGURE_FILE
MAYBE_CDRTOOLS
CONFIGURE_CDRTOOLS_FLAGS
DVDAUTHOR_LINK
DVDAUTHOR_LIB
DVDAUTHOR_CONFIGURE_FILE
MAYBE_DVDAUTHOR
CONFIGURE_DVDAUTHOR_FLAGS
HAVE_IBERTY_FALSE
HAVE_IBERTY_TRUE
HAVE_EXTERNAL_IBERTY_FALSE
HAVE_EXTERNAL_IBERTY_TRUE
WITH_IBERTY_FALSE
WITH_IBERTY_TRUE
HAVE_SOX_FALSE
HAVE_SOX_TRUE
HAVE_EXTERNAL_SOX_FALSE
HAVE_EXTERNAL_SOX_TRUE
WITH_SOX_FALSE
WITH_SOX_TRUE
HAVE_FIXWAV_FALSE
HAVE_FIXWAV_TRUE
HAVE_EXTERNAL_FIXWAV_FALSE
HAVE_EXTERNAL_FIXWAV_TRUE
WITH_FIXWAV_FALSE
WITH_FIXWAV_TRUE
HAVE_OGG_FALSE
HAVE_OGG_TRUE
HAVE_EXTERNAL_OGG_FALSE
HAVE_EXTERNAL_OGG_TRUE
WITH_OGG_FALSE
WITH_OGG_TRUE
HAVE_FLAC_FALSE
HAVE_FLAC_TRUE
HAVE_EXTERNAL_FLAC_FALSE
HAVE_EXTERNAL_FLAC_TRUE
WITH_FLAC_FALSE
WITH_FLAC_TRUE
HAVE_ALL_DEPS_FALSE
HAVE_ALL_DEPS_TRUE
ALL_VERSION
HAVE_FLAC_CVS_FALSE
HAVE_FLAC_CVS_TRUE
HAVE_LIBOGG_DOWNLOAD_FALSE
HAVE_LIBOGG_DOWNLOAD_TRUE
HAVE_FLAC_DOWNLOAD_FALSE
HAVE_FLAC_DOWNLOAD_TRUE
HAVE_SOX_PATCH_FALSE
HAVE_SOX_PATCH_TRUE
HAVE_CDRTOOLS_PATCH_FALSE
HAVE_CDRTOOLS_PATCH_TRUE
SOFTWARE_PATH
HAVE_DVDAUTHOR_PATCH_FALSE
HAVE_DVDAUTHOR_PATCH_TRUE
LIBOGG_VERSION
FLAC_VERSION
SOX_VERSION
CDRTOOLS_VERSION
DVDAUTHOR_VERSION
PATCH
TAR
HAVE_STATIC_SOX_FALSE
HAVE_STATIC_SOX_TRUE
HAVE_CDRTOOLS_BUILD_FALSE
HAVE_CDRTOOLS_BUILD_TRUE
HAVE_DVDAUTHOR_BUILD_FALSE
HAVE_DVDAUTHOR_BUILD_TRUE
HAVE_ALL_BUILDS_FALSE
HAVE_ALL_BUILDS_TRUE
HAVE_FLAC_BUILD_FALSE
HAVE_FLAC_BUILD_TRUE
HAVE_LIBOGG_BUILD_FALSE
HAVE_LIBOGG_BUILD_TRUE
HAVE_SOX_BUILD_FALSE
HAVE_SOX_BUILD_TRUE
HAVE_AUTOMAKE_FALSE
HAVE_AUTOMAKE_TRUE
HAVE_AUTOCONF_FALSE
HAVE_AUTOCONF_TRUE
HAVE_MD5SUM_FALSE
HAVE_MD5SUM_TRUE
MD5SUM
HAVE_CDRECORD_FALSE
HAVE_CDRECORD_TRUE
CDRECORD
HAVE_MKISOFS_FALSE
HAVE_MKISOFS_TRUE
MKISOFS
HAVE_CONVERT_FALSE
HAVE_CONVERT_TRUE
CONVERT
HAVE_MOGRIFY_FALSE
HAVE_MOGRIFY_TRUE
MOGRIFY
HAVE_SPUMUX_FALSE
HAVE_SPUMUX_TRUE
SPUMUX
HAVE_MPEG2ENC_FALSE
HAVE_MPEG2ENC_TRUE
MPEG2ENC
HAVE_MP2ENC_FALSE
HAVE_MP2ENC_TRUE
MP2ENC
HAVE_MPLEX_FALSE
HAVE_MPLEX_TRUE
MPLEX
HAVE_JPEG2YUV_FALSE
HAVE_JPEG2YUV_TRUE
JPEG2YUV
HAVE_CURL_FALSE
HAVE_CURL_TRUE
CURL
HAVE_MAN2HTML_FALSE
HAVE_MAN2HTML_TRUE
MAN2HTML
HAVE_HELP2MAN_FALSE
HAVE_HELP2MAN_TRUE
HELP2MAN
HAVE_IBERTY_BUILD_FALSE
HAVE_IBERTY_BUILD_TRUE
SED
RANLIB
build_os
build_vendor
build_cpu
build
am__fastdepCC_FALSE
am__fastdepCC_TRUE
CCDEPMODE
AMDEPBACKSLASH
AMDEP_FALSE
AMDEP_TRUE
am__quote
am__include
DEPDIR
am__untar
am__tar
AMTAR
am__leading_dot
SET_MAKE
AWK
mkdir_p
MKDIR_P
INSTALL_STRIP_PROGRAM
STRIP
install_sh
MAKEINFO
AUTOHEADER
AUTOMAKE
AUTOCONF
ACLOCAL
VERSION
PACKAGE
CYGPATH_W
am__isrc
INSTALL_DATA
INSTALL_SCRIPT
INSTALL_PROGRAM
EGREP
GREP
CPP
OBJEXT
EXEEXT
ac_ct_CC
CPPFLAGS
LDFLAGS
CFLAGS
CC
target_alias
host_alias
build_alias
LIBS
ECHO_T
ECHO_N
ECHO_C
DEFS
mandir
localedir
libdir
psdir
pdfdir
dvidir
htmldir
infodir
docdir
oldincludedir
includedir
localstatedir
sharedstatedir
sysconfdir
datadir
datarootdir
libexecdir
sbindir
bindir
program_transform_name
prefix
exec_prefix
PACKAGE_URL
PACKAGE_BUGREPORT
PACKAGE_STRING
PACKAGE_VERSION
PACKAGE_TARNAME
PACKAGE_NAME
PATH_SEPARATOR
SHELL'
ac_subst_files=''
ac_user_opts='
enable_option_checking
enable_dependency_tracking
with_config
with_debug
with_debug_flags
enable_sox_build
enable_iberty_build
enable_libogg_build
enable_flac_build
enable_all_builds
enable_dvdauthor_build
enable_cdrtools_build
enable_static_sox
enable_dvdauthor_patch
enable_cdrtools_patch
enable_sox_patch
enable_flac_download
enable_libogg_download
enable_flac_cvs
enable_all_deps
with_flac
with_ogg
with_fixwav
with_sox
with_iberty
enable_assert
enable_largefile
'
      ac_precious_vars='build_alias
host_alias
target_alias
CC
CFLAGS
LDFLAGS
LIBS
CPPFLAGS
CPP'


# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
ac_unrecognized_opts=
ac_unrecognized_sep=
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
# (The list follows the same order as the GNU Coding Standards.)
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datarootdir='${prefix}/share'
datadir='${datarootdir}'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
includedir='${prefix}/include'
oldincludedir='/usr/include'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
infodir='${datarootdir}/info'
htmldir='${docdir}'
dvidir='${docdir}'
pdfdir='${docdir}'
psdir='${docdir}'
libdir='${exec_prefix}/lib'
localedir='${datarootdir}/locale'
mandir='${datarootdir}/man'

ac_prev=
ac_dashdash=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval $ac_prev=\$ac_option
    ac_prev=
    continue
  fi

  case $ac_option in
  *=*)	ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
  *)	ac_optarg=yes ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $ac_dashdash$ac_option in
  --)
    ac_dashdash=yes ;;

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=*)
    datadir=$ac_optarg ;;

  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
  | --dataroo | --dataro | --datar)
    ac_prev=datarootdir ;;
  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
    datarootdir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error "invalid feature name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=no ;;

  -docdir | --docdir | --docdi | --doc | --do)
    ac_prev=docdir ;;
  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
    docdir=$ac_optarg ;;

  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
    ac_prev=dvidir ;;
  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
    dvidir=$ac_optarg ;;

  -enable-* | --enable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error "invalid feature name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=\$ac_optarg ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
    ac_prev=htmldir ;;
  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
  | --ht=*)
    htmldir=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localedir | --localedir | --localedi | --localed | --locale)
    ac_prev=localedir ;;
  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
    localedir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst | --locals)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program- | --program- | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-=* | --program-=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
    ac_prev=pdfdir ;;
  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
    pdfdir=$ac_optarg ;;

  -psdir | --psdir | --psdi | --psd | --ps)
    ac_prev=psdir ;;
  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
    psdir=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error "invalid package name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=\$ac_optarg ;;

  -without-* | --without-*)
    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error "invalid package name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=no ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) as_fn_error "unrecognized option: \`$ac_option'
Try \`$0 --help' for more information."
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    case $ac_envvar in #(
      '' | [0-9]* | *[!_$as_cr_alnum]* )
      as_fn_error "invalid variable name: \`$ac_envvar'" ;;
    esac
    eval $ac_envvar=\$ac_optarg
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    $as_echo "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      $as_echo "$as_me: WARNING: invalid host type: $ac_option" >&2
    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  as_fn_error "missing argument to $ac_option"
fi

if test -n "$ac_unrecognized_opts"; then
  case $enable_option_checking in
    no) ;;
    fatal) as_fn_error "unrecognized options: $ac_unrecognized_opts" ;;
    *)     $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
  esac
fi

# Check all directory arguments for consistency.
for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
		datadir sysconfdir sharedstatedir localstatedir includedir \
		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
		libdir localedir mandir
do
  eval ac_val=\$$ac_var
  # Remove trailing slashes.
  case $ac_val in
    */ )
      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
      eval $ac_var=\$ac_val;;
  esac
  # Be sure to have absolute directory names.
  case $ac_val in
    [\\/$]* | ?:[\\/]* )  continue;;
    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
  esac
  as_fn_error "expected an absolute directory name for --$ac_var: $ac_val"
done

# There might be people who depend on the old broken behavior: `$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
    $as_echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
    If a cross compiler is detected then cross compile mode will be used." >&2
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


ac_pwd=`pwd` && test -n "$ac_pwd" &&
ac_ls_di=`ls -di .` &&
ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
  as_fn_error "working directory cannot be determined"
test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
  as_fn_error "pwd does not report name of working directory"


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then the parent directory.
  ac_confdir=`$as_dirname -- "$as_myself" ||
$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_myself" : 'X\(//\)[^/]' \| \
	 X"$as_myself" : 'X\(//\)$' \| \
	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_myself" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r "$srcdir/$ac_unique_file"; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r "$srcdir/$ac_unique_file"; then
  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
  as_fn_error "cannot find sources ($ac_unique_file) in $srcdir"
fi
ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
ac_abs_confdir=`(
	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error "$ac_msg"
	pwd)`
# When building in place, set srcdir=.
if test "$ac_abs_confdir" = "$ac_pwd"; then
  srcdir=.
fi
# Remove unnecessary trailing slashes from srcdir.
# Double slashes in file names in object file debugging info
# mess up M-x gdb in Emacs.
case $srcdir in
*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
esac
for ac_var in $ac_precious_vars; do
  eval ac_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_env_${ac_var}_value=\$${ac_var}
  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_cv_env_${ac_var}_value=\$${ac_var}
done

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
\`configure' configures dvda-author 10.06 to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print \`checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for \`--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, \`make install' will install all the files in
\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than \`$ac_default_prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/dvda-author]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]
_ACEOF

  cat <<\_ACEOF

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
_ACEOF
fi

if test -n "$ac_init_help"; then
  case $ac_init_help in
     short | recursive ) echo "Configuration of dvda-author 10.06:";;
   esac
  cat <<\_ACEOF

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-sox-build      configure, build and install sox from source code
  --enable-iberty-build   configure, build and install iberty from source code
  --enable-libogg-build   configure, build and install libogg from source code
  --enable-flac-build     configure, build and install flac from source code
  --enable-all-builds     configure, build and install all core dependencies
                          <FLAC, Ogg, SoX, dvdauthor, cdrtools> from source
                          code
  --enable-dvdauthor-build
                          configure, build and install dvdauthor from source
                          code
  --enable-cdrtools-build configure, build and install cdrtools from source
                          code
  --enable-static-sox     enable static sox
  --enable-dvdauthor-patch
                          download and patch dvdauthor from source code
  --enable-cdrtools-patch download and patch cdrtools from source code
  --enable-sox-patch      download and patch sox from source code
  --enable-flac-download  download flac from source code
  --enable-libogg-download
                          download libogg from source code
  --enable-flac-cvs       download flac (cvs code for windows builds)
  --enable-all-deps       download all dependencies <FLAC, Ogg, SoX,
                          dvdauthor, cdrtools> and patch the source code if
                          necessary
  --disable-assert        turn off assertions
  --disable-largefile     omit support for large files

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-config           Path to directory of configuration file
  --with-debug            =full for debugging, =no for Release build
  --with-debug-flags      Debug build flags
  --with-flac             full pathname of library or --without-flac

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <fabnicol@users.sourceforge.net>.
_ACEOF
ac_status=$?
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d "$ac_dir" ||
      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
      continue
    ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix

    cd "$ac_dir" || { ac_status=$?; continue; }
    # Check for guested configure.
    if test -f "$ac_srcdir/configure.gnu"; then
      echo &&
      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
    elif test -f "$ac_srcdir/configure"; then
      echo &&
      $SHELL "$ac_srcdir/configure" --help=recursive
    else
      $as_echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi || ac_status=$?
    cd "$ac_pwd" || { ac_status=$?; break; }
  done
fi

test -n "$ac_init_help" && exit $ac_status
if $ac_init_version; then
  cat <<\_ACEOF
dvda-author configure 10.06
generated by GNU Autoconf 2.65

Copyright (C) 2009 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.
_ACEOF
  exit
fi

## ------------------------ ##
## Autoconf initialization. ##
## ------------------------ ##

# ac_fn_c_try_compile LINENO
# --------------------------
# Try to compile conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext
  if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest.$ac_objext; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
  as_fn_set_status $ac_retval

} # ac_fn_c_try_compile

# ac_fn_c_try_cpp LINENO
# ----------------------
# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_cpp ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_cpp conftest.$ac_ext"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } >/dev/null && {
	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
	 test ! -s conftest.err
       }; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

    ac_retval=1
fi
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
  as_fn_set_status $ac_retval

} # ac_fn_c_try_cpp

# ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES
# -------------------------------------------------------
# Tests whether HEADER exists, giving a warning if it cannot be compiled using
# the include files in INCLUDES and setting the cache variable VAR
# accordingly.
ac_fn_c_check_header_mongrel ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
else
  # Is the header compilable?
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 usability" >&5
$as_echo_n "checking $2 usability... " >&6; }
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
#include <$2>
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_header_compiler=yes
else
  ac_header_compiler=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler" >&5
$as_echo "$ac_header_compiler" >&6; }

# Is the header present?
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 presence" >&5
$as_echo_n "checking $2 presence... " >&6; }
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <$2>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  ac_header_preproc=yes
else
  ac_header_preproc=no
fi
rm -f conftest.err conftest.$ac_ext
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc" >&5
$as_echo "$ac_header_preproc" >&6; }

# So?  What about this header?
case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((
  yes:no: )
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&5
$as_echo "$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
    ;;
  no:yes:* )
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled" >&5
$as_echo "$as_me: WARNING: $2: present but cannot be compiled" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?" >&5
$as_echo "$as_me: WARNING: $2:     check for missing prerequisite headers?" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation" >&5
$as_echo "$as_me: WARNING: $2: see the Autoconf documentation" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&5
$as_echo "$as_me: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
( cat <<\_ASBOX
## --------------------------------------------- ##
## Report this to fabnicol@users.sourceforge.net ##
## --------------------------------------------- ##
_ASBOX
     ) | sed "s/^/$as_me: WARNING:     /" >&2
    ;;
esac
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  eval "$3=\$ac_header_compiler"
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
fi
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}

} # ac_fn_c_check_header_mongrel

# ac_fn_c_try_run LINENO
# ----------------------
# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
# that executables *can* be run.
ac_fn_c_try_run ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then :
  ac_retval=0
else
  $as_echo "$as_me: program exited with status $ac_status" >&5
       $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

       ac_retval=$ac_status
fi
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
  as_fn_set_status $ac_retval

} # ac_fn_c_try_run

# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
# -------------------------------------------------------
# Tests whether HEADER exists and can be compiled using the include files in
# INCLUDES, setting the cache variable VAR accordingly.
ac_fn_c_check_header_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
#include <$2>
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  eval "$3=yes"
else
  eval "$3=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}

} # ac_fn_c_check_header_compile

# ac_fn_c_try_link LINENO
# -----------------------
# Try to link conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_link ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest$ac_exeext
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest$ac_exeext && {
	 test "$cross_compiling" = yes ||
	 $as_test_x conftest$ac_exeext
       }; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
  # interfere with the next link command; also delete a directory that is
  # left behind by Apple's compiler.  We do this before executing the actions.
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
  as_fn_set_status $ac_retval

} # ac_fn_c_try_link

# ac_fn_c_check_func LINENO FUNC VAR
# ----------------------------------
# Tests whether FUNC exists, setting the cache variable VAR accordingly
ac_fn_c_check_func ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
/* Define $2 to an innocuous variant, in case <limits.h> declares $2.
   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
#define $2 innocuous_$2

/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char $2 (); below.
    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
    <limits.h> exists even on freestanding compilers.  */

#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif

#undef $2

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char $2 ();
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined __stub_$2 || defined __stub___$2
choke me
#endif

int
main ()
{
return $2 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$3=yes"
else
  eval "$3=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}

} # ac_fn_c_check_func

# ac_fn_c_check_type LINENO TYPE VAR INCLUDES
# -------------------------------------------
# Tests whether TYPE exists after having included INCLUDES, setting cache
# variable VAR accordingly.
ac_fn_c_check_type ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  eval "$3=no"
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
if (sizeof ($2))
	 return 0;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
if (sizeof (($2)))
	    return 0;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :

else
  eval "$3=yes"
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}

} # ac_fn_c_check_type

# ac_fn_c_find_intX_t LINENO BITS VAR
# -----------------------------------
# Finds a signed integer type with width BITS, setting cache variable VAR
# accordingly.
ac_fn_c_find_intX_t ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for int$2_t" >&5
$as_echo_n "checking for int$2_t... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  eval "$3=no"
     # Order is important - never check a type that is potentially smaller
     # than half of the expected target width.
     for ac_type in int$2_t 'int' 'long int' \
	 'long long int' 'short int' 'signed char'; do
       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(enum { N = $2 / 2 - 1 };
	     0 < ($ac_type) ((((($ac_type) 1 << N) << N) - 1) * 2 + 1))];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(enum { N = $2 / 2 - 1 };
		($ac_type) ((((($ac_type) 1 << N) << N) - 1) * 2 + 1)
		 < ($ac_type) ((((($ac_type) 1 << N) << N) - 1) * 2 + 2))];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :

else
  case $ac_type in #(
  int$2_t) :
    eval "$3=yes" ;; #(
  *) :
    eval "$3=\$ac_type" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
       eval as_val=\$$3
   if test "x$as_val" = x""no; then :

else
  break
fi
     done
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}

} # ac_fn_c_find_intX_t

# ac_fn_c_find_uintX_t LINENO BITS VAR
# ------------------------------------
# Finds an unsigned integer type with width BITS, setting cache variable VAR
# accordingly.
ac_fn_c_find_uintX_t ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for uint$2_t" >&5
$as_echo_n "checking for uint$2_t... " >&6; }
if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  eval "$3=no"
     # Order is important - never check a type that is potentially smaller
     # than half of the expected target width.
     for ac_type in uint$2_t 'unsigned int' 'unsigned long int' \
	 'unsigned long long int' 'unsigned short int' 'unsigned char'; do
       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !((($ac_type) -1 >> ($2 / 2 - 1)) >> ($2 / 2 - 1) == 3)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  case $ac_type in #(
  uint$2_t) :
    eval "$3=yes" ;; #(
  *) :
    eval "$3=\$ac_type" ;;
esac
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
       eval as_val=\$$3
   if test "x$as_val" = x""no; then :

else
  break
fi
     done
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}

} # ac_fn_c_find_uintX_t
cat >config.log <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by dvda-author $as_me 10.06, which was
generated by GNU Autoconf 2.65.  Invocation command line was

  $ $0 $@

_ACEOF
exec 5>>config.log
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *\'*)
      ac_arg=`$as_echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
    2)
      as_fn_append ac_configure_args1 " '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      as_fn_append ac_configure_args " '$ac_arg'"
      ;;
    esac
  done
done
{ ac_configure_args0=; unset ac_configure_args0;}
{ ac_configure_args1=; unset ac_configure_args1;}

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Use '\'' to represent an apostrophe within the trap.
# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
trap 'exit_status=$?
  # Save into config.log some information that might help in debugging.
  {
    echo

    cat <<\_ASBOX
## ---------------- ##
## Cache variables. ##
## ---------------- ##
_ASBOX
    echo
    # The following way of writing the cache mishandles newlines in values,
(
  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done
  (set) 2>&1 |
    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      sed -n \
	"s/'\''/'\''\\\\'\'''\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
      ;; #(
    *)
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
)
    echo

    cat <<\_ASBOX
## ----------------- ##
## Output variables. ##
## ----------------- ##
_ASBOX
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=\$$ac_var
      case $ac_val in
      *\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
      esac
      $as_echo "$ac_var='\''$ac_val'\''"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      cat <<\_ASBOX
## ------------------- ##
## File substitutions. ##
## ------------------- ##
_ASBOX
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=\$$ac_var
	case $ac_val in
	*\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
	esac
	$as_echo "$ac_var='\''$ac_val'\''"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      cat <<\_ASBOX
## ----------- ##
## confdefs.h. ##
## ----------- ##
_ASBOX
      echo
      cat confdefs.h
      echo
    fi
    test "$ac_signal" != 0 &&
      $as_echo "$as_me: caught signal $ac_signal"
    $as_echo "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core core.conftest.* &&
    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -f -r conftest* confdefs.h

$as_echo "/* confdefs.h */" > confdefs.h

# Predefined preprocessor variables.

cat >>confdefs.h <<_ACEOF
#define PACKAGE_NAME "$PACKAGE_NAME"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_VERSION "$PACKAGE_VERSION"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_STRING "$PACKAGE_STRING"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_URL "$PACKAGE_URL"
_ACEOF


# Let the site file select an alternate cache file if it wants to.
# Prefer an explicitly selected file to automatically selected ones.
ac_site_file1=NONE
ac_site_file2=NONE
if test -n "$CONFIG_SITE"; then
  ac_site_file1=$CONFIG_SITE
elif test "x$prefix" != xNONE; then
  ac_site_file1=$prefix/share/config.site
  ac_site_file2=$prefix/etc/config.site
else
  ac_site_file1=$ac_default_prefix/share/config.site
  ac_site_file2=$ac_default_prefix/etc/config.site
fi
for ac_site_file in "$ac_site_file1" "$ac_site_file2"
do
  test "x$ac_site_file" = xNONE && continue
  if test /dev/null != "$ac_site_file" && test -r "$ac_site_file"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
$as_echo "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file"
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special files
  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
$as_echo "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . "$cache_file";;
      *)                      . "./$cache_file";;
    esac
  fi
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
$as_echo "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in $ac_precious_vars; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val=\$ac_cv_env_${ac_var}_value
  eval ac_new_val=\$ac_env_${ac_var}_value
  case $ac_old_set,$ac_new_set in
    set,)
      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
$as_echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
$as_echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	# differences in whitespace do not lead to failure.
	ac_old_val_w=`echo x $ac_old_val`
	ac_new_val_w=`echo x $ac_new_val`
	if test "$ac_old_val_w" != "$ac_new_val_w"; then
	  { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
$as_echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
	  ac_cache_corrupted=:
	else
	  { $as_echo "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
$as_echo "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
	  eval $ac_var=\$ac_old_val
	fi
	{ $as_echo "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
$as_echo "$as_me:   former value:  \`$ac_old_val'" >&2;}
	{ $as_echo "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
$as_echo "$as_me:   current value: \`$ac_new_val'" >&2;}
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *\'*) ac_arg=$ac_var=`$as_echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
  { $as_echo "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
$as_echo "$as_me: error: changes in the environment can compromise the build" >&2;}
  as_fn_error "run \`make distclean' and/or \`rm $cache_file' and start over" "$LINENO" 5
fi
## -------------------- ##
## Main body of script. ##
## -------------------- ##

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


# requested to define _GNU_SOURCE and check the availability of GNU extensions
# This should be called before any macros that run the C   compiler.
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
set dummy ${ac_tool_prefix}gcc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_CC="gcc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
$as_echo "$ac_ct_CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

if test -z "$CC"; then
          if test -n "$ac_tool_prefix"; then
    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
set dummy ${ac_tool_prefix}cc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="${ac_tool_prefix}cc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  fi
fi
if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  ac_prog_rejected=no
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
       ac_prog_rejected=yes
       continue
     fi
    ac_cv_prog_CC="cc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $# != 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
  fi
fi
fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  for ac_prog in cl.exe
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cl.exe
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
$as_echo "$ac_ct_CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$ac_ct_CC" && break
done

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
fi

fi


test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error "no acceptable C compiler found in \$PATH
See \`config.log' for more details." "$LINENO" 5; }

# Provide some information about the compiler.
$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out"
# Try to create an executable without -o first, disregard a.out.
# It will help us diagnose broken compilers, and finding out an intuition
# of exeext.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
$as_echo_n "checking whether the C compiler works... " >&6; }
ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`

# The possible output files:
ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"

ac_rmfiles=
for ac_file in $ac_files
do
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
  esac
done
rm -f $ac_rmfiles

if { { ac_try="$ac_link_default"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link_default") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then :
  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
# in a Makefile.  We should not override ac_cv_exeext if it was cached,
# so that the user can short-circuit this test for compilers unknown to
# Autoconf.
for ac_file in $ac_files ''
do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
	;;
    [ab].out )
	# We found the default executable, but exeext='' is most
	# certainly right.
	break;;
    *.* )
	if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
	then :; else
	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	fi
	# We set ac_cv_exeext here because the later test for it is not
	# safe: cross compilers may not add the suffix if given an `-o'
	# argument, so we may need to know it at that point already.
	# Even if this section looks crufty: it has the advantage of
	# actually working.
	break;;
    * )
	break;;
  esac
done
test "$ac_cv_exeext" = no && ac_cv_exeext=

else
  ac_file=''
fi
if test -z "$ac_file"; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
$as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
{ as_fn_set_status 77
as_fn_error "C compiler cannot create executables
See \`config.log' for more details." "$LINENO" 5; }; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
$as_echo_n "checking for C compiler default output file name... " >&6; }
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
$as_echo "$ac_file" >&6; }
ac_exeext=$ac_cv_exeext

rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out
ac_clean_files=$ac_clean_files_save
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for  of executables" >&5
$as_echo_n "checking for  of executables... " >&6; }
if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then :
  # If both `conftest.exe' and `conftest' are `present' (well, observable)
# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
# work properly (i.e., refer to `conftest.exe'), while it won't with
# `rm'.
for ac_file in conftest.exe conftest conftest.*; do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	  break;;
    * ) break;;
  esac
done
else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error "cannot compute  of executables: cannot compile and link
See \`config.log' for more details." "$LINENO" 5; }
fi
rm -f conftest conftest$ac_cv_exeext
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
$as_echo "$ac_cv_exeext" >&6; }

rm -f conftest.$ac_ext
EXEEXT=$ac_cv_exeext
ac_exeext=$EXEEXT
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdio.h>
int
main ()
{
FILE *f = fopen ("conftest.out", "w");
 return ferror (f) || fclose (f) != 0;

  ;
  return 0;
}
_ACEOF
ac_clean_files="$ac_clean_files conftest.out"
# Check that the compiler produces executables we can run.  If not, either
# the compiler is broken, or we cross compile.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
$as_echo_n "checking whether we are cross compiling... " >&6; }
if test "$cross_compiling" != yes; then
  { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
  if { ac_try='./conftest$ac_cv_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then
    cross_compiling=no
  else
    if test "$cross_compiling" = maybe; then
	cross_compiling=yes
    else
	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error "cannot run C compiled programs.
If you meant to cross compile, use \`--host'.
See \`config.log' for more details." "$LINENO" 5; }
    fi
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
$as_echo "$cross_compiling" >&6; }

rm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out
ac_clean_files=$ac_clean_files_save
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for  of object files" >&5
$as_echo_n "checking for  of object files... " >&6; }
if test "${ac_cv_objext+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.o conftest.obj
if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then :
  for ac_file in conftest.o conftest.obj conftest.*; do
  test -f "$ac_file" || continue;
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
       break;;
  esac
done
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error "cannot compute  of object files: cannot compile
See \`config.log' for more details." "$LINENO" 5; }
fi
rm -f conftest.$ac_cv_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
$as_echo "$ac_cv_objext" >&6; }
OBJEXT=$ac_cv_objext
ac_objext=$OBJEXT
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
if test "${ac_cv_c_compiler_gnu+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_compiler_gnu=yes
else
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
$as_echo "$ac_cv_c_compiler_gnu" >&6; }
if test $ac_compiler_gnu = yes; then
  GCC=yes
else
  GCC=
fi
ac_test_CFLAGS=${CFLAGS+set}
ac_save_CFLAGS=$CFLAGS
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
$as_echo_n "checking whether $CC accepts -g... " >&6; }
if test "${ac_cv_prog_cc_g+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_save_c_werror_flag=$ac_c_werror_flag
   ac_c_werror_flag=yes
   ac_cv_prog_cc_g=no
   CFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_g=yes
else
  CFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :

else
  ac_c_werror_flag=$ac_save_c_werror_flag
	 CFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   ac_c_werror_flag=$ac_save_c_werror_flag
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
$as_echo "$ac_cv_prog_cc_g" >&6; }
if test "$ac_test_CFLAGS" = set; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
if test "${ac_cv_prog_cc_c89+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
struct buf { int x; };
FILE * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not '\xHH' hex character constants.
   These don't provoke an error unfortunately, instead are silently treated
   as 'x'.  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
   array size at least.  It's necessary to write '\x00'==0 to get something
   that's true only with -std.  */
int osf4_cc_array ['\x00' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) 'x'
int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
main ()
{
return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC

fi
# AC_CACHE_VAL
case "x$ac_cv_prog_cc_c89" in
  x)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
$as_echo "none needed" >&6; } ;;
  xno)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
$as_echo "unsupported" >&6; } ;;
  *)
    CC="$CC $ac_cv_prog_cc_c89"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
esac
if test "x$ac_cv_prog_cc_c89" != xno; then :

fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
$as_echo_n "checking how to run the C preprocessor... " >&6; }
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if test "${ac_cv_prog_CPP+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
$as_echo "$CPP" >&6; }
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :

else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error "C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." "$LINENO" 5; }
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
$as_echo_n "checking for grep that handles long lines and -e... " >&6; }
if test "${ac_cv_path_GREP+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -z "$GREP"; then
  ac_path_GREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_prog in grep ggrep; do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
      { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
# Check for GNU ac_path_GREP and select it if it is found.
  # Check for GNU $ac_path_GREP
case `"$ac_path_GREP" --version 2>&1` in
*GNU*)
  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
*)
  ac_count=0
  $as_echo_n 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    $as_echo 'GREP' >> "conftest.nl"
    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_GREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_GREP="$ac_path_GREP"
      ac_path_GREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_GREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_GREP"; then
    as_fn_error "no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_GREP=$GREP
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP" >&5
$as_echo "$ac_cv_path_GREP" >&6; }
 GREP="$ac_cv_path_GREP"


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5
$as_echo_n "checking for egrep... " >&6; }
if test "${ac_cv_path_EGREP+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
   then ac_cv_path_EGREP="$GREP -E"
   else
     if test -z "$EGREP"; then
  ac_path_EGREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_prog in egrep; do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
      { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
# Check for GNU ac_path_EGREP and select it if it is found.
  # Check for GNU $ac_path_EGREP
case `"$ac_path_EGREP" --version 2>&1` in
*GNU*)
  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
*)
  ac_count=0
  $as_echo_n 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    $as_echo 'EGREP' >> "conftest.nl"
    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_EGREP="$ac_path_EGREP"
      ac_path_EGREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_EGREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_EGREP"; then
    as_fn_error "no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_EGREP=$EGREP
fi

   fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP" >&5
$as_echo "$ac_cv_path_EGREP" >&6; }
 EGREP="$ac_cv_path_EGREP"


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
$as_echo_n "checking for ANSI C header files... " >&6; }
if test "${ac_cv_header_stdc+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <float.h>

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_header_stdc=yes
else
  ac_cv_header_stdc=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext

if test $ac_cv_header_stdc = yes; then
  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <string.h>

_ACEOF
if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
  $EGREP "memchr" >/dev/null 2>&1; then :

else
  ac_cv_header_stdc=no
fi
rm -f conftest*

fi

if test $ac_cv_header_stdc = yes; then
  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdlib.h>

_ACEOF
if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
  $EGREP "free" >/dev/null 2>&1; then :

else
  ac_cv_header_stdc=no
fi
rm -f conftest*

fi

if test $ac_cv_header_stdc = yes; then
  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
  if test "$cross_compiling" = yes; then :
  :
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ctype.h>
#include <stdlib.h>
#if ((' ' & 0x0FF) == 0x020)
# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
#else
# define ISLOWER(c) \
		   (('a' <= (c) && (c) <= 'i') \
		     || ('j' <= (c) && (c) <= 'r') \
		     || ('s' <= (c) && (c) <= 'z'))
# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
#endif

#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
int
main ()
{
  int i;
  for (i = 0; i < 256; i++)
    if (XOR (islower (i), ISLOWER (i))
	|| toupper (i) != TOUPPER (i))
      return 2;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :

else
  ac_cv_header_stdc=no
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
$as_echo "$ac_cv_header_stdc" >&6; }
if test $ac_cv_header_stdc = yes; then

$as_echo "#define STDC_HEADERS 1" >>confdefs.h

fi

# On IRIX 5.3, sys/types and inttypes.h are conflicting.
for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
		  inttypes.h stdint.h unistd.h
do :
  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
"
eval as_val=\$$as_ac_Header
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done



  ac_fn_c_check_header_mongrel "$LINENO" "minix/config.h" "ac_cv_header_minix_config_h" "$ac_includes_default"
if test "x$ac_cv_header_minix_config_h" = x""yes; then :
  MINIX=yes
else
  MINIX=
fi


  if test "$MINIX" = yes; then

$as_echo "#define _POSIX_SOURCE 1" >>confdefs.h


$as_echo "#define _POSIX_1_SOURCE 2" >>confdefs.h


$as_echo "#define _MINIX 1" >>confdefs.h

  fi


  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__" >&5
$as_echo_n "checking whether it is safe to define __EXTENSIONS__... " >&6; }
if test "${ac_cv_safe_to_define___extensions__+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#	  define __EXTENSIONS__ 1
	  $ac_includes_default
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_safe_to_define___extensions__=yes
else
  ac_cv_safe_to_define___extensions__=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__" >&5
$as_echo "$ac_cv_safe_to_define___extensions__" >&6; }
  test $ac_cv_safe_to_define___extensions__ = yes &&
    $as_echo "#define __EXTENSIONS__ 1" >>confdefs.h

  $as_echo "#define _ALL_SOURCE 1" >>confdefs.h

  $as_echo "#define _GNU_SOURCE 1" >>confdefs.h

  $as_echo "#define _POSIX_PTHREAD_SEMANTICS 1" >>confdefs.h

  $as_echo "#define _TANDEM_SOURCE 1" >>confdefs.h




ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

# Path to auxiliary configuration files

# AC_CONFIG must be called before AM_INIT_AUTOMAKE
ac_aux_dir=
for ac_dir in config "$srcdir"/config; do
  for ac_t in install-sh install.sh shtool; do
    if test -f "$ac_dir/$ac_t"; then
      ac_aux_dir=$ac_dir
      ac_install_sh="$ac_aux_dir/$ac_t -c"
      break 2
    fi
  done
done
if test -z "$ac_aux_dir"; then
  as_fn_error "cannot find install-sh, install.sh, or shtool in config \"$srcdir\"/config" "$LINENO" 5
fi

# These three variables are undocumented and unsupported,
# and are intended to be withdrawn in a future Autoconf release.
# They can cause serious problems if a builder's source tree is in a directory
# whose full name contains unusual characters.
ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.




# standard init macros

# make dist produces both tar.bz2 and tar.gz packages
am__api_version='1.11'

# Find a good install program.  We prefer a C program (faster),
# so one script is as good as another.  But avoid the broken or
# incompatible versions:
# SysV /etc/install, /usr/sbin/install
# SunOS /usr/etc/install
# IRIX /sbin/install
# AIX /bin/install
# AmigaOS /C/install, which installs bootblocks on floppy discs
# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
# AFS /usr/afsws/bin/install, which mishandles nonexistent args
# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
# OS/2's system install, which has a completely different semantic
# ./install, which can be erroneously created by make from ./install.sh.
# Reject install programs that cannot install multiple files.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
$as_echo_n "checking for a BSD-compatible install... " >&6; }
if test -z "$INSTALL"; then
if test "${ac_cv_path_install+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    # Account for people who put trailing slashes in PATH elements.
case $as_dir/ in #((
  ./ | .// | /[cC]/* | \
  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
  /usr/ucb/* ) ;;
  *)
    # OSF1 and SCO ODT 3.0 have their own names for install.
    # Don't use installbsd from OSF since it installs stuff as root
    # by default.
    for ac_prog in ginstall scoinst install; do
      for ac_exec_ext in '' $ac_executable_extensions; do
	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
	  if test $ac_prog = install &&
	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # AIX install.  It has an incompatible calling convention.
	    :
	  elif test $ac_prog = install &&
	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # program-specific install script used by HP pwplus--don't use.
	    :
	  else
	    rm -rf conftest.one conftest.two conftest.dir
	    echo one > conftest.one
	    echo two > conftest.two
	    mkdir conftest.dir
	    if "$as_dir/$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir" &&
	      test -s conftest.one && test -s conftest.two &&
	      test -s conftest.dir/conftest.one &&
	      test -s conftest.dir/conftest.two
	    then
	      ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
	      break 3
	    fi
	  fi
	fi
      done
    done
    ;;
esac

  done
IFS=$as_save_IFS

rm -rf conftest.one conftest.two conftest.dir

fi
  if test "${ac_cv_path_install+set}" = set; then
    INSTALL=$ac_cv_path_install
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for INSTALL within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    INSTALL=$ac_install_sh
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
$as_echo "$INSTALL" >&6; }

# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
# It thinks the first close brace ends the variable substitution.
test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'

test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'

test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether build environment is sane" >&5
$as_echo_n "checking whether build environment is sane... " >&6; }
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[\\\"\#\$\&\'\`$am_lf]*)
    as_fn_error "unsafe absolute working directory name" "$LINENO" 5;;
esac
case $srcdir in
  *[\\\"\#\$\&\'\`$am_lf\ \	]*)
    as_fn_error "unsafe srcdir value: \`$srcdir'" "$LINENO" 5;;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$*" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$*" != "X $srcdir/configure conftest.file" \
      && test "$*" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      as_fn_error "ls -t appears to fail.  Make sure there is not a broken
alias in your environment" "$LINENO" 5
   fi

   test "$2" = conftest.file
   )
then
   # Ok.
   :
else
   as_fn_error "newly created file is older than distributed files!
Check your system clock" "$LINENO" 5
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
test "$program_prefix" != NONE &&
  program_transform_name="s&^&$program_prefix&;$program_transform_name"
# Use a double $ so make ignores it.
test "$program_suffix" != NONE &&
  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
# Double any \ or $.
# By default was `s,x,x', remove it if useless.
ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
program_transform_name=`$as_echo "$program_transform_name" | sed "$ac_script"`

# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`

if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`missing' script is too old or missing" >&5
$as_echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
fi

if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi

# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
if test "$cross_compiling" != no; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
set dummy ${ac_tool_prefix}strip; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_STRIP+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$STRIP"; then
  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
STRIP=$ac_cv_prog_STRIP
if test -n "$STRIP"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
$as_echo "$STRIP" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_STRIP"; then
  ac_ct_STRIP=$STRIP
  # Extract the first word of "strip", so it can be a program name with args.
set dummy strip; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_STRIP"; then
  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_STRIP="strip"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
if test -n "$ac_ct_STRIP"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
$as_echo "$ac_ct_STRIP" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi

  if test "x$ac_ct_STRIP" = x; then
    STRIP=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    STRIP=$ac_ct_STRIP
  fi
else
  STRIP="$ac_cv_prog_STRIP"
fi

fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a thread-safe mkdir -p" >&5
$as_echo_n "checking for a thread-safe mkdir -p... " >&6; }
if test -z "$MKDIR_P"; then
  if test "${ac_cv_path_mkdir+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_prog in mkdir gmkdir; do
	 for ac_exec_ext in '' $ac_executable_extensions; do
	   { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; } || continue
	   case `"$as_dir/$ac_prog$ac_exec_ext" --version 2>&1` in #(
	     'mkdir (GNU coreutils) '* | \
	     'mkdir (coreutils) '* | \
	     'mkdir (fileutils) '4.1*)
	       ac_cv_path_mkdir=$as_dir/$ac_prog$ac_exec_ext
	       break 3;;
	   esac
	 done
       done
  done
IFS=$as_save_IFS

fi

  test -d ./--version && rmdir ./--version
  if test "${ac_cv_path_mkdir+set}" = set; then
    MKDIR_P="$ac_cv_path_mkdir -p"
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for MKDIR_P within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    MKDIR_P="$ac_install_sh -d"
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $MKDIR_P" >&5
$as_echo "$MKDIR_P" >&6; }

mkdir_p="$MKDIR_P"
case $mkdir_p in
  [\\/$]* | ?:[\\/]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac

for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_AWK+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_AWK="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AWK=$ac_cv_prog_AWK
if test -n "$AWK"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
$as_echo "$AWK" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$AWK" && break
done

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
$as_echo_n "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
set x ${MAKE-make}
ac_make=`$as_echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
if { as_var=ac_cv_prog_make_${ac_make}_set; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  cat >conftest.make <<\_ACEOF
SHELL = /bin/sh
all:
	@echo '@@@%%%=$(MAKE)=@@@%%%'
_ACEOF
# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
case `${MAKE-make} -f conftest.make 2>/dev/null` in
  *@@@%%%=?*=@@@%%%*)
    eval ac_cv_prog_make_${ac_make}_set=yes;;
  *)
    eval ac_cv_prog_make_${ac_make}_set=no;;
esac
rm -f conftest.make
fi
if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
  SET_MAKE=
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
  SET_MAKE="MAKE=${MAKE-make}"
fi

rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null

DEPDIR="${am__leading_dot}deps"

ac_config_commands="$ac_config_commands depfiles"


am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for style of include used by $am_make" >&5
$as_echo_n "checking for style of include used by $am_make... " >&6; }
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $_am_result" >&5
$as_echo "$_am_result" >&6; }
rm -f confinc confmf

# Check whether --enable-dependency-tracking was given.
if test "${enable_dependency_tracking+set}" = set; then :
  enableval=$enable_dependency_tracking;
fi

if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
fi
 if test "x$enable_dependency_tracking" != xno; then
  AMDEP_TRUE=
  AMDEP_FALSE='#'
else
  AMDEP_TRUE='#'
  AMDEP_FALSE=
fi


if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  am__isrc=' -I$(srcdir)'
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    as_fn_error "source directory already configured; run \"make distclean\" there first" "$LINENO" 5
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi


# Define the identity of the package.
 PACKAGE='dvda-author'
 VERSION='10.06'


cat >>confdefs.h <<_ACEOF
#define PACKAGE "$PACKAGE"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define VERSION "$VERSION"
_ACEOF

# Some tools Automake needs.

ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}


AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}


AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}


AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}


MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}

# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
# Always define AMTAR for backward compatibility.

AMTAR=${AMTAR-"${am_missing_run}tar"}

am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'




depcc="$CC"   am_compiler_list=

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
$as_echo_n "checking dependency style of $depcc... " >&6; }
if test "${am_cv_CC_dependencies_compiler_type+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_CC_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
  fi
  am__universal=false
  case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_CC_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_CC_dependencies_compiler_type=none
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type" >&5
$as_echo "$am_cv_CC_dependencies_compiler_type" >&6; }
CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type

 if
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
  am__fastdepCC_TRUE=
  am__fastdepCC_FALSE='#'
else
  am__fastdepCC_TRUE='#'
  am__fastdepCC_FALSE=
fi




ac_config_headers="$ac_config_headers config.h"


# uses default prefix /usr unless otherwise specified by --prefix= on commandline

   if test $prefix = NONE; then :
  prefix=$ac_default_prefix
fi

# Make sure we can run config.sub.
$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
  as_fn_error "cannot run $SHELL $ac_aux_dir/config.sub" "$LINENO" 5

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
$as_echo_n "checking build system type... " >&6; }
if test "${ac_cv_build+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_build_alias=$build_alias
test "x$ac_build_alias" = x &&
  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
test "x$ac_build_alias" = x &&
  as_fn_error "cannot guess build type; you must specify one" "$LINENO" 5
ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
  as_fn_error "$SHELL $ac_aux_dir/config.sub $ac_build_alias failed" "$LINENO" 5

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
$as_echo "$ac_cv_build" >&6; }
case $ac_cv_build in
*-*-*) ;;
*) as_fn_error "invalid value of canonical build" "$LINENO" 5;;
esac
build=$ac_cv_build
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_build
shift
build_cpu=$1
build_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
build_os=$*
IFS=$ac_save_IFS
case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac



# do not use libtool in this version, for arcane and unclear reasons.
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
set dummy ${ac_tool_prefix}ranlib; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_RANLIB+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$RANLIB"; then
  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
RANLIB=$ac_cv_prog_RANLIB
if test -n "$RANLIB"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
$as_echo "$RANLIB" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_RANLIB"; then
  ac_ct_RANLIB=$RANLIB
  # Extract the first word of "ranlib", so it can be a program name with args.
set dummy ranlib; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_RANLIB"; then
  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_RANLIB="ranlib"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
if test -n "$ac_ct_RANLIB"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
$as_echo "$ac_ct_RANLIB" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi

  if test "x$ac_ct_RANLIB" = x; then
    RANLIB=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    RANLIB=$ac_ct_RANLIB
  fi
else
  RANLIB="$ac_cv_prog_RANLIB"
fi


# probably spurious on most platforms yet useful on MSYS
CPPFLAGS="$CPPFLAGS -I/usr/include -I/usr/local/include"
#default configuration
#by default, link, do not build, and use Ogg FLAC:
FLAC_BUILD=no
STATIC_SOX=no
SOX_BUILD=no
#supposing there is no SoX bug. This will be tested later by sox-debug.m4
circumvent_sox_bug=no
#preserving user CFLAGS input
cflags_save="$CFLAGS -std=c99"
#redefine CFLAGS to avoid systematic -g -O2 introduced by AC_PROG_CC
#This should come after AC_PROG macros
ROOTDIR=`cd "$srcdir" ; pwd`
#preparing local build of downloaded libs
if test -d "local"; then :
  rm -rf "local" && mkdir "local"
else
  mkdir "local"
fi


# -----------------------------------------------------------------------------------------
# configuration file installation
#
# dvda-author.conf   will be installed in SHORTLINKDIR=INSTALL_CONF_DIR.
# ac_defining INSTALL_CONF_DIR is an alternative to configuring commonvars.h.in
# in AC_CONFIG_FILES. This requires:
# a) AC_DEFINE_UNQUOTED
# b) another identifier than SHORTLINKDIR
# c) including <config.h> in commonvars.h
# if not using configure, define SETTINGSFILE=full/path/to/dvda-author.conf at compile time
# ------------------------------------------------------------------------------------------

# checks installation dirs
# For BSD-type packaging, it is preferable not to use /usr/local as a default prefix




# Check whether --with-config was given.
if test "${with_config+set}" = set; then :
  withval=$with_config; SHORTLINKDIR=$withval
fi


datarootdir="${prefix}/share"
PIXDIR=$datarootdir/pixmaps
if  test x$SHORTLINKDIR = x ; then :
  SHORTLINKDIR=$datarootdir/applications/$PACKAGE_TARNAME
fi
MENUDIR=$SHORTLINKDIR/menu
if  test $exec_prefix = "NONE" ; then :

 { $as_echo "$as_me:${as_lineno-$LINENO}: result: Using libdir=${prefix}/lib" >&5
$as_echo "Using libdir=${prefix}/lib" >&6; }
 libdir="${prefix}/lib"
 bindir="${prefix}/bin"

fi


cat >>confdefs.h <<_ACEOF
#define BINDIR "${bindir}"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define INSTALL_CONF_DIR "$SHORTLINKDIR"
_ACEOF


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
$as_echo_n "checking for a sed that does not truncate output... " >&6; }
if test "${ac_cv_path_SED+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
     for ac_i in 1 2 3 4 5 6 7; do
       ac_script="$ac_script$as_nl$ac_script"
     done
     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
     { ac_script=; unset ac_script;}
     if test -z "$SED"; then
  ac_path_SED_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_prog in sed gsed; do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
      { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
# Check for GNU ac_path_SED and select it if it is found.
  # Check for GNU $ac_path_SED
case `"$ac_path_SED" --version 2>&1` in
*GNU*)
  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
*)
  ac_count=0
  $as_echo_n 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    $as_echo '' >> "conftest.nl"
    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_SED_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_SED="$ac_path_SED"
      ac_path_SED_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_SED_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_SED"; then
    as_fn_error "no acceptable sed could be found in \$PATH" "$LINENO" 5
  fi
else
  ac_cv_path_SED=$SED
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
$as_echo "$ac_cv_path_SED" >&6; }
 SED="$ac_cv_path_SED"
  rm -f conftest.sed



# Check whether --with-debug was given.
if test "${with_debug+set}" = set; then :
  withval=$with_debug;
       if  test "x$withval" = "xno"; then :

          if  test x$ac_cv_c_compiler_gnu = xyes ; then :

             CFLAGS="-g0 -O3"
                #exceptionally erasing -g and -O2 from user CFLAGS input
                cflags_save=`echo $cflags_save | $SED "s/-g \(.*\)-O2/ \1/g"`
             LIBS="$LIBS -s"

fi

else

	  if  test "x$withval" = "xfull"; then :

	    if  test x$ac_cv_c_compiler_gnu = xyes ; then :

		# -O2 is necessary for inlining, do not take it off
            CFLAGS="-std=c99 -g3 -O2 -Wall -Wextra -pedantic"
	    cflags_save=`echo $cflags_save | $SED "s/-g \(.*\)-O2/ \1/g"`
fi

else

	    CFLAGS="-O2 $withval"

fi


fi

else

      LIBS="$LIBS -s"

fi


#adding user input
CFLAGS="$CFLAGS $cflags_save"


# Check whether --with-debug-flags was given.
if test "${with_debug_flags+set}" = set; then :
  withval=$with_debug_flags;
         DEBUG_FLAGS=$withval

fi



#======================================
# Core feature macros, see m4 directory
#======================================

# insert lib-specific tests here


  if  test x$SOX_LIB_INPUT != x ; then :
  # looking into --with-sox specified lib

   as_ac_Lib=`$as_echo "ac_cv_lib_$SOX_LIB_INPUT''_getopt_long" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for getopt_long in -l$SOX_LIB_INPUT" >&5
$as_echo_n "checking for getopt_long in -l$SOX_LIB_INPUT... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$SOX_LIB_INPUT  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char getopt_long ();
int
main ()
{
return getopt_long ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :

                 { $as_echo "$as_me:${as_lineno-$LINENO}: getopt_long detected in SoX code...
 circumventing SoX bug by using glibc." >&5
$as_echo "$as_me: getopt_long detected in SoX code...
 circumventing SoX bug by using glibc." >&6;}
                 IBERTY_BUILD=yes
                 circumvent_sox_bug=yes

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: getopt_long not detected in SoX code... OK" >&5
$as_echo "$as_me: getopt_long not detected in SoX code... OK" >&6;}

fi


else


# looking into installed lib
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing getopt_long" >&5
$as_echo_n "checking for library containing getopt_long... " >&6; }
if test "${ac_cv_search_getopt_long+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char getopt_long ();
int
main ()
{
return getopt_long ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' ; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_search_getopt_long=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if test "${ac_cv_search_getopt_long+set}" = set; then :
  break
fi
done
if test "${ac_cv_search_getopt_long+set}" = set; then :

else
  ac_cv_search_getopt_long=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_getopt_long" >&5
$as_echo "$ac_cv_search_getopt_long" >&6; }
ac_res=$ac_cv_search_getopt_long
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
   { $as_echo "$as_me:${as_lineno-$LINENO}: getopt_long detected in SoX code...
   circumventing SoX bug by using glibc." >&5
$as_echo "$as_me: getopt_long detected in SoX code...
   circumventing SoX bug by using glibc." >&6;}
			             IBERTY_BUILD=yes
			             circumvent_sox_bug=yes

$as_echo "#define HAVE_SOX_BUG 1" >>confdefs.h


else
   { $as_echo "$as_me:${as_lineno-$LINENO}: getopt_long not detected in SoX code... OK" >&5
$as_echo "$as_me: getopt_long not detected in SoX code... OK" >&6;}
fi


fi

   if test $IBERTY_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_IBERTY_BUILD_TRUE=
  HAVE_IBERTY_BUILD_FALSE='#'
else
  HAVE_IBERTY_BUILD_TRUE='#'
  HAVE_IBERTY_BUILD_FALSE=
fi


$as_echo "#define HAVE_IBERTY_BUILD 1" >>confdefs.h




# invoking main M4sh subroutine


# ====== Auxiliary tools: man page and html doc, mjpegtools, ImageMagick ========= #

#mkisofs and cdrecord are tested by DVDA_DOWNLOAD



#don't quote here
# Extract the first word of "help2man", so it can be a program name with args.
set dummy help2man; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_HELP2MAN+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $HELP2MAN in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_HELP2MAN="$HELP2MAN" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_HELP2MAN="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
HELP2MAN=$ac_cv_path_HELP2MAN
if test -n "$HELP2MAN"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $HELP2MAN" >&5
$as_echo "$HELP2MAN" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$HELP2MAN = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No man page will be generated after install: help2man" >&5
$as_echo "$as_me: ===INF===  No man page will be generated after install: help2man" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  man page will be generated after install: help2man" >&5
$as_echo "$as_me: ===INF===  man page will be generated after install: help2man" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_HELP2MAN $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HELP2MAN "$HELP2MAN"
_ACEOF

 if test $auxbool = 1; then
  HAVE_HELP2MAN_TRUE=
  HAVE_HELP2MAN_FALSE='#'
else
  HAVE_HELP2MAN_TRUE='#'
  HAVE_HELP2MAN_FALSE=
fi





#don't quote here
# Extract the first word of "man2html", so it can be a program name with args.
set dummy man2html; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MAN2HTML+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MAN2HTML in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MAN2HTML="$MAN2HTML" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MAN2HTML="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MAN2HTML=$ac_cv_path_MAN2HTML
if test -n "$MAN2HTML"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAN2HTML" >&5
$as_echo "$MAN2HTML" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MAN2HTML = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No man page will be generated after install: man2html" >&5
$as_echo "$as_me: ===INF===  No man page will be generated after install: man2html" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  man page will be generated after install: man2html" >&5
$as_echo "$as_me: ===INF===  man page will be generated after install: man2html" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MAN2HTML $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MAN2HTML "$MAN2HTML"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MAN2HTML_TRUE=
  HAVE_MAN2HTML_FALSE='#'
else
  HAVE_MAN2HTML_TRUE='#'
  HAVE_MAN2HTML_FALSE=
fi





#don't quote here
# Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$CURL = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patched version of prerequisites will be downloaded: curl" >&5
$as_echo "$as_me: ===INF===  No patched version of prerequisites will be downloaded: curl" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  patched version of prerequisites will be downloaded: curl" >&5
$as_echo "$as_me: ===INF===  patched version of prerequisites will be downloaded: curl" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_CURL $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define CURL "$CURL"
_ACEOF

 if test $auxbool = 1; then
  HAVE_CURL_TRUE=
  HAVE_CURL_FALSE='#'
else
  HAVE_CURL_TRUE='#'
  HAVE_CURL_FALSE=
fi





#don't quote here
# Extract the first word of "jpeg2yuv", so it can be a program name with args.
set dummy jpeg2yuv; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_JPEG2YUV+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $JPEG2YUV in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_JPEG2YUV="$JPEG2YUV" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_JPEG2YUV="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
JPEG2YUV=$ac_cv_path_JPEG2YUV
if test -n "$JPEG2YUV"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $JPEG2YUV" >&5
$as_echo "$JPEG2YUV" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$JPEG2YUV = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No background pictures can be converted to background videos: jpeg2yuv" >&5
$as_echo "$as_me: ===INF===  No background pictures can be converted to background videos: jpeg2yuv" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  background pictures can be converted to background videos: jpeg2yuv" >&5
$as_echo "$as_me: ===INF===  background pictures can be converted to background videos: jpeg2yuv" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_JPEG2YUV $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define JPEG2YUV "$JPEG2YUV"
_ACEOF

 if test $auxbool = 1; then
  HAVE_JPEG2YUV_TRUE=
  HAVE_JPEG2YUV_FALSE='#'
else
  HAVE_JPEG2YUV_TRUE='#'
  HAVE_JPEG2YUV_FALSE=
fi





#don't quote here
# Extract the first word of "mplex", so it can be a program name with args.
set dummy mplex; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MPLEX+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MPLEX in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MPLEX="$MPLEX" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MPLEX="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MPLEX=$ac_cv_path_MPLEX
if test -n "$MPLEX"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MPLEX" >&5
$as_echo "$MPLEX" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MPLEX = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No menus can be muxed: mplex" >&5
$as_echo "$as_me: ===INF===  No menus can be muxed: mplex" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  menus can be muxed: mplex" >&5
$as_echo "$as_me: ===INF===  menus can be muxed: mplex" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MPLEX $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MPLEX "$MPLEX"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MPLEX_TRUE=
  HAVE_MPLEX_FALSE='#'
else
  HAVE_MPLEX_TRUE='#'
  HAVE_MPLEX_FALSE=
fi





#don't quote here
# Extract the first word of "mp2enc", so it can be a program name with args.
set dummy mp2enc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MP2ENC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MP2ENC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MP2ENC="$MP2ENC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MP2ENC="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MP2ENC=$ac_cv_path_MP2ENC
if test -n "$MP2ENC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MP2ENC" >&5
$as_echo "$MP2ENC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MP2ENC = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No mp2 soundtracks can be created: mp2enc" >&5
$as_echo "$as_me: ===INF===  No mp2 soundtracks can be created: mp2enc" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  mp2 soundtracks can be created: mp2enc" >&5
$as_echo "$as_me: ===INF===  mp2 soundtracks can be created: mp2enc" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MP2ENC $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MP2ENC "$MP2ENC"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MP2ENC_TRUE=
  HAVE_MP2ENC_FALSE='#'
else
  HAVE_MP2ENC_TRUE='#'
  HAVE_MP2ENC_FALSE=
fi





#don't quote here
# Extract the first word of "mpeg2enc", so it can be a program name with args.
set dummy mpeg2enc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MPEG2ENC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MPEG2ENC in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MPEG2ENC="$MPEG2ENC" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MPEG2ENC="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MPEG2ENC=$ac_cv_path_MPEG2ENC
if test -n "$MPEG2ENC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MPEG2ENC" >&5
$as_echo "$MPEG2ENC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MPEG2ENC = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No mpeg2 streams can be encoded: mpeg2enc" >&5
$as_echo "$as_me: ===INF===  No mpeg2 streams can be encoded: mpeg2enc" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  mpeg2 streams can be encoded: mpeg2enc" >&5
$as_echo "$as_me: ===INF===  mpeg2 streams can be encoded: mpeg2enc" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MPEG2ENC $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MPEG2ENC "$MPEG2ENC"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MPEG2ENC_TRUE=
  HAVE_MPEG2ENC_FALSE='#'
else
  HAVE_MPEG2ENC_TRUE='#'
  HAVE_MPEG2ENC_FALSE=
fi





#don't quote here
# Extract the first word of "spumux", so it can be a program name with args.
set dummy spumux; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SPUMUX+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SPUMUX in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SPUMUX="$SPUMUX" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SPUMUX="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SPUMUX=$ac_cv_path_SPUMUX
if test -n "$SPUMUX"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SPUMUX" >&5
$as_echo "$SPUMUX" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$SPUMUX = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No menu titles can be muxed: spumux" >&5
$as_echo "$as_me: ===INF===  No menu titles can be muxed: spumux" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  menu titles can be muxed: spumux" >&5
$as_echo "$as_me: ===INF===  menu titles can be muxed: spumux" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_SPUMUX $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define SPUMUX "$SPUMUX"
_ACEOF

 if test $auxbool = 1; then
  HAVE_SPUMUX_TRUE=
  HAVE_SPUMUX_FALSE='#'
else
  HAVE_SPUMUX_TRUE='#'
  HAVE_SPUMUX_FALSE=
fi





#don't quote here
# Extract the first word of "mogrify", so it can be a program name with args.
set dummy mogrify; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MOGRIFY+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MOGRIFY in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MOGRIFY="$MOGRIFY" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MOGRIFY="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MOGRIFY=$ac_cv_path_MOGRIFY
if test -n "$MOGRIFY"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MOGRIFY" >&5
$as_echo "$MOGRIFY" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MOGRIFY = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No automatic menus can be generated: mogrify" >&5
$as_echo "$as_me: ===INF===  No automatic menus can be generated: mogrify" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  automatic menus can be generated: mogrify" >&5
$as_echo "$as_me: ===INF===  automatic menus can be generated: mogrify" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MOGRIFY $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MOGRIFY "$MOGRIFY"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MOGRIFY_TRUE=
  HAVE_MOGRIFY_FALSE='#'
else
  HAVE_MOGRIFY_TRUE='#'
  HAVE_MOGRIFY_FALSE=
fi





#don't quote here
# Extract the first word of "convert", so it can be a program name with args.
set dummy convert; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CONVERT+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CONVERT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CONVERT="$CONVERT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CONVERT="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CONVERT=$ac_cv_path_CONVERT
if test -n "$CONVERT"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CONVERT" >&5
$as_echo "$CONVERT" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$CONVERT = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No automatic menus can be generated: convert" >&5
$as_echo "$as_me: ===INF===  No automatic menus can be generated: convert" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  automatic menus can be generated: convert" >&5
$as_echo "$as_me: ===INF===  automatic menus can be generated: convert" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_CONVERT $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define CONVERT "$CONVERT"
_ACEOF

 if test $auxbool = 1; then
  HAVE_CONVERT_TRUE=
  HAVE_CONVERT_FALSE='#'
else
  HAVE_CONVERT_TRUE='#'
  HAVE_CONVERT_FALSE=
fi





#don't quote here
# Extract the first word of "mkisofs", so it can be a program name with args.
set dummy mkisofs; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MKISOFS+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MKISOFS in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MKISOFS="$MKISOFS" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MKISOFS="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MKISOFS=$ac_cv_path_MKISOFS
if test -n "$MKISOFS"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MKISOFS" >&5
$as_echo "$MKISOFS" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MKISOFS = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No ISO authoring software: mkisofs" >&5
$as_echo "$as_me: ===INF===  No ISO authoring software: mkisofs" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ISO authoring software: mkisofs" >&5
$as_echo "$as_me: ===INF===  ISO authoring software: mkisofs" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MKISOFS $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MKISOFS "$MKISOFS"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MKISOFS_TRUE=
  HAVE_MKISOFS_FALSE='#'
else
  HAVE_MKISOFS_TRUE='#'
  HAVE_MKISOFS_FALSE=
fi





#don't quote here
# Extract the first word of "cdrecord", so it can be a program name with args.
set dummy cdrecord; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CDRECORD+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CDRECORD in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CDRECORD="$CDRECORD" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CDRECORD="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CDRECORD=$ac_cv_path_CDRECORD
if test -n "$CDRECORD"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CDRECORD" >&5
$as_echo "$CDRECORD" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$CDRECORD = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No recording software: cdrecord" >&5
$as_echo "$as_me: ===INF===  No recording software: cdrecord" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  recording software: cdrecord" >&5
$as_echo "$as_me: ===INF===  recording software: cdrecord" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_CDRECORD $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define CDRECORD "$CDRECORD"
_ACEOF

 if test $auxbool = 1; then
  HAVE_CDRECORD_TRUE=
  HAVE_CDRECORD_FALSE='#'
else
  HAVE_CDRECORD_TRUE='#'
  HAVE_CDRECORD_FALSE=
fi





#don't quote here
# Extract the first word of "md5sum", so it can be a program name with args.
set dummy md5sum; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_MD5SUM+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $MD5SUM in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MD5SUM="$MD5SUM" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MD5SUM="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
MD5SUM=$ac_cv_path_MD5SUM
if test -n "$MD5SUM"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MD5SUM" >&5
$as_echo "$MD5SUM" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$MD5SUM = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No MD5 checksum utility" >&5
$as_echo "$as_me: ===INF===  No MD5 checksum utility" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  MD5 checksum utility" >&5
$as_echo "$as_me: ===INF===  MD5 checksum utility" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_MD5SUM $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define MD5SUM "$MD5SUM"
_ACEOF

 if test $auxbool = 1; then
  HAVE_MD5SUM_TRUE=
  HAVE_MD5SUM_FALSE='#'
else
  HAVE_MD5SUM_TRUE='#'
  HAVE_MD5SUM_FALSE=
fi





#don't quote here
# Extract the first word of "autoconf", so it can be a program name with args.
set dummy autoconf; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_AUTOCONF+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $AUTOCONF in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_AUTOCONF="$AUTOCONF" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_AUTOCONF="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
AUTOCONF=$ac_cv_path_AUTOCONF
if test -n "$AUTOCONF"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AUTOCONF" >&5
$as_echo "$AUTOCONF" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$AUTOCONF = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No configure system build: autoconf" >&5
$as_echo "$as_me: ===INF===  No configure system build: autoconf" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  configure system build: autoconf" >&5
$as_echo "$as_me: ===INF===  configure system build: autoconf" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_AUTOCONF $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define AUTOCONF "$AUTOCONF"
_ACEOF

 if test $auxbool = 1; then
  HAVE_AUTOCONF_TRUE=
  HAVE_AUTOCONF_FALSE='#'
else
  HAVE_AUTOCONF_TRUE='#'
  HAVE_AUTOCONF_FALSE=
fi





#don't quote here
# Extract the first word of "automake", so it can be a program name with args.
set dummy automake; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_AUTOMAKE+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $AUTOMAKE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_AUTOMAKE="$AUTOMAKE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_AUTOMAKE="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
AUTOMAKE=$ac_cv_path_AUTOMAKE
if test -n "$AUTOMAKE"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AUTOMAKE" >&5
$as_echo "$AUTOMAKE" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


if test x$AUTOMAKE = x ; then :

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No make system build: automake" >&5
$as_echo "$as_me: ===INF===  No make system build: automake" >&6;}
   auxbool=0

else

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  make system build: automake" >&5
$as_echo "$as_me: ===INF===  make system build: automake" >&6;}
   auxbool=1

fi

cat >>confdefs.h <<_ACEOF
#define HAVE_AUTOMAKE $auxbool
_ACEOF


cat >>confdefs.h <<_ACEOF
#define AUTOMAKE "$AUTOMAKE"
_ACEOF

 if test $auxbool = 1; then
  HAVE_AUTOMAKE_TRUE=
  HAVE_AUTOMAKE_FALSE='#'
else
  HAVE_AUTOMAKE_TRUE='#'
  HAVE_AUTOMAKE_FALSE=
fi








  #=================  platform-specific features =====================================#


    case ${build} in #(
  *-*-mingw32*) :

		     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  MinGW detected: libsox and glibc will be built from source" >&5
$as_echo "$as_me: ===INF===  MinGW detected: libsox and glibc will be built from source" >&6;}









# Check whether --enable-sox-build or --disable-sox-build was given.

# Check whether --enable-sox-build was given.
if test "${enable_sox_build+set}" = set; then :
  enableval=$enable_sox_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install sox from source code... " >&6;}
   SOX_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install sox from source code... " >&6;}
      SOX_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_SOX_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_SOX_BUILD_TRUE=
  HAVE_SOX_BUILD_FALSE='#'
else
  HAVE_SOX_BUILD_TRUE='#'
  HAVE_SOX_BUILD_FALSE=
fi
















# Check whether --enable-iberty-build or --disable-iberty-build was given.

# Check whether --enable-iberty-build was given.
if test "${enable_iberty_build+set}" = set; then :
  enableval=$enable_iberty_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install iberty from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install iberty from source code... " >&6;}
   IBERTY_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install iberty from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install iberty from source code... " >&6;}
      IBERTY_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_IBERTY_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_IBERTY_BUILD_TRUE=
  HAVE_IBERTY_BUILD_FALSE='#'
else
  HAVE_IBERTY_BUILD_TRUE='#'
  HAVE_IBERTY_BUILD_FALSE=
fi






 ;; #(
  *-*-cygwin*) :










# Check whether --enable-sox-build or --disable-sox-build was given.

# Check whether --enable-sox-build was given.
if test "${enable_sox_build+set}" = set; then :
  enableval=$enable_sox_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install sox from source code... " >&6;}
   SOX_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install sox from source code... " >&6;}
      SOX_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_SOX_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_SOX_BUILD_TRUE=
  HAVE_SOX_BUILD_FALSE='#'
else
  HAVE_SOX_BUILD_TRUE='#'
  HAVE_SOX_BUILD_FALSE=
fi
















# Check whether --enable-iberty-build or --disable-iberty-build was given.

# Check whether --enable-iberty-build was given.
if test "${enable_iberty_build+set}" = set; then :
  enableval=$enable_iberty_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install iberty from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install iberty from source code... " >&6;}
   IBERTY_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install iberty from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install iberty from source code... " >&6;}
      IBERTY_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_IBERTY_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_IBERTY_BUILD_TRUE=
  HAVE_IBERTY_BUILD_FALSE='#'
else
  HAVE_IBERTY_BUILD_TRUE='#'
  HAVE_IBERTY_BUILD_FALSE=
fi







		     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cygwin detected: libsoX and glibc will be built from source" >&5
$as_echo "$as_me: ===INF===  Cygwin detected: libsoX and glibc will be built from source" >&6;}  ;; #(
  *) :
     ;;
esac
          # on cygwin, libsox dependencies will not be resolved (platform limitation)

    # put feature specific parameters after global parameters to redefine X_LIBs.

  #===================== build features ==============================================#












# Check whether --enable-libogg-build or --disable-libogg-build was given.

# Check whether --enable-libogg-build was given.
if test "${enable_libogg_build+set}" = set; then :
  enableval=$enable_libogg_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install libogg from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install libogg from source code... " >&6;}
   LIBOGG_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install libogg from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install libogg from source code... " >&6;}
      LIBOGG_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_LIBOGG_BUILD_TRUE=
  HAVE_LIBOGG_BUILD_FALSE='#'
else
  HAVE_LIBOGG_BUILD_TRUE='#'
  HAVE_LIBOGG_BUILD_FALSE=
fi















# Check whether --enable-flac-build or --disable-flac-build was given.

# Check whether --enable-flac-build was given.
if test "${enable_flac_build+set}" = set; then :
  enableval=$enable_flac_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install flac from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install flac from source code... " >&6;}
   FLAC_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install flac from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install flac from source code... " >&6;}
      FLAC_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_FLAC_BUILD_TRUE=
  HAVE_FLAC_BUILD_FALSE='#'
else
  HAVE_FLAC_BUILD_TRUE='#'
  HAVE_FLAC_BUILD_FALSE=
fi















# Check whether --enable-sox-build or --disable-sox-build was given.

# Check whether --enable-sox-build was given.
if test "${enable_sox_build+set}" = set; then :
  enableval=$enable_sox_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install sox from source code... " >&6;}
   SOX_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install sox from source code... " >&6;}
      SOX_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_SOX_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_SOX_BUILD_TRUE=
  HAVE_SOX_BUILD_FALSE='#'
else
  HAVE_SOX_BUILD_TRUE='#'
  HAVE_SOX_BUILD_FALSE=
fi















# Check whether --enable-all-builds or --disable-all-builds was given.

# Check whether --enable-all-builds was given.
if test "${enable_all_builds+set}" = set; then :
  enableval=$enable_all_builds;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install all core dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install all core dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> from source code... " >&6;}
   ALL_BUILDS=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install all core dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install all core dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> from source code... " >&6;}
      ALL_BUILDS=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_ALL_BUILDS $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_ALL_BUILDS_TRUE=
  HAVE_ALL_BUILDS_FALSE='#'
else
  HAVE_ALL_BUILDS_TRUE='#'
  HAVE_ALL_BUILDS_FALSE=
fi















# Check whether --enable-dvdauthor-build or --disable-dvdauthor-build was given.

# Check whether --enable-dvdauthor-build was given.
if test "${enable_dvdauthor_build+set}" = set; then :
  enableval=$enable_dvdauthor_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install dvdauthor from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install dvdauthor from source code... " >&6;}
   DVDAUTHOR_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install dvdauthor from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install dvdauthor from source code... " >&6;}
      DVDAUTHOR_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_DVDAUTHOR_BUILD_TRUE=
  HAVE_DVDAUTHOR_BUILD_FALSE='#'
else
  HAVE_DVDAUTHOR_BUILD_TRUE='#'
  HAVE_DVDAUTHOR_BUILD_FALSE=
fi















# Check whether --enable-cdrtools-build or --disable-cdrtools-build was given.

# Check whether --enable-cdrtools-build was given.
if test "${enable_cdrtools_build+set}" = set; then :
  enableval=$enable_cdrtools_build;
  if test x$enableval != xno; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will configure, build and install cdrtools from source code... " >&5
$as_echo "$as_me: ===INF===  Will configure, build and install cdrtools from source code... " >&6;}
   CDRTOOLS_BUILD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not configure, build and install cdrtools from source code... " >&5
$as_echo "$as_me: ===INF===  Will not configure, build and install cdrtools from source code... " >&6;}
      CDRTOOLS_BUILD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS_BUILD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_CDRTOOLS_BUILD_TRUE=
  HAVE_CDRTOOLS_BUILD_FALSE='#'
else
  HAVE_CDRTOOLS_BUILD_TRUE='#'
  HAVE_CDRTOOLS_BUILD_FALSE=
fi















# Check whether --enable-static-sox or --disable-static-sox was given.

# Check whether --enable-static-sox was given.
if test "${enable_static_sox+set}" = set; then :
  enableval=$enable_static_sox;
  if test x$enableval != xno; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using static library build only. You may need to install the following libraries:
      libasound libpng libz libltdl libmagic libsamplerate, using "-dev" packages.
    Warning: Availability will not be tested. An error message 'Cannot find -l...' at the
    end of compiling stage will indicate that you need to install the corresponding library." >&5
$as_echo "$as_me: ===INF===  Using static library build only. You may need to install the following libraries:
      libasound libpng libz libltdl libmagic libsamplerate, using "-dev" packages.
    Warning: Availability will not be tested. An error message 'Cannot find -l...' at the
    end of compiling stage will indicate that you need to install the corresponding library." >&6;}
			      SOX_LINK="$SOX_LINK -lasound -lpng -lz -lltdl -lmagic -lsamplerate"
			      SOX_LIB="/usr/lib/libsox.a `find /usr/lib/sox/ -regex lib.*a`"
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will enable static sox... " >&5
$as_echo "$as_me: ===INF===  Will enable static sox... " >&6;}
   STATIC_SOX=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not enable static sox... " >&5
$as_echo "$as_me: ===INF===  Will not enable static sox... " >&6;}
      STATIC_SOX=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_STATIC_SOX $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_STATIC_SOX_TRUE=
  HAVE_STATIC_SOX_FALSE='#'
else
  HAVE_STATIC_SOX_TRUE='#'
  HAVE_STATIC_SOX_FALSE=
fi








    # downloading (patched) version of source code
    # from sourceforge mirror network except for cdrtools (berlios)
    # possible Sourceforge mirrors: kent, garr, voxel, free_fr ... Specify ./configure SF_MIRRORS=kent on command line otherwise autoselect is performed



    # basename(-patch), version=[untarred directory version name,appended label], root download site, root site for patch download, mirror root characteristics, MD5SUM for main package
    # download site = for Sourceforge:
    #     http://sourceforge.net/projects/basename/basename/mirror root characteristics/basename-version.tar.[bz2|gz]/download?use_mirror=$SF_MIRROR
    #               = for cdrtools:
    #     mirror root characteristics/basename-version.tar.[bz2|gz]













# Check whether --enable-dvdauthor-patch or --disable-dvdauthor-patch was given.

# Check whether --enable-dvdauthor-patch was given.
if test "${enable_dvdauthor_patch+set}" = set; then :
  enableval=$enable_dvdauthor_patch;
  if test x$enableval != xno; then

    if test xdvdauthor-patch = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xdvdauthor-patch != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download and patch dvdauthor from source code... " >&5
$as_echo "$as_me: ===INF===  Will download and patch dvdauthor from source code... " >&6;}
   DVDAUTHOR_PATCH=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download and patch dvdauthor from source code... " >&5
$as_echo "$as_me: ===INF===  Will not download and patch dvdauthor from source code... " >&6;}
      DVDAUTHOR_PATCH=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR_PATCH $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_DVDAUTHOR_PATCH_TRUE=
  HAVE_DVDAUTHOR_PATCH_FALSE='#'
else
  HAVE_DVDAUTHOR_PATCH_TRUE='#'
  HAVE_DVDAUTHOR_PATCH_FALSE=
fi








 if test dvdauthor-patch = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing dvdauthor version..." >&5
$as_echo "$as_me: Testing dvdauthor version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy dvdauthor; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of dvdauthor is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of dvdauthor is installed in path $SOFWARE_PATH" >&6;}
       DVDAUTHOR="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of dvdauthor is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of dvdauthor is not patched" >&6;}

$as_echo "#define HAVE_NO_DVDAUTHOR_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of dvdauthor is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of dvdauthor is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "$SOFTWARE_PATH"
_ACEOF




fi










# Check whether --enable-cdrtools-patch or --disable-cdrtools-patch was given.

# Check whether --enable-cdrtools-patch was given.
if test "${enable_cdrtools_patch+set}" = set; then :
  enableval=$enable_cdrtools_patch;
  if test x$enableval != xno; then

    if test xcdrtools-patch = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xcdrtools-patch != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download and patch cdrtools from source code... " >&5
$as_echo "$as_me: ===INF===  Will download and patch cdrtools from source code... " >&6;}
   CDRTOOLS_PATCH=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download and patch cdrtools from source code... " >&5
$as_echo "$as_me: ===INF===  Will not download and patch cdrtools from source code... " >&6;}
      CDRTOOLS_PATCH=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS_PATCH $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_CDRTOOLS_PATCH_TRUE=
  HAVE_CDRTOOLS_PATCH_FALSE='#'
else
  HAVE_CDRTOOLS_PATCH_TRUE='#'
  HAVE_CDRTOOLS_PATCH_FALSE=
fi








 if test cdrtools-patch = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing cdrtools version..." >&5
$as_echo "$as_me: Testing cdrtools version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy cdrtools; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of cdrtools is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of cdrtools is installed in path $SOFWARE_PATH" >&6;}
       CDRTOOLS="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of cdrtools is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of cdrtools is not patched" >&6;}

$as_echo "#define HAVE_NO_CDRTOOLS_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of cdrtools is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of cdrtools is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "$SOFTWARE_PATH"
_ACEOF




fi










# Check whether --enable-sox-patch or --disable-sox-patch was given.

# Check whether --enable-sox-patch was given.
if test "${enable_sox_patch+set}" = set; then :
  enableval=$enable_sox_patch;
  if test x$enableval != xno; then

    if test xsox-patch = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xsox-patch != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download and patch sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will download and patch sox from source code... " >&6;}
   SOX_PATCH=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download and patch sox from source code... " >&5
$as_echo "$as_me: ===INF===  Will not download and patch sox from source code... " >&6;}
      SOX_PATCH=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_SOX_PATCH $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_SOX_PATCH_TRUE=
  HAVE_SOX_PATCH_FALSE='#'
else
  HAVE_SOX_PATCH_TRUE='#'
  HAVE_SOX_PATCH_FALSE=
fi








 if test sox-patch = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing sox version..." >&5
$as_echo "$as_me: Testing sox version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy sox; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of sox is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of sox is installed in path $SOFWARE_PATH" >&6;}
       SOX="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of sox is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of sox is not patched" >&6;}

$as_echo "#define HAVE_NO_SOX_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of sox is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of sox is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define SOX "$SOFTWARE_PATH"
_ACEOF




fi










# Check whether --enable-flac-download or --disable-flac-download was given.

# Check whether --enable-flac-download was given.
if test "${enable_flac_download+set}" = set; then :
  enableval=$enable_flac_download;
  if test x$enableval != xno; then

    if test xflac-download = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xflac-download != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download flac from source code... " >&5
$as_echo "$as_me: ===INF===  Will download flac from source code... " >&6;}
   FLAC_DOWNLOAD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download flac from source code... " >&5
$as_echo "$as_me: ===INF===  Will not download flac from source code... " >&6;}
      FLAC_DOWNLOAD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC_DOWNLOAD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_FLAC_DOWNLOAD_TRUE=
  HAVE_FLAC_DOWNLOAD_FALSE='#'
else
  HAVE_FLAC_DOWNLOAD_TRUE='#'
  HAVE_FLAC_DOWNLOAD_FALSE=
fi








 if test flac-download = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing flac version..." >&5
$as_echo "$as_me: Testing flac version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy flac; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of flac is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of flac is installed in path $SOFWARE_PATH" >&6;}
       FLAC="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of flac is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of flac is not patched" >&6;}

$as_echo "#define HAVE_NO_FLAC_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of flac is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of flac is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define FLAC "$SOFTWARE_PATH"
_ACEOF




fi










# Check whether --enable-libogg-download or --disable-libogg-download was given.

# Check whether --enable-libogg-download was given.
if test "${enable_libogg_download+set}" = set; then :
  enableval=$enable_libogg_download;
  if test x$enableval != xno; then

    if test xlibogg-download = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xlibogg-download != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download libogg from source code... " >&5
$as_echo "$as_me: ===INF===  Will download libogg from source code... " >&6;}
   LIBOGG_DOWNLOAD=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download libogg from source code... " >&5
$as_echo "$as_me: ===INF===  Will not download libogg from source code... " >&6;}
      LIBOGG_DOWNLOAD=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG_DOWNLOAD $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_LIBOGG_DOWNLOAD_TRUE=
  HAVE_LIBOGG_DOWNLOAD_FALSE='#'
else
  HAVE_LIBOGG_DOWNLOAD_TRUE='#'
  HAVE_LIBOGG_DOWNLOAD_FALSE=
fi








 if test libogg-download = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing libogg version..." >&5
$as_echo "$as_me: Testing libogg version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy libogg; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of libogg is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of libogg is installed in path $SOFWARE_PATH" >&6;}
       LIBOGG="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of libogg is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of libogg is not patched" >&6;}

$as_echo "#define HAVE_NO_LIBOGG_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of libogg is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of libogg is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define LIBOGG "$SOFTWARE_PATH"
_ACEOF




fi










# Check whether --enable-flac-cvs or --disable-flac-cvs was given.

# Check whether --enable-flac-cvs was given.
if test "${enable_flac_cvs+set}" = set; then :
  enableval=$enable_flac_cvs;
  if test x$enableval != xno; then

    if test xflac-cvs = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xflac-cvs != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download flac (cvs code for windows builds)... " >&5
$as_echo "$as_me: ===INF===  Will download flac (cvs code for windows builds)... " >&6;}
   FLAC_CVS=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download flac (cvs code for windows builds)... " >&5
$as_echo "$as_me: ===INF===  Will not download flac (cvs code for windows builds)... " >&6;}
      FLAC_CVS=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC_CVS $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_FLAC_CVS_TRUE=
  HAVE_FLAC_CVS_FALSE='#'
else
  HAVE_FLAC_CVS_TRUE='#'
  HAVE_FLAC_CVS_FALSE=
fi








 if test flac-cvs = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing flac version..." >&5
$as_echo "$as_me: Testing flac version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy flac; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of flac is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of flac is installed in path $SOFWARE_PATH" >&6;}
       FLAC="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of flac is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of flac is not patched" >&6;}

$as_echo "#define HAVE_NO_FLAC_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of flac is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of flac is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define FLAC "$SOFTWARE_PATH"
_ACEOF




fi










# Check whether --enable-all-deps or --disable-all-deps was given.

# Check whether --enable-all-deps was given.
if test "${enable_all_deps+set}" = set; then :
  enableval=$enable_all_deps;
  if test x$enableval != xno; then

    if test xall-deps = xall-deps; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xdvdauthor- = xdvdauthor-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download dvdauthor and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading dvdauthor. Make sure you have a functional internet connection." >&6;}

                version=0.6.14
                DVDAUTHOR_VERSION=$version

					    if test  -f "dvdauthor-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.gz..." >&6;}
						   rm -f "dvdauthor-$version.tar.gz"

fi


					    if test  -f "dvdauthor-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up dvdauthor-$version.tar.bz2..." >&6;}
						   rm -f "dvdauthor-$version.tar.bz2"

fi


                type=gz


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                 type=bz2


      filename=dvdauthor-$version.tar.$type
      MD5=bd646b47950c4091ffd781d43fd2c5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xdvdauthor/0.6.14 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/dvdauthor/files/dvdauthor/0.6.14/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test dvdauthor != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/dvdauthor/dvdauthor/0.6.14/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="dvdauthor-0.6.14"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xbd646b47950c4091ffd781d43fd2c5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_DVDAUTHOR=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version" >&6;}
					    "$CURL" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o dvdauthor-patch-$version http://dvd-audio.sourceforge.net/patches/dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  dvdauthor-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  dvdauthor-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  dvdauthor-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  dvdauthor-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of dvdauthor failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of dvdauthor failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  DVDAUTHOR_PATCH_BUILD=no
else
  DVDAUTHOR_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define DVDAUTHOR "${prefix}/bin/dvdauthor"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_DVDAUTHOR $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xcdrtools- = xcdrtools-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download cdrtools and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading cdrtools. Make sure you have a functional internet connection." >&6;}

                version=2.01.01a58
                CDRTOOLS_VERSION=$version

					    if test  -f "cdrtools-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.gz..." >&6;}
						   rm -f "cdrtools-$version.tar.gz"

fi


					    if test  -f "cdrtools-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up cdrtools-$version.tar.bz2..." >&6;}
						   rm -f "cdrtools-$version.tar.bz2"

fi


                type=gz


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                 type=bz2


      filename=cdrtools-$version.tar.$type
      MD5=6a17354df11c325bba9941d69e9c0294

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xf//ftp.berlios.de/pub/cdrecord/alpha != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/cdrtools/files/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test cdrtools != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/cdrtools/ftp://ftp.berlios.de/pub/cdrecord/alpha/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="cdrtools-2.01.01"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x6a17354df11c325bba9941d69e9c0294 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_CDRTOOLS=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version" >&6;}
					    "$CURL" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o cdrtools-patch-$version http://dvd-audio.sourceforge.net/patches/mkisofs/cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  cdrtools-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  cdrtools-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  cdrtools-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  cdrtools-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of cdrtools failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of cdrtools failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  CDRTOOLS_PATCH_BUILD=no
else
  CDRTOOLS_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define CDRTOOLS "${prefix}/bin/cdrtools"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_CDRTOOLS $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xsox- = xsox-patch; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download sox and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download sox and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading sox. Make sure you have a functional internet connection." >&6;}

                version=14.3.1
                SOX_VERSION=$version

					    if test  -f "sox-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.gz..." >&6;}
						   rm -f "sox-$version.tar.gz"

fi


					    if test  -f "sox-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up sox-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up sox-$version.tar.bz2..." >&6;}
						   rm -f "sox-$version.tar.bz2"

fi


                type=gz


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                 type=bz2


      filename=sox-$version.tar.$type
      MD5=b99871c7bbae84feac9d0d1f010331ba

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xsox/14.3.1 != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/sox/files/sox/14.3.1/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test sox != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/sox/sox/14.3.1/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="sox-14.3.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xb99871c7bbae84feac9d0d1f010331ba ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_SOX=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version" >&6;}
					    "$CURL" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o sox-patch-$version http://dvd-audio.sourceforge.net/patches/sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  sox-patch-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  sox-patch-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  sox-patch-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  sox-patch needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  sox-patch needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of sox failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of sox failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  SOX_PATCH_BUILD=no
else
  SOX_PATCH_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define SOX "${prefix}/bin/sox"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_SOX $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-download = xflac-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=153c8b15a54da428d1f0fadc756c22c7

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xflac-src/flac-1.2.1-src != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files/flac-src/flac-1.2.1-src/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x153c8b15a54da428d1f0fadc756c22c7 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version" >&6;}
					    "$CURL" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-download-$version http://dvd-audio.sourceforge.net/patches/flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_DOWNLOAD_BUILD=no
else
  FLAC_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xlibogg-download = xlibogg-download; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download libogg and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download libogg and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading libogg. Make sure you have a functional internet connection." >&6;}

                version=1.1.4
                LIBOGG_VERSION=$version

					    if test  -f "libogg-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.gz..." >&6;}
						   rm -f "libogg-$version.tar.gz"

fi


					    if test  -f "libogg-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up libogg-$version.tar.bz2..." >&6;}
						   rm -f "libogg-$version.tar.bz2"

fi


                type=gz


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                 type=bz2


      filename=libogg-$version.tar.$type
      MD5=10200ec22543841d9d1c23e0aed4e5e9

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test xht//downloads.xiph.org/releases/ogg != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/libogg/files/http://downloads.xiph.org/releases/ogg/$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test libogg != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/libogg/http://downloads.xiph.org/releases/ogg/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="libogg-1.1.4"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x10200ec22543841d9d1c23e0aed4e5e9 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_LIBOGG=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version" >&6;}
					    "$CURL" -f --location -o libogg-download-$version /libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o libogg-download-$version /libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  libogg-download-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  libogg-download-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  libogg-download-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  libogg-download needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  libogg-download needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of libogg failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of libogg failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  LIBOGG_DOWNLOAD_BUILD=no
else
  LIBOGG_DOWNLOAD_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define LIBOGG "${prefix}/bin/libogg"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_LIBOGG $errorcode_boolean
_ACEOF








  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xflac-cvs = xflac-cvs; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download flac and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download flac and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading flac. Make sure you have a functional internet connection." >&6;}

                version=1.2.1.cvs
                FLAC_VERSION=$version

					    if test  -f "flac-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.gz..." >&6;}
						   rm -f "flac-$version.tar.gz"

fi


					    if test  -f "flac-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up flac-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up flac-$version.tar.bz2..." >&6;}
						   rm -f "flac-$version.tar.bz2"

fi


                type=gz


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                 type=bz2


      filename=flac-$version.tar.$type
      MD5=f30ddcec01ad901c767f019d9cc84047

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename" >&6;}
					    "$CURL" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  http://dvd-audio.sourceforge.net/utils/$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/flac/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test flac != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/flac//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="flac-1.2.1"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != xf30ddcec01ad901c767f019d9cc84047 ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_FLAC=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version" >&6;}
					    "$CURL" -f --location -o flac-cvs-$version /flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o flac-cvs-$version /flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  flac-cvs-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  flac-cvs-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  flac-cvs-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  flac-cvs needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  flac-cvs needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of flac failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of flac failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  FLAC_CVS_BUILD=no
else
  FLAC_CVS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define FLAC "${prefix}/bin/flac"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC $errorcode_boolean
_ACEOF






elif test xall-deps != xno; then :



  errorcode=0
  # Extract the first word of "tar", so it can be a program name with args.
set dummy tar; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_TAR+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $TAR in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_TAR="$TAR" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_TAR="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
TAR=$ac_cv_path_TAR
if test -n "$TAR"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $TAR" >&5
$as_echo "$TAR" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$TAR = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  tar is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi
  # Extract the first word of "patch", so it can be a program name with args.
set dummy patch; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_PATCH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $PATCH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PATCH="$PATCH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/bin:/sbin:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_PATCH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PATCH=$ac_cv_path_PATCH
if test -n "$PATCH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PATCH" >&5
$as_echo "$PATCH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if  test x$PATCH = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&5
$as_echo "$as_me: WARNING: ===ERR===  patch is requested, please install it.
         as_fn_exit $?" >&2;}
                        errorcode=1

fi

  # It is necessary to use a macro here, as there is an unfortunate hyphen in project name!


  if test xall-deps = xall-deps; then :
  patchbool=0
else
  patchbool=1
fi

  # not having tar may sometimes happen on lightweight windows-based platforms

        # Extract the first word of "curl", so it can be a program name with args.
set dummy curl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_CURL+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $CURL in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CURL="$CURL" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_CURL="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
CURL=$ac_cv_path_CURL
if test -n "$CURL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CURL" >&5
$as_echo "$CURL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


        if test x$CURL = x; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Install curl to download all and rerun" >&5
$as_echo "$as_me: WARNING: ===ERR===  Install curl to download all and rerun" >&2;}
                        errorcode=1

else

                 { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Downloading all. Make sure you have a functional internet connection." >&5
$as_echo "$as_me: ===INF===  Downloading all. Make sure you have a functional internet connection." >&6;}

                version=
                ALL_VERSION=$version

					    if test  -f "all-$version.tar.gz"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up all-$version.tar.gz..." >&5
$as_echo "$as_me: ===INF===  Cleaning up all-$version.tar.gz..." >&6;}
						   rm -f "all-$version.tar.gz"

fi


					    if test  -f "all-$version.tar.bz2"; then :

						    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Cleaning up all-$version.tar.bz2..." >&5
$as_echo "$as_me: ===INF===  Cleaning up all-$version.tar.bz2..." >&6;}
						   rm -f "all-$version.tar.bz2"

fi


                type=gz


      filename=all-$version.tar.$type
      MD5=

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  /$filename" >&6;}
					    "$CURL" -f --location -o $filename  /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test all != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


                # outputs variable $filename

                if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x ; then :

                 type=bz2


      filename=all-$version.tar.$type
      MD5=

      # first trying to download from main site unless SF_MIRRORS is set
      if test x"$SF_MIRROR" = x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename  /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename  /$filename" >&6;}
					    "$CURL" -f --location -o $filename  /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename  /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Downloading from mirror $SF_MIRROR" >&5
$as_echo "$as_me: Downloading from mirror $SF_MIRROR" >&6;}
fi

      while true
      do

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # if fails, download from specified mirror / mirror list

        if test x != x; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename /$filename" >&6;}
					    "$CURL" -f --location -o $filename /$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename /$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else

            if test x"$SF_MIRROR" != x ; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=$SF_MIRROR failed, exit $exitcode." >&2;}
                        errorcode=1

fi

else



	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to kent:kent..." >&5
$as_echo "$as_me: Connecting to kent:kent..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=kent failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to garr:garr..." >&5
$as_echo "$as_me: Connecting to garr:garr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=garr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to voxel:voxel..." >&5
$as_echo "$as_me: Connecting to voxel:voxel..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=voxel failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


	         md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


	    { $as_echo "$as_me:${as_lineno-$LINENO}: Connecting to free_fr:free_fr..." >&5
$as_echo "$as_me: Connecting to free_fr:free_fr..." >&6;}
	    # This mirroring is Sourceforge-specific and should be twisted for other mirroring patterns.

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr" >&6;}
					    "$CURL" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://sourceforge.net/projects/all/files//$filename/download?use_mirror=free_fr failed, exit $exitcode." >&2;}
                        errorcode=1

fi


	    # eg: http://downloads.sourceforge.net/project/flac/flac-src/flac-1.2.1-src/flac-1.2.1.tar.gz?use_mirror=freefr


fi

fi

             md5=$($MD5SUM -b $filename | $SED "s/ .*//g")
	                    if  test -f $filename && test x$md5 = x$MD5 ; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: Found right MD5 checksum: $md5" >&5
$as_echo "$as_me: Found right MD5 checksum: $md5" >&6;}
                              break

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&5
$as_echo "$as_me: Did not find right MD5 checksum: $md5 instead of $MD5, skipping..." >&6;}
fi


        # last resort attempt, if everything has failed, use the Sourceforge network, except for cdrtools:

        { $as_echo "$as_me:${as_lineno-$LINENO}: MD5SUM: not equal to  $MD5, downloading however from network..." >&5
$as_echo "$as_me: MD5SUM: not equal to  $MD5, downloading however from network..." >&6;}
        if test all != cdrtools; then :

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename" >&6;}
					    "$CURL" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o $filename http://downloads.sourceforge.net/project/all//$filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

fi

        break
      done


fi

                dir="all-"

      	        if  test  x$($MD5SUM -b $filename | $SED "s/ .*//g") != x ; then :

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Download failure" >&5
$as_echo "$as_me: WARNING: ===ERR===  Download failure" >&2;}
                        errorcode=1

else


                   if test -d  $dir; then :

                      { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Removing $dir" >&5
$as_echo "$as_me: ===INF===  Removing $dir" >&6;}
                     rm -rf $dir

fi

fi

                if test -f "$filename"; then :

                   if test x$type = xgz; then :
  mode=xzvf
else
  mode=xjvf
fi

					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$TAR\" $mode $filename" >&5
$as_echo "$as_me: ===INF===  Running \"$TAR\" $mode $filename" >&6;}
					    "$TAR" $mode $filename
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$TAR\" $mode $filename failed, exit $exitcode." >&2;}
                        errorcode=1

fi

                   MAYBE_ALL=$dir

                   if test $exitcode = 0 && test $patchbool = 1; then :

                    # cdrtools is Makefile-based whilst autotools-compliant packages are configure-based
                      if test -f "$dir/Makefile" || test -f "$dir/configure"; then :




                          if test $patchbool = 1; then :


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$CURL\" -f --location -o all-deps-$version /all-deps-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$CURL\" -f --location -o all-deps-$version /all-deps-$version" >&6;}
					    "$CURL" -f --location -o all-deps-$version /all-deps-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$CURL\" -f --location -o all-deps-$version /all-deps-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$CURL\" -f --location -o all-deps-$version /all-deps-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


					     { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  all-deps-$version" >&5
$as_echo "$as_me: ===INF===  Running \"$PATCH\" -p4 -f --verbose <  all-deps-$version" >&6;}
					    "$PATCH" -p4 -f --verbose <  all-deps-$version
					    exitcode=$?
					    if test $exitcode = 0; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  ...OK" >&5
$as_echo "$as_me: ===INF===  ...OK" >&6;}
else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  all-deps-$version failed, exit $exitcode." >&5
$as_echo "$as_me: WARNING: ===ERR===  ...\"$PATCH\" -p4 -f --verbose <  all-deps-$version failed, exit $exitcode." >&2;}
                        errorcode=1

fi


else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  all-deps needs patching" >&5
$as_echo "$as_me: WARNING: ===ERR===  all-deps needs patching" >&2;}
                        errorcode=1

fi

fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  No patching was performed" >&5
$as_echo "$as_me: ===INF===  No patching was performed" >&6;}
fi

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Extraction of all failed" >&5
$as_echo "$as_me: WARNING: ===ERR===  Extraction of all failed" >&2;}
                        errorcode=1

fi

fi


if test "$errorcode" = "1"; then :
  errorcode_boolean=0
else
  errorcode_boolean=1
fi
if test "$errorcode" = "1"; then :
  ALL_DEPS_BUILD=no
else
  ALL_DEPS_BUILD=yes
fi

cat >>confdefs.h <<_ACEOF
#define ALL "${prefix}/bin/all"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define HAVE_ALL $errorcode_boolean
_ACEOF






fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will download all dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> and patch the source code if necessary... " >&5
$as_echo "$as_me: ===INF===  Will download all dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> and patch the source code if necessary... " >&6;}
   ALL_DEPS=yes
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Will not download all dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> and patch the source code if necessary... " >&5
$as_echo "$as_me: ===INF===  Will not download all dependencies <FLAC, Ogg, SoX, dvdauthor, cdrtools> and patch the source code if necessary... " >&6;}
      ALL_DEPS=no
  fi


fi



# We get AC_DEFINE out of the first yes test higher up because scripts passed along in arg3 may have result status that
# reset $enableval to "no"

if test x$enableval = xyes; then :
  enableval_boolean=1
else
  enableval_boolean=0
fi

cat >>confdefs.h <<_ACEOF
#define HAVE_ALL_DEPS $enableval_boolean
_ACEOF

 if test $enableval_boolean = 1 ; then
  HAVE_ALL_DEPS_TRUE=
  HAVE_ALL_DEPS_FALSE='#'
else
  HAVE_ALL_DEPS_TRUE='#'
  HAVE_ALL_DEPS_FALSE=
fi








 if test all-deps = dvdauthor-patch && test x$DVDAUTHOR_PATCH = x; then :

software_path=


{ $as_echo "$as_me:${as_lineno-$LINENO}: Testing all version..." >&5
$as_echo "$as_me: Testing all version..." >&6;}
# Extract the first word of "bn", so it can be a program name with args.
set dummy all; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if test "${ac_cv_path_SOFTWARE_PATH+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  case $SOFTWARE_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_SOFTWARE_PATH="$SOFTWARE_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_dummy="$bindir:/usr/bin:/usr/local/bin"
for as_dir in $as_dummy
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_SOFTWARE_PATH="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
SOFTWARE_PATH=$ac_cv_path_SOFTWARE_PATH
if test -n "$SOFTWARE_PATH"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SOFTWARE_PATH" >&5
$as_echo "$SOFTWARE_PATH" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



#Now variable 'SOFTWARE_PATH' is the filepath to the application
if test x$SOFTWARE_PATH != x; then :

    testchain=$($SOFTWARE_PATH --version 2>&1 | grep "patched")
    { $as_echo "$as_me:${as_lineno-$LINENO}: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&5
$as_echo "$as_me: tested: $SOFTWARE_PATH --version 2>&1 | grep \"patched\" --> $testchain" >&6;}
    if test x"$testchain" != x; then :

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Patched version of all is installed in path $SOFWARE_PATH" >&5
$as_echo "$as_me: ===INF===  Patched version of all is installed in path $SOFWARE_PATH" >&6;}
       ALL="$SOFTWARE_PATH"

else

        { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of all is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of all is not patched" >&6;}

$as_echo "#define HAVE_NO_ALL_PATCH 1" >>confdefs.h


fi

else
   { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Installed version of all is not patched" >&5
$as_echo "$as_me: ===INF===  Installed version of all is not patched" >&6;}

fi
# do not forget C-language quotes here

cat >>confdefs.h <<_ACEOF
#define ALL "$SOFTWARE_PATH"
_ACEOF




fi


    # for sox libs, empirically it appears safer to link to dynamic libs under linux at least, due to linking issues with static libs: shared forces this,
    # unless explicit filepath input is given
    # owing to sox versioning issues (notably intervention of home-made getopt in versions <= 14.3), a wider array of function checks is justified.
    # functions should be white-space separated, as should header-function list double-quoted pairs. Headers are comma-separated from funtion lists in pair.






# Check whether --with-flac was given.
if test "${with_flac+set}" = set; then :
  withval=$with_flac;
    withval_FLAC=$withval
    if test x$withval = xno; then :


$as_echo "#define WITHOUT_FLAC 1" >>confdefs.h

           FLAC_BUILD=no

elif test x$withval != xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: Using specified flac lib: $withval" >&5
$as_echo "$as_me: Using specified flac lib: $withval" >&6;}
           FLAC_LIB_INPUT=$withval
fi

else

     withval_FLAC=
     FLAC_LIB_INPUT=

fi


# do not simply use the withval variable as --without-X options might interfere globally

if test x$FLAC_BUILD != xyes && test x$withval_FLAC != xno; then :


  FLAC=FLAC

  { $as_echo "$as_me:${as_lineno-$LINENO}: Profiling $FLAC..." >&5
$as_echo "$as_me: Profiling $FLAC..." >&6;}
  if test x$FLAC_LIB_INPUT = x; then :
  LDFLAGS="$LDFLAGS -L/usr/lib -L/usr/local/lib -lm"
      TEST="FLAC"
      if test -d /usr/lib/FLAC; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/FLAC"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/FLAC"
fi
      if test -d /usr/local/include/FLAC; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/FLAC"
elif test -d /usr/include/FLAC; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/FLAC"
fi
      if test -d /usr/lib/$FLAC; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/$FLAC"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/$FLAC"
fi
      if test -d /usr/local/include/$FLAC; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/$FLAC"
elif test -d /usr/include/FLAC; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/$FLAC"
fi

else
  LDADD="$LDADD -lm $FLAC_LIB_INPUT"
      TEST=`echo $FLAC_LIB_INPUT | sed "s/.*lib\(.*\)\(\.\).*/\1/"`
       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Looking for functions in installed $TEST..." >&5
$as_echo "$as_me: ===INF===  Looking for functions in installed $TEST..." >&6;}

fi


# we cannot resort to shell variable CAPNAME as prefix here, defining a macro is necessary
# remember m4_car and m4_cdr should be used unquoted





  ## Four levels of brackets are needed: one is stripped, followed by the quotes of the list followed by quotes for pair groups, followed by header quotes or function list quotes
  ## FLAC_LIB etc must have been computed before

 for ac_header in FLAC/all.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "FLAC/all.h" "ac_cv_header_FLAC_all_h" "$ac_includes_default"
if test "x$ac_cv_header_FLAC_all_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_FLAC_ALL_H 1
_ACEOF

   as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_FLAC__stream_decoder_init_file" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for FLAC__stream_decoder_init_file in -l$TEST" >&5
$as_echo_n "checking for FLAC__stream_decoder_init_file in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char FLAC__stream_decoder_init_file ();
int
main ()
{
return FLAC__stream_decoder_init_file ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :



       if test x$FLAC_LIB_INPUT = x; then :

         FLAC_LINK="-lFLAC"


         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed libFLAC library..." >&5
$as_echo "$as_me: ===INF===  Using installed libFLAC library..." >&6;}

else

         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using specified libFLAC library..." >&5
$as_echo "$as_me: ===INF===  Using specified libFLAC library..." >&6;}
        FLAC_LIB="$FLAC_LIB_INPUT"
        FLAC_BUILD=no

fi

else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building FLAC library from sources...
Triggering --enable-FLAC-build... " >&5
$as_echo "$as_me: ===INF===  Building FLAC library from sources...
Triggering --enable-FLAC-build... " >&6;}
      FLAC_BUILD=yes

      { $as_echo "$as_me:${as_lineno-$LINENO}:  was not found in $TEST" >&5
$as_echo "$as_me:  was not found in $TEST" >&6;}

fi


else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building FLAC library from sources...
Triggering --enable-FLAC-build... " >&5
$as_echo "$as_me: ===INF===  Building FLAC library from sources...
Triggering --enable-FLAC-build... " >&6;}
      FLAC_BUILD=yes

   { $as_echo "$as_me:${as_lineno-$LINENO}: No appropriate headers for FLAC" >&5
$as_echo "$as_me: No appropriate headers for FLAC" >&6;}

fi

done



 # automake conditionals will depend on possible --without features so should be placed in configure.ac


 #m4_popdef([LIST])




fi

# whether lib has not been deactivated by --without-lib
 if test x$withval_FLAC != xno; then
  WITH_FLAC_TRUE=
  WITH_FLAC_FALSE='#'
else
  WITH_FLAC_TRUE='#'
  WITH_FLAC_FALSE=
fi


# whether linking to installed lib with --with-lib=/full/path/to/lib
 if test x$withval_FLAC != x; then
  HAVE_EXTERNAL_FLAC_TRUE=
  HAVE_EXTERNAL_FLAC_FALSE='#'
else
  HAVE_EXTERNAL_FLAC_TRUE='#'
  HAVE_EXTERNAL_FLAC_FALSE=
fi


# whether configure automatically found valid system link
 if test x$FLAC_LINK != x ; then
  HAVE_FLAC_TRUE=
  HAVE_FLAC_FALSE='#'
else
  HAVE_FLAC_TRUE='#'
  HAVE_FLAC_FALSE=
fi





# Check whether --with-ogg was given.
if test "${with_ogg+set}" = set; then :
  withval=$with_ogg;
    withval_OGG=$withval
    if test x$withval = xno; then :


$as_echo "#define WITHOUT_OGG 1" >>confdefs.h

           OGG_BUILD=no

elif test x$withval != xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: Using specified ogg lib: $withval" >&5
$as_echo "$as_me: Using specified ogg lib: $withval" >&6;}
           OGG_LIB_INPUT=$withval
fi

else

     withval_OGG=
     OGG_LIB_INPUT=

fi


# do not simply use the withval variable as --without-X options might interfere globally

if test x$OGG_BUILD != xyes && test x$withval_OGG != xno; then :


  OGG=OGG

  { $as_echo "$as_me:${as_lineno-$LINENO}: Profiling $OGG..." >&5
$as_echo "$as_me: Profiling $OGG..." >&6;}
  if test x$OGG_LIB_INPUT = x; then :
  LDFLAGS="$LDFLAGS -L/usr/lib -L/usr/local/lib -lm"
      TEST="ogg"
      if test -d /usr/lib/ogg; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/ogg"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/ogg"
fi
      if test -d /usr/local/include/ogg; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/ogg"
elif test -d /usr/include/ogg; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/ogg"
fi
      if test -d /usr/lib/$OGG; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/$OGG"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/$OGG"
fi
      if test -d /usr/local/include/$OGG; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/$OGG"
elif test -d /usr/include/OGG; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/$OGG"
fi

else
  LDADD="$LDADD -lm $OGG_LIB_INPUT"
      TEST=`echo $OGG_LIB_INPUT | sed "s/.*lib\(.*\)\(\.\).*/\1/"`
       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Looking for functions in installed $TEST..." >&5
$as_echo "$as_me: ===INF===  Looking for functions in installed $TEST..." >&6;}

fi


# we cannot resort to shell variable CAPNAME as prefix here, defining a macro is necessary
# remember m4_car and m4_cdr should be used unquoted





  ## Four levels of brackets are needed: one is stripped, followed by the quotes of the list followed by quotes for pair groups, followed by header quotes or function list quotes
  ## FLAC_LIB etc must have been computed before

 for ac_header in ogg/ogg.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "ogg/ogg.h" "ac_cv_header_ogg_ogg_h" "$ac_includes_default"
if test "x$ac_cv_header_ogg_ogg_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_OGG_OGG_H 1
_ACEOF

   as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_ogg_stream_init" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ogg_stream_init in -l$TEST" >&5
$as_echo_n "checking for ogg_stream_init in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char ogg_stream_init ();
int
main ()
{
return ogg_stream_init ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :



       if test x$OGG_LIB_INPUT = x; then :

         OGG_LINK="-logg"


         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed libogg library..." >&5
$as_echo "$as_me: ===INF===  Using installed libogg library..." >&6;}

else

         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using specified libogg library..." >&5
$as_echo "$as_me: ===INF===  Using specified libogg library..." >&6;}
        OGG_LIB="$OGG_LIB_INPUT"
        OGG_BUILD=no

fi

else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building ogg library from sources...
Triggering --enable-ogg-build... " >&5
$as_echo "$as_me: ===INF===  Building ogg library from sources...
Triggering --enable-ogg-build... " >&6;}
      OGG_BUILD=yes

      { $as_echo "$as_me:${as_lineno-$LINENO}:  was not found in $TEST" >&5
$as_echo "$as_me:  was not found in $TEST" >&6;}

fi


else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building ogg library from sources...
Triggering --enable-ogg-build... " >&5
$as_echo "$as_me: ===INF===  Building ogg library from sources...
Triggering --enable-ogg-build... " >&6;}
      OGG_BUILD=yes

   { $as_echo "$as_me:${as_lineno-$LINENO}: No appropriate headers for ogg" >&5
$as_echo "$as_me: No appropriate headers for ogg" >&6;}

fi

done



 # automake conditionals will depend on possible --without features so should be placed in configure.ac


 #m4_popdef([LIST])




fi

# whether lib has not been deactivated by --without-lib
 if test x$withval_OGG != xno; then
  WITH_OGG_TRUE=
  WITH_OGG_FALSE='#'
else
  WITH_OGG_TRUE='#'
  WITH_OGG_FALSE=
fi


# whether linking to installed lib with --with-lib=/full/path/to/lib
 if test x$withval_OGG != x; then
  HAVE_EXTERNAL_OGG_TRUE=
  HAVE_EXTERNAL_OGG_FALSE='#'
else
  HAVE_EXTERNAL_OGG_TRUE='#'
  HAVE_EXTERNAL_OGG_FALSE=
fi


# whether configure automatically found valid system link
 if test x$OGG_LINK != x ; then
  HAVE_OGG_TRUE=
  HAVE_OGG_FALSE='#'
else
  HAVE_OGG_TRUE='#'
  HAVE_OGG_FALSE=
fi





# Check whether --with-fixwav was given.
if test "${with_fixwav+set}" = set; then :
  withval=$with_fixwav;
    withval_FIXWAV=$withval
    if test x$withval = xno; then :


$as_echo "#define WITHOUT_FIXWAV 1" >>confdefs.h

           FIXWAV_BUILD=no

elif test x$withval != xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: Using specified fixwav lib: $withval" >&5
$as_echo "$as_me: Using specified fixwav lib: $withval" >&6;}
           FIXWAV_LIB_INPUT=$withval
fi

else

     withval_FIXWAV=
     FIXWAV_LIB_INPUT=

fi


# do not simply use the withval variable as --without-X options might interfere globally

if test x$FIXWAV_BUILD != xyes && test x$withval_FIXWAV != xno; then :


  FIXWAV=FIXWAV

  { $as_echo "$as_me:${as_lineno-$LINENO}: Profiling $FIXWAV..." >&5
$as_echo "$as_me: Profiling $FIXWAV..." >&6;}
  if test x$FIXWAV_LIB_INPUT = x; then :
  LDFLAGS="$LDFLAGS -L/usr/lib -L/usr/local/lib -lm"
      TEST="fixwav"
      if test -d /usr/lib/fixwav; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/fixwav"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/fixwav"
fi
      if test -d /usr/local/include/fixwav; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/fixwav"
elif test -d /usr/include/fixwav; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/fixwav"
fi
      if test -d /usr/lib/$FIXWAV; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/$FIXWAV"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/$FIXWAV"
fi
      if test -d /usr/local/include/$FIXWAV; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/$FIXWAV"
elif test -d /usr/include/FIXWAV; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/$FIXWAV"
fi

else
  LDADD="$LDADD -lm $FIXWAV_LIB_INPUT"
      TEST=`echo $FIXWAV_LIB_INPUT | sed "s/.*lib\(.*\)\(\.\).*/\1/"`
       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Looking for functions in installed $TEST..." >&5
$as_echo "$as_me: ===INF===  Looking for functions in installed $TEST..." >&6;}

fi


# we cannot resort to shell variable CAPNAME as prefix here, defining a macro is necessary
# remember m4_car and m4_cdr should be used unquoted





  ## Four levels of brackets are needed: one is stripped, followed by the quotes of the list followed by quotes for pair groups, followed by header quotes or function list quotes
  ## FLAC_LIB etc must have been computed before

 for ac_header in fixwav_manager.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "fixwav_manager.h" "ac_cv_header_fixwav_manager_h" "$ac_includes_default"
if test "x$ac_cv_header_fixwav_manager_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_FIXWAV_MANAGER_H 1
_ACEOF

   as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_fixwav" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fixwav in -l$TEST" >&5
$as_echo_n "checking for fixwav in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char fixwav ();
int
main ()
{
return fixwav ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :



       if test x$FIXWAV_LIB_INPUT = x; then :

         FIXWAV_LINK="-lfixwav"


         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed libfixwav library..." >&5
$as_echo "$as_me: ===INF===  Using installed libfixwav library..." >&6;}

else

         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using specified libfixwav library..." >&5
$as_echo "$as_me: ===INF===  Using specified libfixwav library..." >&6;}
        FIXWAV_LIB="$FIXWAV_LIB_INPUT"
        FIXWAV_BUILD=no

fi

else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building fixwav library from sources...
Triggering --enable-fixwav-build... " >&5
$as_echo "$as_me: ===INF===  Building fixwav library from sources...
Triggering --enable-fixwav-build... " >&6;}
      FIXWAV_BUILD=yes

      { $as_echo "$as_me:${as_lineno-$LINENO}:  was not found in $TEST" >&5
$as_echo "$as_me:  was not found in $TEST" >&6;}

fi


else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building fixwav library from sources...
Triggering --enable-fixwav-build... " >&5
$as_echo "$as_me: ===INF===  Building fixwav library from sources...
Triggering --enable-fixwav-build... " >&6;}
      FIXWAV_BUILD=yes

   { $as_echo "$as_me:${as_lineno-$LINENO}: No appropriate headers for fixwav" >&5
$as_echo "$as_me: No appropriate headers for fixwav" >&6;}

fi

done



 # automake conditionals will depend on possible --without features so should be placed in configure.ac


 #m4_popdef([LIST])




fi

# whether lib has not been deactivated by --without-lib
 if test x$withval_FIXWAV != xno; then
  WITH_FIXWAV_TRUE=
  WITH_FIXWAV_FALSE='#'
else
  WITH_FIXWAV_TRUE='#'
  WITH_FIXWAV_FALSE=
fi


# whether linking to installed lib with --with-lib=/full/path/to/lib
 if test x$withval_FIXWAV != x; then
  HAVE_EXTERNAL_FIXWAV_TRUE=
  HAVE_EXTERNAL_FIXWAV_FALSE='#'
else
  HAVE_EXTERNAL_FIXWAV_TRUE='#'
  HAVE_EXTERNAL_FIXWAV_FALSE=
fi


# whether configure automatically found valid system link
 if test x$FIXWAV_LINK != x ; then
  HAVE_FIXWAV_TRUE=
  HAVE_FIXWAV_FALSE='#'
else
  HAVE_FIXWAV_TRUE='#'
  HAVE_FIXWAV_FALSE=
fi





# Check whether --with-sox was given.
if test "${with_sox+set}" = set; then :
  withval=$with_sox;
    withval_SOX=$withval
    if test x$withval = xno; then :


$as_echo "#define WITHOUT_SOX 1" >>confdefs.h

           SOX_BUILD=no

elif test x$withval != xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: Using specified sox lib: $withval" >&5
$as_echo "$as_me: Using specified sox lib: $withval" >&6;}
           SOX_LIB_INPUT=$withval
fi

else

     withval_SOX=
     SOX_LIB_INPUT=

fi


# do not simply use the withval variable as --without-X options might interfere globally

if test x$SOX_BUILD != xyes && test x$withval_SOX != xno; then :


  SOX=SOX

  { $as_echo "$as_me:${as_lineno-$LINENO}: Profiling $SOX..." >&5
$as_echo "$as_me: Profiling $SOX..." >&6;}
  if test x$SOX_LIB_INPUT = x; then :
  LDFLAGS="$LDFLAGS -L/usr/lib -L/usr/local/lib -lm"
      TEST="sox"
      if test -d /usr/lib/sox; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/sox"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/sox"
fi
      if test -d /usr/local/include/sox; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/sox"
elif test -d /usr/include/sox; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/sox"
fi
      if test -d /usr/lib/$SOX; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/$SOX"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/$SOX"
fi
      if test -d /usr/local/include/$SOX; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/$SOX"
elif test -d /usr/include/SOX; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/$SOX"
fi

else
  LDADD="$LDADD -lm $SOX_LIB_INPUT"
      TEST=`echo $SOX_LIB_INPUT | sed "s/.*lib\(.*\)\(\.\).*/\1/"`
       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Looking for functions in installed $TEST..." >&5
$as_echo "$as_me: ===INF===  Looking for functions in installed $TEST..." >&6;}

fi


# we cannot resort to shell variable CAPNAME as prefix here, defining a macro is necessary
# remember m4_car and m4_cdr should be used unquoted





  ## Four levels of brackets are needed: one is stripped, followed by the quotes of the list followed by quotes for pair groups, followed by header quotes or function list quotes
  ## FLAC_LIB etc must have been computed before

 for ac_header in sox.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "sox.h" "ac_cv_header_sox_h" "$ac_includes_default"
if test "x$ac_cv_header_sox_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_SOX_H 1
_ACEOF

   as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_sox_format_init" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_format_init in -l$TEST" >&5
$as_echo_n "checking for sox_format_init in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_format_init ();
int
main ()
{
return sox_format_init ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :


       as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_open_read in -l$TEST" >&5
$as_echo_n "checking for sox_open_read in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_open_read ();
int
main ()
{
return sox_open_read ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_open_write in -l$TEST" >&5
$as_echo_n "checking for sox_open_write in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_open_write ();
int
main ()
{
return sox_open_write ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_create_effects_chain in -l$TEST" >&5
$as_echo_n "checking for sox_create_effects_chain in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_create_effects_chain ();
int
main ()
{
return sox_create_effects_chain ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_create_effect in -l$TEST" >&5
$as_echo_n "checking for sox_create_effect in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_create_effect ();
int
main ()
{
return sox_create_effect ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_find_effect in -l$TEST" >&5
$as_echo_n "checking for sox_find_effect in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_find_effect ();
int
main ()
{
return sox_find_effect ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_add_effect in -l$TEST" >&5
$as_echo_n "checking for sox_add_effect in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_add_effect ();
int
main ()
{
return sox_add_effect ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_flow_effects in -l$TEST" >&5
$as_echo_n "checking for sox_flow_effects in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_flow_effects ();
int
main ()
{
return sox_flow_effects ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_delete_effects in -l$TEST" >&5
$as_echo_n "checking for sox_delete_effects in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_delete_effects ();
int
main ()
{
return sox_delete_effects ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_close in -l$TEST" >&5
$as_echo_n "checking for sox_close in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_close ();
int
main ()
{
return sox_close ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi
as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sox_format_quit in -l$TEST" >&5
$as_echo_n "checking for sox_format_quit in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char sox_format_quit ();
int
main ()
{
return sox_format_quit ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

fi

       if test x$SOX_LIB_INPUT = x; then :

         SOX_LINK="-lsox"

         # oddly AS_CASE did not work here
         if test shared = shared; then :

                 SOX_LIB="${prefix}/lib/libsox.so"
                  if test -f $SOX_LIB; then :
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed dynamic libsox library..." >&5
$as_echo "$as_me: ===INF===  Using installed dynamic libsox library..." >&6;}

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Could not find SOX lib, retry with --libdir=DIR, root directory for sox lib" >&5
$as_echo "$as_me: WARNING: ===ERR===  Could not find SOX lib, retry with --libdir=DIR, root directory for sox lib" >&2;}
                        errorcode=1

                         SOX_LIB=

fi

elif test shared = static; then :

                SOX_LIB="${prefix}/lib/lib$TEST.a"
                  if test -f $SOX_LIB; then :
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed static libsox library..." >&5
$as_echo "$as_me: ===INF===  Using installed static libsox library..." >&6;}

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Could not find SOX lib, retry with --libdir=DIR, root directory for sox lib" >&5
$as_echo "$as_me: WARNING: ===ERR===  Could not find SOX lib, retry with --libdir=DIR, root directory for sox lib" >&2;}
                        errorcode=1

                         SOX_LIB=

fi

fi


         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed libsox library..." >&5
$as_echo "$as_me: ===INF===  Using installed libsox library..." >&6;}

else

         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using specified libsox library..." >&5
$as_echo "$as_me: ===INF===  Using specified libsox library..." >&6;}
        SOX_LIB="$SOX_LIB_INPUT"
        SOX_BUILD=no

fi

else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

      { $as_echo "$as_me:${as_lineno-$LINENO}: shared was not found in $TEST" >&5
$as_echo "$as_me: shared was not found in $TEST" >&6;}

fi


else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&5
$as_echo "$as_me: ===INF===  Building sox library from sources...
Triggering --enable-sox-build... " >&6;}
      SOX_BUILD=yes

   { $as_echo "$as_me:${as_lineno-$LINENO}: No appropriate headers for sox" >&5
$as_echo "$as_me: No appropriate headers for sox" >&6;}

fi

done



 # automake conditionals will depend on possible --without features so should be placed in configure.ac


 #m4_popdef([LIST])




fi

# whether lib has not been deactivated by --without-lib
 if test x$withval_SOX != xno; then
  WITH_SOX_TRUE=
  WITH_SOX_FALSE='#'
else
  WITH_SOX_TRUE='#'
  WITH_SOX_FALSE=
fi


# whether linking to installed lib with --with-lib=/full/path/to/lib
 if test x$withval_SOX != x; then
  HAVE_EXTERNAL_SOX_TRUE=
  HAVE_EXTERNAL_SOX_FALSE='#'
else
  HAVE_EXTERNAL_SOX_TRUE='#'
  HAVE_EXTERNAL_SOX_FALSE=
fi


# whether configure automatically found valid system link
 if test x$SOX_LINK != x ; then
  HAVE_SOX_TRUE=
  HAVE_SOX_FALSE='#'
else
  HAVE_SOX_TRUE='#'
  HAVE_SOX_FALSE=
fi





# Check whether --with-iberty was given.
if test "${with_iberty+set}" = set; then :
  withval=$with_iberty;
    withval_IBERTY=$withval
    if test x$withval = xno; then :


$as_echo "#define WITHOUT_IBERTY 1" >>confdefs.h

           IBERTY_BUILD=no

elif test x$withval != xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: Using specified iberty lib: $withval" >&5
$as_echo "$as_me: Using specified iberty lib: $withval" >&6;}
           IBERTY_LIB_INPUT=$withval
fi

else

     withval_IBERTY=
     IBERTY_LIB_INPUT=

fi


# do not simply use the withval variable as --without-X options might interfere globally

if test x$IBERTY_BUILD != xyes && test x$withval_IBERTY != xno; then :


  IBERTY=IBERTY

  { $as_echo "$as_me:${as_lineno-$LINENO}: Profiling $IBERTY..." >&5
$as_echo "$as_me: Profiling $IBERTY..." >&6;}
  if test x$IBERTY_LIB_INPUT = x; then :
  LDFLAGS="$LDFLAGS -L/usr/lib -L/usr/local/lib -lm"
      TEST="iberty"
      if test -d /usr/lib/iberty; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/iberty"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/iberty"
fi
      if test -d /usr/local/include/iberty; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/iberty"
elif test -d /usr/include/iberty; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/iberty"
fi
      if test -d /usr/lib/$IBERTY; then :
  LDFLAGS="$LDFLAGS -L/usr/lib/$IBERTY"
elif test -d /usr/local/lib; then :
  LDFLAGS="$LDFLAGS -L/usr/local/lib/$IBERTY"
fi
      if test -d /usr/local/include/$IBERTY; then :
  CPPFLAGS="$CPPFLAGS -I/usr/local/include/$IBERTY"
elif test -d /usr/include/IBERTY; then :
  CPPFLAGS="$CPPFLAGS -I/usr/include/$IBERTY"
fi

else
  LDADD="$LDADD -lm $IBERTY_LIB_INPUT"
      TEST=`echo $IBERTY_LIB_INPUT | sed "s/.*lib\(.*\)\(\.\).*/\1/"`
       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Looking for functions in installed $TEST..." >&5
$as_echo "$as_me: ===INF===  Looking for functions in installed $TEST..." >&6;}

fi


# we cannot resort to shell variable CAPNAME as prefix here, defining a macro is necessary
# remember m4_car and m4_cdr should be used unquoted





  ## Four levels of brackets are needed: one is stripped, followed by the quotes of the list followed by quotes for pair groups, followed by header quotes or function list quotes
  ## FLAC_LIB etc must have been computed before

 for ac_header in getopt.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "getopt.h" "ac_cv_header_getopt_h" "$ac_includes_default"
if test "x$ac_cv_header_getopt_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_GETOPT_H 1
_ACEOF

   as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_getopt" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for getopt in -l$TEST" >&5
$as_echo_n "checking for getopt in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char getopt ();
int
main ()
{
return getopt ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :


       as_ac_Lib=`$as_echo "ac_cv_lib_$TEST''_VAR" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for getopt_long in -l$TEST" >&5
$as_echo_n "checking for getopt_long in -l$TEST... " >&6; }
if { as_var=$as_ac_Lib; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-l$TEST  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char getopt_long ();
int
main ()
{
return getopt_long ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  eval "$as_ac_Lib=yes"
else
  eval "$as_ac_Lib=no"
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
eval ac_res=\$$as_ac_Lib
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Lib
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_LIB$TEST" | $as_tr_cpp` 1
_ACEOF

  LIBS="-l$TEST $LIBS"

else

       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building iberty library from sources...
Triggering --enable-iberty-build... " >&5
$as_echo "$as_me: ===INF===  Building iberty library from sources...
Triggering --enable-iberty-build... " >&6;}
      IBERTY_BUILD=yes

fi

       if test x$IBERTY_LIB_INPUT = x; then :

         IBERTY_LINK="-liberty"

         # oddly AS_CASE did not work here
         if test stdlib.h,getsubopt = shared; then :

                 IBERTY_LIB="${prefix}/lib/libiberty.so"
                  if test -f $IBERTY_LIB; then :
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed dynamic libiberty library..." >&5
$as_echo "$as_me: ===INF===  Using installed dynamic libiberty library..." >&6;}

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Could not find IBERTY lib, retry with --libdir=DIR, root directory for iberty lib" >&5
$as_echo "$as_me: WARNING: ===ERR===  Could not find IBERTY lib, retry with --libdir=DIR, root directory for iberty lib" >&2;}
                        errorcode=1

                         IBERTY_LIB=

fi

elif test stdlib.h,getsubopt = static; then :

                IBERTY_LIB="${prefix}/lib/lib$TEST.a"
                  if test -f $IBERTY_LIB; then :
    { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed static libiberty library..." >&5
$as_echo "$as_me: ===INF===  Using installed static libiberty library..." >&6;}

else

                        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ===ERR===  Could not find IBERTY lib, retry with --libdir=DIR, root directory for iberty lib" >&5
$as_echo "$as_me: WARNING: ===ERR===  Could not find IBERTY lib, retry with --libdir=DIR, root directory for iberty lib" >&2;}
                        errorcode=1

                         IBERTY_LIB=

fi

fi


         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using installed libiberty library..." >&5
$as_echo "$as_me: ===INF===  Using installed libiberty library..." >&6;}

else

         { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Using specified libiberty library..." >&5
$as_echo "$as_me: ===INF===  Using specified libiberty library..." >&6;}
        IBERTY_LIB="$IBERTY_LIB_INPUT"
        IBERTY_BUILD=no

fi

else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building iberty library from sources...
Triggering --enable-iberty-build... " >&5
$as_echo "$as_me: ===INF===  Building iberty library from sources...
Triggering --enable-iberty-build... " >&6;}
      IBERTY_BUILD=yes

      { $as_echo "$as_me:${as_lineno-$LINENO}: stdlib.h,getsubopt was not found in $TEST" >&5
$as_echo "$as_me: stdlib.h,getsubopt was not found in $TEST" >&6;}

fi


else


       { $as_echo "$as_me:${as_lineno-$LINENO}: ===INF===  Building iberty library from sources...
Triggering --enable-iberty-build... " >&5
$as_echo "$as_me: ===INF===  Building iberty library from sources...
Triggering --enable-iberty-build... " >&6;}
      IBERTY_BUILD=yes

   { $as_echo "$as_me:${as_lineno-$LINENO}: No appropriate headers for iberty" >&5
$as_echo "$as_me: No appropriate headers for iberty" >&6;}

fi

done



 # automake conditionals will depend on possible --without features so should be placed in configure.ac


 #m4_popdef([LIST])




fi

# whether lib has not been deactivated by --without-lib
 if test x$withval_IBERTY != xno; then
  WITH_IBERTY_TRUE=
  WITH_IBERTY_FALSE='#'
else
  WITH_IBERTY_TRUE='#'
  WITH_IBERTY_FALSE=
fi


# whether linking to installed lib with --with-lib=/full/path/to/lib
 if test x$withval_IBERTY != x; then
  HAVE_EXTERNAL_IBERTY_TRUE=
  HAVE_EXTERNAL_IBERTY_FALSE='#'
else
  HAVE_EXTERNAL_IBERTY_TRUE='#'
  HAVE_EXTERNAL_IBERTY_FALSE=
fi


# whether configure automatically found valid system link
 if test x$IBERTY_LINK != x ; then
  HAVE_IBERTY_TRUE=
  HAVE_IBERTY_FALSE='#'
else
  HAVE_IBERTY_TRUE='#'
  HAVE_IBERTY_FALSE=
fi



    # to be invoked after ENABLE and WITH features
    # insert here application-specific macros that cannot be inserted in anothor file

     if test x$OGG_BUILD = xno || test x$OGG_LINK = x; then :
  FLAC_FLAGS="$FLAC_FLAGS --disable-ogg"
fi

    # installing binaries, normally executables










    if test x$DVDAUTHOR_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_DVDAUTHOR = x; then :
   MAYBE_DVDAUTHOR=dvdauthor-0.6.14
fi
	      DVDAUTHOR_BUILD=yes
	      DVDAUTHOR_CONFIGURE_FILE="$MAYBE_DVDAUTHOR"/configure
	      #


	      CONFIGURE_DVDAUTHOR_FLAGS=" $DVDAUTHOR_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_DVDAUTHOR_FLAGS=$CONFIGURE_DVDAUTHOR_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_DVDAUTHOR_FLAGS=$CONFIGURE_DVDAUTHOR_FLAGS" >&6;}
	      # sanity checks
              if test x$DVDAUTHOR_BUILD = xyes && ! test -d $MAYBE_DVDAUTHOR; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_DVDAUTHOR does not exist, reconfigure with --enable-dvdauthor-build, otherwise using --without-dvdauthor..." >&5
$as_echo "$as_me: Directory $MAYBE_DVDAUTHOR does not exist, reconfigure with --enable-dvdauthor-build, otherwise using --without-dvdauthor..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$DVDAUTHOR_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_DVDAUTHOR_BUILD_TRUE=
  HAVE_DVDAUTHOR_BUILD_FALSE='#'
else
  HAVE_DVDAUTHOR_BUILD_TRUE='#'
  HAVE_DVDAUTHOR_BUILD_FALSE=
fi

















    if test x$CDRTOOLS_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_CDRTOOLS = x; then :
   MAYBE_CDRTOOLS=cdrtools-2.01.01
fi
	      CDRTOOLS_BUILD=yes
	      CDRTOOLS_CONFIGURE_FILE="$MAYBE_CDRTOOLS"/configure
	      #


	      CONFIGURE_CDRTOOLS_FLAGS=" $CDRTOOLS_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_CDRTOOLS_FLAGS=$CONFIGURE_CDRTOOLS_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_CDRTOOLS_FLAGS=$CONFIGURE_CDRTOOLS_FLAGS" >&6;}
	      # sanity checks
              if test x$CDRTOOLS_BUILD = xyes && ! test -d $MAYBE_CDRTOOLS; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_CDRTOOLS does not exist, reconfigure with --enable-cdrtools-build, otherwise using --without-cdrtools..." >&5
$as_echo "$as_me: Directory $MAYBE_CDRTOOLS does not exist, reconfigure with --enable-cdrtools-build, otherwise using --without-cdrtools..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$CDRTOOLS_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_CDRTOOLS_BUILD_TRUE=
  HAVE_CDRTOOLS_BUILD_FALSE='#'
else
  HAVE_CDRTOOLS_BUILD_TRUE='#'
  HAVE_CDRTOOLS_BUILD_FALSE=
fi












    # auxiliary libs installed under local/ within package to avoid possible versioning issues with system-installed libs










    if test x$FLAC_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_FLAC = x; then :
   MAYBE_FLAC=libFLAC
fi
	      FLAC_BUILD=yes
	      FLAC_CONFIGURE_FILE="$MAYBE_FLAC"/configure
	      FLAC_LIB="\${ROOTDIR}/local/lib/libFLAC.a"


	      CONFIGURE_FLAC_FLAGS="--disable-shared --disable-thorough-tests --disable-oggtest --disable-cpplibs --disable-doxygen-docs --disable-xmms-plugin --disable-doxygen-docs --prefix=$ROOTDIR/local CPPFLAGS="-I$ROOTDIR/local/include" $FLAC_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_FLAC_FLAGS=$CONFIGURE_FLAC_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_FLAC_FLAGS=$CONFIGURE_FLAC_FLAGS" >&6;}
	      # sanity checks
              if test x$FLAC_BUILD = xyes && ! test -d $MAYBE_FLAC; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_FLAC does not exist, reconfigure with --enable-flac-build, otherwise using --without-flac..." >&5
$as_echo "$as_me: Directory $MAYBE_FLAC does not exist, reconfigure with --enable-flac-build, otherwise using --without-flac..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$FLAC_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_FLAC_BUILD_TRUE=
  HAVE_FLAC_BUILD_FALSE='#'
else
  HAVE_FLAC_BUILD_TRUE='#'
  HAVE_FLAC_BUILD_FALSE=
fi

















    if test x$SOX_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_SOX = x; then :
   MAYBE_SOX=libsox
fi
	      SOX_BUILD=yes
	      SOX_CONFIGURE_FILE="$MAYBE_SOX"/configure
	      SOX_LIB="\${ROOTDIR}/local/lib/libsox.a"


	      CONFIGURE_SOX_FLAGS="--without-mad --without-flac --without-lame --prefix=$ROOTDIR/local CPPFLAGS="-I$ROOTDIR/local/include" $SOX_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_SOX_FLAGS=$CONFIGURE_SOX_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_SOX_FLAGS=$CONFIGURE_SOX_FLAGS" >&6;}
	      # sanity checks
              if test x$SOX_BUILD = xyes && ! test -d $MAYBE_SOX; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_SOX does not exist, reconfigure with --enable-sox-build, otherwise using --without-sox..." >&5
$as_echo "$as_me: Directory $MAYBE_SOX does not exist, reconfigure with --enable-sox-build, otherwise using --without-sox..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$SOX_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_SOX_BUILD_TRUE=
  HAVE_SOX_BUILD_FALSE='#'
else
  HAVE_SOX_BUILD_TRUE='#'
  HAVE_SOX_BUILD_FALSE=
fi

















    if test x$LIBOGG_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_LIBOGG = x; then :
   MAYBE_LIBOGG=libogg
fi
	      LIBOGG_BUILD=yes
	      LIBOGG_CONFIGURE_FILE="$MAYBE_LIBOGG"/configure
	      LIBOGG_LIB="\${ROOTDIR}/local/lib/libogg.a"


	      CONFIGURE_LIBOGG_FLAGS="--prefix=$ROOTDIR/local CPPFLAGS="-I$ROOTDIR/local/include" $LIBOGG_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_LIBOGG_FLAGS=$CONFIGURE_LIBOGG_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_LIBOGG_FLAGS=$CONFIGURE_LIBOGG_FLAGS" >&6;}
	      # sanity checks
              if test x$LIBOGG_BUILD = xyes && ! test -d $MAYBE_LIBOGG; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_LIBOGG does not exist, reconfigure with --enable-libogg-build, otherwise using --without-libogg..." >&5
$as_echo "$as_me: Directory $MAYBE_LIBOGG does not exist, reconfigure with --enable-libogg-build, otherwise using --without-libogg..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$LIBOGG_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_LIBOGG_BUILD_TRUE=
  HAVE_LIBOGG_BUILD_FALSE='#'
else
  HAVE_LIBOGG_BUILD_TRUE='#'
  HAVE_LIBOGG_BUILD_FALSE=
fi












    # auxiliary libs that remain within package, not installed










    if test x$IBERTY_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_IBERTY = x; then :
   MAYBE_IBERTY=libglibc
fi
	      IBERTY_BUILD=yes
	      IBERTY_CONFIGURE_FILE="$MAYBE_IBERTY"/configure
	      IBERTY_LIB="\${top_builddir}/$MAYBE_IBERTY/src/$MAYBE_IBERTY.a"


	      CONFIGURE_IBERTY_FLAGS=" $IBERTY_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_IBERTY_FLAGS=$CONFIGURE_IBERTY_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_IBERTY_FLAGS=$CONFIGURE_IBERTY_FLAGS" >&6;}
	      # sanity checks
              if test x$IBERTY_BUILD = xyes && ! test -d $MAYBE_IBERTY; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_IBERTY does not exist, reconfigure with --enable-iberty-build, otherwise using --without-iberty..." >&5
$as_echo "$as_me: Directory $MAYBE_IBERTY does not exist, reconfigure with --enable-iberty-build, otherwise using --without-iberty..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$IBERTY_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_IBERTY_BUILD_TRUE=
  HAVE_IBERTY_BUILD_FALSE='#'
else
  HAVE_IBERTY_BUILD_TRUE='#'
  HAVE_IBERTY_BUILD_FALSE=
fi

















    if test x$FIXWAV_BUILD = xyes || test x$ALL_BUILDS = xyes; then :

	      if test x$MAYBE_FIXWAV = x; then :
   MAYBE_FIXWAV=libfixwav
fi
	      FIXWAV_BUILD=yes
	      FIXWAV_CONFIGURE_FILE="$MAYBE_FIXWAV"/configure
	      FIXWAV_LIB="\${top_builddir}/$MAYBE_FIXWAV/src/$MAYBE_FIXWAV.a"


	      CONFIGURE_FIXWAV_FLAGS=" $FIXWAV_FLAGS"

	      { $as_echo "$as_me:${as_lineno-$LINENO}: CONFIGURE_FIXWAV_FLAGS=$CONFIGURE_FIXWAV_FLAGS" >&5
$as_echo "$as_me: CONFIGURE_FIXWAV_FLAGS=$CONFIGURE_FIXWAV_FLAGS" >&6;}
	      # sanity checks
              if test x$FIXWAV_BUILD = xyes && ! test -d $MAYBE_FIXWAV; then :


                        { $as_echo "$as_me:${as_lineno-$LINENO}: Directory $MAYBE_FIXWAV does not exist, reconfigure with --enable-fixwav-build, otherwise using --without-fixwav..." >&5
$as_echo "$as_me: Directory $MAYBE_FIXWAV does not exist, reconfigure with --enable-fixwav-build, otherwise using --without-fixwav..." >&6;}
                        as_fn_exit $?

fi

fi

     if test x$FIXWAV_BUILD = xyes || test x$ALL_BUILDS = xyes; then
  HAVE_FIXWAV_BUILD_TRUE=
  HAVE_FIXWAV_BUILD_FALSE='#'
else
  HAVE_FIXWAV_BUILD_TRUE='#'
  HAVE_FIXWAV_BUILD_FALSE=
fi

















#=======================================
# Checks for programs/functions/compiler
#=======================================

#obsolescent function checks have been retrieved from autoscan output

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
$as_echo_n "checking whether ln -s works... " >&6; }
LN_S=$as_ln_s
if test "$LN_S" = "ln -s"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
$as_echo "no, using $LN_S" >&6; }
fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
$as_echo_n "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
set x ${MAKE-make}
ac_make=`$as_echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
if { as_var=ac_cv_prog_make_${ac_make}_set; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  cat >conftest.make <<\_ACEOF
SHELL = /bin/sh
all:
	@echo '@@@%%%=$(MAKE)=@@@%%%'
_ACEOF
# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
case `${MAKE-make} -f conftest.make 2>/dev/null` in
  *@@@%%%=?*=@@@%%%*)
    eval ac_cv_prog_make_${ac_make}_set=yes;;
  *)
    eval ac_cv_prog_make_${ac_make}_set=no;;
esac
rm -f conftest.make
fi
if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
  SET_MAKE=
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
  SET_MAKE="MAKE=${MAKE-make}"
fi

if test "x$CC" != xcc; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC and cc understand -c and -o together" >&5
$as_echo_n "checking whether $CC and cc understand -c and -o together... " >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether cc understands -c and -o together" >&5
$as_echo_n "checking whether cc understands -c and -o together... " >&6; }
fi
set dummy $CC; ac_cc=`$as_echo "$2" |
		      sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`
if { as_var=ac_cv_prog_cc_${ac_cc}_c_o; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
# Make sure it works both with $CC and with simple cc.
# We do the test twice because some compilers refuse to overwrite an
# existing .o file with -o, though they will create one.
ac_try='$CC -c conftest.$ac_ext -o conftest2.$ac_objext >&5'
rm -f conftest2.*
if { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } &&
   test -f conftest2.$ac_objext && { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; };
then
  eval ac_cv_prog_cc_${ac_cc}_c_o=yes
  if test "x$CC" != xcc; then
    # Test first that cc exists at all.
    if { ac_try='cc -c conftest.$ac_ext >&5'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then
      ac_try='cc -c conftest.$ac_ext -o conftest2.$ac_objext >&5'
      rm -f conftest2.*
      if { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } &&
	 test -f conftest2.$ac_objext && { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; };
      then
	# cc works too.
	:
      else
	# cc exists but doesn't like -o.
	eval ac_cv_prog_cc_${ac_cc}_c_o=no
      fi
    fi
  fi
else
  eval ac_cv_prog_cc_${ac_cc}_c_o=no
fi
rm -f core conftest*

fi
if eval test \$ac_cv_prog_cc_${ac_cc}_c_o = yes; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }

$as_echo "#define NO_MINUS_C_MINUS_O 1" >>confdefs.h

fi

# FIXME: we rely on the cache variable name because
# there is no other way.
set dummy $CC
am_cc=`echo $2 | sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`
eval am_t=\$ac_cv_prog_cc_${am_cc}_c_o
if test "$am_t" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi


   case $ac_cv_prog_cc_stdc in #(
  no) :
    ac_cv_prog_cc_c99=no; ac_cv_prog_cc_c89=no ;; #(
  *) :
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C99" >&5
$as_echo_n "checking for $CC option to accept ISO C99... " >&6; }
if test "${ac_cv_prog_cc_c99+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_prog_cc_c99=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdbool.h>
#include <stdlib.h>
#include <wchar.h>
#include <stdio.h>

// Check varargs macros.  These examples are taken from C99 6.10.3.5.
#define debug(...) fprintf (stderr, __VA_ARGS__)
#define showlist(...) puts (#__VA_ARGS__)
#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
static void
test_varargs_macros (void)
{
  int x = 1234;
  int y = 5678;
  debug ("Flag");
  debug ("X = %d\n", x);
  showlist (The first, second, and third items.);
  report (x>y, "x is %d but y is %d", x, y);
}

// Check long long types.
#define BIG64 18446744073709551615ull
#define BIG32 4294967295ul
#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
#if !BIG_OK
  your preprocessor is broken;
#endif
#if BIG_OK
#else
  your preprocessor is broken;
#endif
static long long int bignum = -9223372036854775807LL;
static unsigned long long int ubignum = BIG64;

struct incomplete_array
{
  int datasize;
  double data[];
};

struct named_init {
  int number;
  const wchar_t *name;
  double average;
};

typedef const char *ccp;

static inline int
test_restrict (ccp restrict text)
{
  // See if C++-style comments work.
  // Iterate through items via the restricted pointer.
  // Also check for declarations in for loops.
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
    continue;
  return 0;
}

// Check varargs and va_copy.
static void
test_varargs (const char *format, ...)
{
  va_list args;
  va_start (args, format);
  va_list args_copy;
  va_copy (args_copy, args);

  const char *str;
  int number;
  float fnumber;

  while (*format)
    {
      switch (*format++)
	{
	case 's': // string
	  str = va_arg (args_copy, const char *);
	  break;
	case 'd': // int
	  number = va_arg (args_copy, int);
	  break;
	case 'f': // float
	  fnumber = va_arg (args_copy, double);
	  break;
	default:
	  break;
	}
    }
  va_end (args_copy);
  va_end (args);
}

int
main ()
{

  // Check bool.
  _Bool success = false;

  // Check restrict.
  if (test_restrict ("String literal") == 0)
    success = true;
  char *restrict newvar = "Another string";

  // Check varargs.
  test_varargs ("s, d' f .", "string", 65, 34.234);
  test_varargs_macros ();

  // Check flexible array members.
  struct incomplete_array *ia =
    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
  ia->datasize = 10;
  for (int i = 0; i < ia->datasize; ++i)
    ia->data[i] = i * 1.234;

  // Check named initializers.
  struct named_init ni = {
    .number = 34,
    .name = L"Test wide string",
    .average = 543.34343,
  };

  ni.number = 58;

  int dynamic_array[ni.number];
  dynamic_array[ni.number - 1] = 543;

  // work around unused variable warnings
  return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
	  || dynamic_array[ni.number - 1] != 543);

  ;
  return 0;
}
_ACEOF
for ac_arg in '' -std=gnu99 -std=c99 -c99 -AC99 -xc99=all -qlanglvl=extc99
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_c99=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext
  test "x$ac_cv_prog_cc_c99" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC

fi
# AC_CACHE_VAL
case "x$ac_cv_prog_cc_c99" in
  x)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
$as_echo "none needed" >&6; } ;;
  xno)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
$as_echo "unsupported" >&6; } ;;
  *)
    CC="$CC $ac_cv_prog_cc_c99"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99" >&5
$as_echo "$ac_cv_prog_cc_c99" >&6; } ;;
esac
if test "x$ac_cv_prog_cc_c99" != xno; then :
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
if test "${ac_cv_prog_cc_c89+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
struct buf { int x; };
FILE * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not '\xHH' hex character constants.
   These don't provoke an error unfortunately, instead are silently treated
   as 'x'.  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
   array size at least.  It's necessary to write '\x00'==0 to get something
   that's true only with -std.  */
int osf4_cc_array ['\x00' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) 'x'
int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
main ()
{
return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC

fi
# AC_CACHE_VAL
case "x$ac_cv_prog_cc_c89" in
  x)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
$as_echo "none needed" >&6; } ;;
  xno)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
$as_echo "unsupported" >&6; } ;;
  *)
    CC="$CC $ac_cv_prog_cc_c89"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
esac
if test "x$ac_cv_prog_cc_c89" != xno; then :
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89
else
  ac_cv_prog_cc_stdc=no
fi

fi
 ;;
esac
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO Standard C" >&5
$as_echo_n "checking for $CC option to accept ISO Standard C... " >&6; }
  if test "${ac_cv_prog_cc_stdc+set}" = set; then :
  $as_echo_n "(cached) " >&6
fi

  case $ac_cv_prog_cc_stdc in #(
  no) :
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
$as_echo "unsupported" >&6; } ;; #(
  '') :
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
$as_echo "none needed" >&6; } ;; #(
  *) :
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_stdc" >&5
$as_echo "$ac_cv_prog_cc_stdc" >&6; } ;;
esac

for ac_header in stdlib.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "stdlib.h" "ac_cv_header_stdlib_h" "$ac_includes_default"
if test "x$ac_cv_header_stdlib_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_STDLIB_H 1
_ACEOF

fi

done

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for GNU libc compatible malloc" >&5
$as_echo_n "checking for GNU libc compatible malloc... " >&6; }
if test "${ac_cv_func_malloc_0_nonnull+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test "$cross_compiling" = yes; then :
  ac_cv_func_malloc_0_nonnull=no
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined STDC_HEADERS || defined HAVE_STDLIB_H
# include <stdlib.h>
#else
char *malloc ();
#endif

int
main ()
{
return ! malloc (0);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :
  ac_cv_func_malloc_0_nonnull=yes
else
  ac_cv_func_malloc_0_nonnull=no
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_malloc_0_nonnull" >&5
$as_echo "$ac_cv_func_malloc_0_nonnull" >&6; }
if test $ac_cv_func_malloc_0_nonnull = yes; then :

$as_echo "#define HAVE_MALLOC 1" >>confdefs.h

else
  $as_echo "#define HAVE_MALLOC 0" >>confdefs.h

   case " $LIBOBJS " in
  *" malloc.$ac_objext "* ) ;;
  *) LIBOBJS="$LIBOBJS malloc.$ac_objext"
 ;;
esac


$as_echo "#define malloc rpl_malloc" >>confdefs.h

fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for working strnlen" >&5
$as_echo_n "checking for working strnlen... " >&6; }
if test "${ac_cv_func_strnlen_working+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test "$cross_compiling" = yes; then :
  ac_cv_func_strnlen_working=no
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{

#define S "foobar"
#define S_LEN (sizeof S - 1)

  /* At least one implementation is buggy: that of AIX 4.3 would
     give strnlen (S, 1) == 3.  */

  int i;
  for (i = 0; i < S_LEN + 1; ++i)
    {
      int expected = i <= S_LEN ? i : S_LEN;
      if (strnlen (S, i) != expected)
	return 1;
    }
  return 0;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :
  ac_cv_func_strnlen_working=yes
else
  ac_cv_func_strnlen_working=no
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_strnlen_working" >&5
$as_echo "$ac_cv_func_strnlen_working" >&6; }
test $ac_cv_func_strnlen_working = no && case " $LIBOBJS " in
  *" strnlen.$ac_objext "* ) ;;
  *) LIBOBJS="$LIBOBJS strnlen.$ac_objext"
 ;;
esac


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for _LARGEFILE_SOURCE value needed for large files" >&5
$as_echo_n "checking for _LARGEFILE_SOURCE value needed for large files... " >&6; }
if test "${ac_cv_sys_largefile_source+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  while :; do
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h> /* for off_t */
     #include <stdio.h>
int
main ()
{
int (*fp) (FILE *, off_t, int) = fseeko;
     return fseeko (stdin, 0, 0) && fp (stdin, 0, 0);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_sys_largefile_source=no; break
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#define _LARGEFILE_SOURCE 1
#include <sys/types.h> /* for off_t */
     #include <stdio.h>
int
main ()
{
int (*fp) (FILE *, off_t, int) = fseeko;
     return fseeko (stdin, 0, 0) && fp (stdin, 0, 0);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_sys_largefile_source=1; break
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
  ac_cv_sys_largefile_source=unknown
  break
done
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_source" >&5
$as_echo "$ac_cv_sys_largefile_source" >&6; }
case $ac_cv_sys_largefile_source in #(
  no | unknown) ;;
  *)
cat >>confdefs.h <<_ACEOF
#define _LARGEFILE_SOURCE $ac_cv_sys_largefile_source
_ACEOF
;;
esac
rm -rf conftest*

# We used to try defining _XOPEN_SOURCE=500 too, to work around a bug
# in glibc 2.1.3, but that breaks too many other things.
# If you want fseeko and ftello with glibc, upgrade to a fixed glibc.
if test $ac_cv_sys_largefile_source != unknown; then

$as_echo "#define HAVE_FSEEKO 1" >>confdefs.h

fi


#checks only
for ac_func in floor memmove memset mkdir rmdir setlocale strerror strtol snprintf fseek setlocale strchr strdup strndup strstr strnlen getsubopt memchr dup2 strncasecmp strrchr
do :
  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
eval as_val=\$$as_ac_var
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
_ACEOF

fi
done


# using -liberty to bootstrap GNU libc usage

if  test x$ac_cv_c_compiler_gnu = xyes ; then :

  GCC_MAJOR_VERSION=`$CC -dumpversion |$SED "s/\..*//"`
  if  test `echo $CC | $SED "s/mingw32//"` = `echo $CC` ; then :

$as_echo "#define ALWAYS_INLINE 1" >>confdefs.h

fi

fi


if  test "x$ac_cv_prog_cc_stdc" = "xno" ; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: C compiler does not support ISO C99 standard" >&5
$as_echo "$as_me: WARNING: C compiler does not support ISO C99 standard" >&2;}
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking C99 struct flexible array support" >&5
$as_echo_n "checking C99 struct flexible array support... " >&6; }
if test "${ac_cv_c99_flexible_array+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  # Initialize to unknown
ac_cv_c99_flexible_array=no

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

	#include <stdlib.h>
	typedef struct {
	int k;
	char buffer [] ;
	} MY_STRUCT ;

int
main ()
{
  MY_STRUCT *p = calloc (1, sizeof (MY_STRUCT) + 42);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_c99_flexible_array=yes
else
  ac_cv_c99_flexible_array=no

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c99_flexible_array" >&5
$as_echo "$ac_cv_c99_flexible_array" >&6; }

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking C99 has size-variable array support" >&5
$as_echo_n "checking C99 has size-variable array support... " >&6; }
if test "${ac_cv_c99_size_variable_static_array+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  # Initialize to unknown
ac_cv_c99_size_variable_static_array=no

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

	#include <stdlib.h>
	typedef struct {
	int k;
	char buffer [] ;
	} MY_STRUCT ;

int
main ()
{
  int  p[sizeof (MY_STRUCT) + 42];
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_c99_size_variable_static_array=yes
else
  ac_cv_c99_size_variable_static_array=no

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c99_size_variable_static_array" >&5
$as_echo "$ac_cv_c99_size_variable_static_array" >&6; }

if  test x$ac_cv_c99_flexible_array != xyes ; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Compiler does not support feature known as the flexible array struct member" >&5
$as_echo "$as_me: WARNING: Compiler does not support feature known as the flexible array struct member" >&2;}
fi

if  test x$ac_cv_c99_size_variable_static_array != xyes ; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Compiler does not support size-variable static arrays" >&5
$as_echo "$as_me: WARNING: Compiler does not support size-variable static arrays" >&2;}
fi


  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for variable-length arrays" >&5
$as_echo_n "checking for variable-length arrays... " >&6; }
if test "${ac_cv_c_vararrays+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
static int x; char a[++x]; a[sizeof a - 1] = 0; return a[0];
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_c_vararrays=yes
else
  ac_cv_c_vararrays=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_vararrays" >&5
$as_echo "$ac_cv_c_vararrays" >&6; }
  if test $ac_cv_c_vararrays = yes; then

$as_echo "#define HAVE_C_VARARRAYS 1" >>confdefs.h

  fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for an ANSI C-conforming const" >&5
$as_echo_n "checking for an ANSI C-conforming const... " >&6; }
if test "${ac_cv_c_const+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
/* FIXME: Include the comments suggested by Paul. */
#ifndef __cplusplus
  /* Ultrix mips cc rejects this.  */
  typedef int charset[2];
  const charset cs;
  /* SunOS 4.1.1 cc rejects this.  */
  char const *const *pcpcc;
  char **ppc;
  /* NEC SVR4.0.2 mips cc rejects this.  */
  struct point {int x, y;};
  static struct point const zero = {0,0};
  /* AIX XL C 1.02.0.0 rejects this.
     It does not let you subtract one const X* pointer from another in
     an arm of an if-expression whose if-part is not a constant
     expression */
  const char *g = "string";
  pcpcc = &g + (g ? g-g : 0);
  /* HPUX 7.0 cc rejects these. */
  ++pcpcc;
  ppc = (char**) pcpcc;
  pcpcc = (char const *const *) ppc;
  { /* SCO 3.2v4 cc rejects this.  */
    char *t;
    char const *s = 0 ? (char *) 0 : (char const *) 0;

    *t++ = 0;
    if (s) return 0;
  }
  { /* Someone thinks the Sun supposedly-ANSI compiler will reject this.  */
    int x[] = {25, 17};
    const int *foo = &x[0];
    ++foo;
  }
  { /* Sun SC1.0 ANSI compiler rejects this -- but not the above. */
    typedef const int *iptr;
    iptr p = 0;
    ++p;
  }
  { /* AIX XL C 1.02.0.0 rejects this saying
       "k.c", line 2.27: 1506-025 (S) Operand must be a modifiable lvalue. */
    struct s { int j; const int *ap[3]; };
    struct s *b; b->j = 5;
  }
  { /* ULTRIX-32 V3.1 (Rev 9) vcc rejects this */
    const int foo = 10;
    if (!foo) return 0;
  }
  return !cs[0] && !zero.x;
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_c_const=yes
else
  ac_cv_c_const=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_const" >&5
$as_echo "$ac_cv_c_const" >&6; }
if test $ac_cv_c_const = no; then

$as_echo "#define const /**/" >>confdefs.h

fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for inline" >&5
$as_echo_n "checking for inline... " >&6; }
if test "${ac_cv_c_inline+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_c_inline=no
for ac_kw in inline __inline__ __inline; do
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifndef __cplusplus
typedef int foo_t;
static $ac_kw foo_t static_foo () {return 0; }
$ac_kw foo_t foo () {return 0; }
#endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_c_inline=$ac_kw
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  test "$ac_cv_c_inline" != no && break
done

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_inline" >&5
$as_echo "$ac_cv_c_inline" >&6; }

case $ac_cv_c_inline in
  inline | yes) ;;
  *)
    case $ac_cv_c_inline in
      no) ac_val=;;
      *) ac_val=$ac_cv_c_inline;;
    esac
    cat >>confdefs.h <<_ACEOF
#ifndef __cplusplus
#define inline $ac_val
#endif
_ACEOF
    ;;
esac


# Determine endian-ness of target processor.

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking processor byte ordering" >&5
$as_echo_n "checking processor byte ordering... " >&6; }
if test "${ac_cv_c_byte_order+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  # Initialize to unknown
ac_cv_c_byte_order=unknown

if test x$ac_cv_header_endian_h = xyes ; then

	# First try <endian.h> which should set BYTE_ORDER.

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <endian.h>
		#if BYTE_ORDER != LITTLE_ENDIAN
			not big endian
		#endif

int
main ()
{
return 0 ;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_c_byte_order=little

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <endian.h>
		#if BYTE_ORDER != BIG_ENDIAN
			not big endian
		#endif

int
main ()
{
return 0 ;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_c_byte_order=big

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

	fi

if test $ac_cv_c_byte_order = unknown ; then

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/types.h>
		#include <sys/param.h>
		#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN
			bogus endian macros
		#endif

int
main ()
{
return 0 ;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

			#include <sys/types.h>
			#include <sys/param.h>
			#if BYTE_ORDER != LITTLE_ENDIAN
				not big endian
			#endif

int
main ()
{
return 0 ;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_c_byte_order=little

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

		cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

			#include <sys/types.h>
			#include <sys/param.h>
			#if BYTE_ORDER != LITTLE_ENDIAN
				not big endian
			#endif

int
main ()
{
return 0 ;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_c_byte_order=little

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext


fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

 	fi

if test $ac_cv_c_byte_order = unknown ; then
	if test $cross_compiling = yes ; then
		# This is the last resort. Try to guess the target processor endian-ness
		# by looking at the target CPU type.

		case "$target_cpu" in
			alpha* | i?86* | mipsel* | ia64*)
				ac_cv_c_big_endian=0
				ac_cv_c_little_endian=1
				;;

			m68* | mips* | powerpc* | hppa* | sparc*)
				ac_cv_c_big_endian=1
				ac_cv_c_little_endian=0
				;;

			esac

	else
		if test "$cross_compiling" = yes; then :
  ac_cv_c_byte_order=unknown

else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		int main (void)
		{	/* Are we little or big endian?  From Harbison&Steele.  */
			union
			{	long l ;
				char c [sizeof (long)] ;
			} u ;
			u.l = 1 ;
			return (u.c [sizeof (long) - 1] == 1);
			}

_ACEOF
if ac_fn_c_try_run "$LINENO"; then :

else
  ac_cv_c_byte_order=big
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi


		if test "$cross_compiling" = yes; then :
  ac_cv_c_byte_order=unknown

else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
int main (void)
		{	/* Are we little or big endian?  From Harbison&Steele.  */
			union
			{	long l ;
				char c [sizeof (long)] ;
			} u ;
			u.l = 1 ;
			return (u.c [0] == 1);
			}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :

else
  ac_cv_c_byte_order=little
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

		fi
	fi


fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_byte_order" >&5
$as_echo "$ac_cv_c_byte_order" >&6; }


if test $ac_cv_c_byte_order = big ; then
	ac_cv_c_big_endian=1
	ac_cv_c_little_endian=0
elif test $ac_cv_c_byte_order = little ; then
	ac_cv_c_big_endian=0
	ac_cv_c_little_endian=1
else
	ac_cv_c_big_endian=0
	ac_cv_c_little_endian=0

	echo    *****************************************************************
	echo	*** Not able to determine endian-ness of target processor.
	echo	*** The constants CPU_IS_BIG_ENDIAN and CPU_IS_LITTLE_ENDIAN in
	echo	*** src/config.h may need to be hand editied.
	echo	*****************************************************************


fi




cat >>confdefs.h <<_ACEOF
#define CPU_IS_BIG_ENDIAN ${ac_cv_c_big_endian}
_ACEOF


cat >>confdefs.h <<_ACEOF
#define CPU_IS_LITTLE_ENDIAN ${ac_cv_c_little_endian}
_ACEOF



if  test x${ac_cv_c_big_endian} = xyes ; then :
   CFLAGS="$CFLAGS   -DCPU_IS_BIG_ENDIAN"
else
   CFLAGS="$CFLAGS  -DCPU_IS_LITTLE_ENDIAN"
fi


#========================================
# Checks for libraries, headers and types
#========================================

ac_header_dirent=no
for ac_hdr in dirent.h sys/ndir.h sys/dir.h ndir.h; do
  as_ac_Header=`$as_echo "ac_cv_header_dirent_$ac_hdr" | $as_tr_sh`
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_hdr that defines DIR" >&5
$as_echo_n "checking for $ac_hdr that defines DIR... " >&6; }
if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
#include <$ac_hdr>

int
main ()
{
if ((DIR *) 0)
return 0;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  eval "$as_ac_Header=yes"
else
  eval "$as_ac_Header=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
eval ac_res=\$$as_ac_Header
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
eval as_val=\$$as_ac_Header
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_hdr" | $as_tr_cpp` 1
_ACEOF

ac_header_dirent=$ac_hdr; break
fi

done
# Two versions of opendir et al. are in -ldir and -lx on SCO Xenix.
if test $ac_header_dirent = dirent.h; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing opendir" >&5
$as_echo_n "checking for library containing opendir... " >&6; }
if test "${ac_cv_search_opendir+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char opendir ();
int
main ()
{
return opendir ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' dir; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_search_opendir=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if test "${ac_cv_search_opendir+set}" = set; then :
  break
fi
done
if test "${ac_cv_search_opendir+set}" = set; then :

else
  ac_cv_search_opendir=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_opendir" >&5
$as_echo "$ac_cv_search_opendir" >&6; }
ac_res=$ac_cv_search_opendir
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"

fi

else
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing opendir" >&5
$as_echo_n "checking for library containing opendir... " >&6; }
if test "${ac_cv_search_opendir+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char opendir ();
int
main ()
{
return opendir ();
  ;
  return 0;
}
_ACEOF
for ac_lib in '' x; do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_search_opendir=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext
  if test "${ac_cv_search_opendir+set}" = set; then :
  break
fi
done
if test "${ac_cv_search_opendir+set}" = set; then :

else
  ac_cv_search_opendir=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_opendir" >&5
$as_echo "$ac_cv_search_opendir" >&6; }
ac_res=$ac_cv_search_opendir
if test "$ac_res" != no; then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"

fi

fi


  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable assertions" >&5
$as_echo_n "checking whether to enable assertions... " >&6; }
  # Check whether --enable-assert was given.
if test "${enable_assert+set}" = set; then :
  enableval=$enable_assert; ac_enable_assert=$enableval
     if       test "x$enableval" = xno; then :

$as_echo "#define NDEBUG 1" >>confdefs.h

elif test "x$enableval" != xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: invalid argument supplied to --enable-assert" >&5
$as_echo "$as_me: WARNING: invalid argument supplied to --enable-assert" >&2;}
	ac_enable_assert=yes
fi
else
  ac_enable_assert=yes
fi

  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_enable_assert" >&5
$as_echo "$ac_enable_assert" >&6; }

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for stdbool.h that conforms to C99" >&5
$as_echo_n "checking for stdbool.h that conforms to C99... " >&6; }
if test "${ac_cv_header_stdbool_h+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <stdbool.h>
#ifndef bool
 "error: bool is not defined"
#endif
#ifndef false
 "error: false is not defined"
#endif
#if false
 "error: false is not 0"
#endif
#ifndef true
 "error: true is not defined"
#endif
#if true != 1
 "error: true is not 1"
#endif
#ifndef __bool_true_false_are_defined
 "error: __bool_true_false_are_defined is not defined"
#endif

	struct s { _Bool s: 1; _Bool t; } s;

	char a[true == 1 ? 1 : -1];
	char b[false == 0 ? 1 : -1];
	char c[__bool_true_false_are_defined == 1 ? 1 : -1];
	char d[(bool) 0.5 == true ? 1 : -1];
	bool e = &s;
	char f[(_Bool) 0.0 == false ? 1 : -1];
	char g[true];
	char h[sizeof (_Bool)];
	char i[sizeof s.t];
	enum { j = false, k = true, l = false * true, m = true * 256 };
	/* The following fails for
	   HP aC++/ANSI C B3910B A.05.55 [Dec 04 2003]. */
	_Bool n[m];
	char o[sizeof n == m * sizeof n[0] ? 1 : -1];
	char p[-1 - (_Bool) 0 < 0 && -1 - (bool) 0 < 0 ? 1 : -1];
#	if defined __xlc__ || defined __GNUC__
	 /* Catch a bug in IBM AIX xlc compiler version 6.0.0.0
	    reported by James Lemley on 2005-10-05; see
	    http://lists.gnu.org/archive/html/bug-coreutils/2005-10/msg00086.html
	    This test is not quite right, since xlc is allowed to
	    reject this program, as the initializer for xlcbug is
	    not one of the forms that C requires support for.
	    However, doing the test right would require a runtime
	    test, and that would make cross-compilation harder.
	    Let us hope that IBM fixes the xlc bug, and also adds
	    support for this kind of constant expression.  In the
	    meantime, this test will reject xlc, which is OK, since
	    our stdbool.h substitute should suffice.  We also test
	    this with GCC, where it should work, to detect more
	    quickly whether someone messes up the test in the
	    future.  */
	 char digs[] = "0123456789";
	 int xlcbug = 1 / (&(digs + 5)[-2 + (bool) 1] == &digs[4] ? 1 : -1);
#	endif
	/* Catch a bug in an HP-UX C compiler.  See
	   http://gcc.gnu.org/ml/gcc-patches/2003-12/msg02303.html
	   http://lists.gnu.org/archive/html/bug-coreutils/2005-11/msg00161.html
	 */
	_Bool q = true;
	_Bool *pq = &q;

int
main ()
{

	*pq |= q;
	*pq |= ! q;
	/* Refer to every declared value, to avoid compiler optimizations.  */
	return (!a + !b + !c + !d + !e + !f + !g + !h + !i + !!j + !k + !!l
		+ !m + !n + !o + !p + !q + !pq);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_header_stdbool_h=yes
else
  ac_cv_header_stdbool_h=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdbool_h" >&5
$as_echo "$ac_cv_header_stdbool_h" >&6; }
ac_fn_c_check_type "$LINENO" "_Bool" "ac_cv_type__Bool" "$ac_includes_default"
if test "x$ac_cv_type__Bool" = x""yes; then :

cat >>confdefs.h <<_ACEOF
#define HAVE__BOOL 1
_ACEOF


fi

if test $ac_cv_header_stdbool_h = yes; then

$as_echo "#define HAVE_STDBOOL_H 1" >>confdefs.h

fi

for ac_header in errno.h sys/stat.h time.h inttypes.h locale.h stdint.h stdlib.h string.h sys/time.h unistd.h fcntl.h
do :
  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
eval as_val=\$$as_ac_Header
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for error_at_line" >&5
$as_echo_n "checking for error_at_line... " >&6; }
if test "${ac_cv_lib_error_at_line+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <error.h>
int
main ()
{
error_at_line (0, 0, "", 0, "an error occurred");
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_lib_error_at_line=yes
else
  ac_cv_lib_error_at_line=no
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_error_at_line" >&5
$as_echo "$ac_cv_lib_error_at_line" >&6; }
if test $ac_cv_lib_error_at_line = no; then
  case " $LIBOBJS " in
  *" error.$ac_objext "* ) ;;
  *) LIBOBJS="$LIBOBJS error.$ac_objext"
 ;;
esac

fi

ac_fn_c_check_type "$LINENO" "pid_t" "ac_cv_type_pid_t" "$ac_includes_default"
if test "x$ac_cv_type_pid_t" = x""yes; then :

else

cat >>confdefs.h <<_ACEOF
#define pid_t int
_ACEOF

fi

for ac_header in vfork.h
do :
  ac_fn_c_check_header_mongrel "$LINENO" "vfork.h" "ac_cv_header_vfork_h" "$ac_includes_default"
if test "x$ac_cv_header_vfork_h" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define HAVE_VFORK_H 1
_ACEOF

fi

done

for ac_func in fork vfork
do :
  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
eval as_val=\$$as_ac_var
   if test "x$as_val" = x""yes; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
_ACEOF

fi
done

if test "x$ac_cv_func_fork" = xyes; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for working fork" >&5
$as_echo_n "checking for working fork... " >&6; }
if test "${ac_cv_func_fork_works+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test "$cross_compiling" = yes; then :
  ac_cv_func_fork_works=cross
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{

	  /* By Ruediger Kuhlmann. */
	  return fork () < 0;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :
  ac_cv_func_fork_works=yes
else
  ac_cv_func_fork_works=no
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_fork_works" >&5
$as_echo "$ac_cv_func_fork_works" >&6; }

else
  ac_cv_func_fork_works=$ac_cv_func_fork
fi
if test "x$ac_cv_func_fork_works" = xcross; then
  case $host in
    *-*-amigaos* | *-*-msdosdjgpp*)
      # Override, as these systems have only a dummy fork() stub
      ac_cv_func_fork_works=no
      ;;
    *)
      ac_cv_func_fork_works=yes
      ;;
  esac
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: result $ac_cv_func_fork_works guessed because of cross compilation" >&5
$as_echo "$as_me: WARNING: result $ac_cv_func_fork_works guessed because of cross compilation" >&2;}
fi
ac_cv_func_vfork_works=$ac_cv_func_vfork
if test "x$ac_cv_func_vfork" = xyes; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for working vfork" >&5
$as_echo_n "checking for working vfork... " >&6; }
if test "${ac_cv_func_vfork_works+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  if test "$cross_compiling" = yes; then :
  ac_cv_func_vfork_works=cross
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
/* Thanks to Paul Eggert for this test.  */
$ac_includes_default
#include <sys/wait.h>
#ifdef HAVE_VFORK_H
# include <vfork.h>
#endif
/* On some sparc systems, changes by the child to local and incoming
   argument registers are propagated back to the parent.  The compiler
   is told about this with #include <vfork.h>, but some compilers
   (e.g. gcc -O) don't grok <vfork.h>.  Test for this by using a
   static variable whose address is put into a register that is
   clobbered by the vfork.  */
static void
#ifdef __cplusplus
sparc_address_test (int arg)
# else
sparc_address_test (arg) int arg;
#endif
{
  static pid_t child;
  if (!child) {
    child = vfork ();
    if (child < 0) {
      perror ("vfork");
      _exit(2);
    }
    if (!child) {
      arg = getpid();
      write(-1, "", 0);
      _exit (arg);
    }
  }
}

int
main ()
{
  pid_t parent = getpid ();
  pid_t child;

  sparc_address_test (0);

  child = vfork ();

  if (child == 0) {
    /* Here is another test for sparc vfork register problems.  This
       test uses lots of local variables, at least as many local
       variables as main has allocated so far including compiler
       temporaries.  4 locals are enough for gcc 1.40.3 on a Solaris
       4.1.3 sparc, but we use 8 to be safe.  A buggy compiler should
       reuse the register of parent for one of the local variables,
       since it will think that parent can't possibly be used any more
       in this routine.  Assigning to the local variable will thus
       munge parent in the parent process.  */
    pid_t
      p = getpid(), p1 = getpid(), p2 = getpid(), p3 = getpid(),
      p4 = getpid(), p5 = getpid(), p6 = getpid(), p7 = getpid();
    /* Convince the compiler that p..p7 are live; otherwise, it might
       use the same hardware register for all 8 local variables.  */
    if (p != p1 || p != p2 || p != p3 || p != p4
	|| p != p5 || p != p6 || p != p7)
      _exit(1);

    /* On some systems (e.g. IRIX 3.3), vfork doesn't separate parent
       from child file descriptors.  If the child closes a descriptor
       before it execs or exits, this munges the parent's descriptor
       as well.  Test for this by closing stdout in the child.  */
    _exit(close(fileno(stdout)) != 0);
  } else {
    int status;
    struct stat st;

    while (wait(&status) != child)
      ;
    return (
	 /* Was there some problem with vforking?  */
	 child < 0

	 /* Did the child fail?  (This shouldn't happen.)  */
	 || status

	 /* Did the vfork/compiler bug occur?  */
	 || parent != getpid()

	 /* Did the file descriptor bug occur?  */
	 || fstat(fileno(stdout), &st) != 0
	 );
  }
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :
  ac_cv_func_vfork_works=yes
else
  ac_cv_func_vfork_works=no
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_vfork_works" >&5
$as_echo "$ac_cv_func_vfork_works" >&6; }

fi;
if test "x$ac_cv_func_fork_works" = xcross; then
  ac_cv_func_vfork_works=$ac_cv_func_vfork
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: result $ac_cv_func_vfork_works guessed because of cross compilation" >&5
$as_echo "$as_me: WARNING: result $ac_cv_func_vfork_works guessed because of cross compilation" >&2;}
fi

if test "x$ac_cv_func_vfork_works" = xyes; then

$as_echo "#define HAVE_WORKING_VFORK 1" >>confdefs.h

else

$as_echo "#define vfork fork" >>confdefs.h

fi
if test "x$ac_cv_func_fork_works" = xyes; then

$as_echo "#define HAVE_WORKING_FORK 1" >>confdefs.h

fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for an ANSI C-conforming const" >&5
$as_echo_n "checking for an ANSI C-conforming const... " >&6; }
if test "${ac_cv_c_const+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
/* FIXME: Include the comments suggested by Paul. */
#ifndef __cplusplus
  /* Ultrix mips cc rejects this.  */
  typedef int charset[2];
  const charset cs;
  /* SunOS 4.1.1 cc rejects this.  */
  char const *const *pcpcc;
  char **ppc;
  /* NEC SVR4.0.2 mips cc rejects this.  */
  struct point {int x, y;};
  static struct point const zero = {0,0};
  /* AIX XL C 1.02.0.0 rejects this.
     It does not let you subtract one const X* pointer from another in
     an arm of an if-expression whose if-part is not a constant
     expression */
  const char *g = "string";
  pcpcc = &g + (g ? g-g : 0);
  /* HPUX 7.0 cc rejects these. */
  ++pcpcc;
  ppc = (char**) pcpcc;
  pcpcc = (char const *const *) ppc;
  { /* SCO 3.2v4 cc rejects this.  */
    char *t;
    char const *s = 0 ? (char *) 0 : (char const *) 0;

    *t++ = 0;
    if (s) return 0;
  }
  { /* Someone thinks the Sun supposedly-ANSI compiler will reject this.  */
    int x[] = {25, 17};
    const int *foo = &x[0];
    ++foo;
  }
  { /* Sun SC1.0 ANSI compiler rejects this -- but not the above. */
    typedef const int *iptr;
    iptr p = 0;
    ++p;
  }
  { /* AIX XL C 1.02.0.0 rejects this saying
       "k.c", line 2.27: 1506-025 (S) Operand must be a modifiable lvalue. */
    struct s { int j; const int *ap[3]; };
    struct s *b; b->j = 5;
  }
  { /* ULTRIX-32 V3.1 (Rev 9) vcc rejects this */
    const int foo = 10;
    if (!foo) return 0;
  }
  return !cs[0] && !zero.x;
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_c_const=yes
else
  ac_cv_c_const=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_const" >&5
$as_echo "$ac_cv_c_const" >&6; }
if test $ac_cv_c_const = no; then

$as_echo "#define const /**/" >>confdefs.h

fi

ac_fn_c_find_intX_t "$LINENO" "8" "ac_cv_c_int8_t"
case $ac_cv_c_int8_t in #(
  no|yes) ;; #(
  *)

cat >>confdefs.h <<_ACEOF
#define int8_t $ac_cv_c_int8_t
_ACEOF
;;
esac

ac_fn_c_find_intX_t "$LINENO" "16" "ac_cv_c_int16_t"
case $ac_cv_c_int16_t in #(
  no|yes) ;; #(
  *)

cat >>confdefs.h <<_ACEOF
#define int16_t $ac_cv_c_int16_t
_ACEOF
;;
esac

ac_fn_c_find_intX_t "$LINENO" "32" "ac_cv_c_int32_t"
case $ac_cv_c_int32_t in #(
  no|yes) ;; #(
  *)

cat >>confdefs.h <<_ACEOF
#define int32_t $ac_cv_c_int32_t
_ACEOF
;;
esac

ac_fn_c_find_intX_t "$LINENO" "64" "ac_cv_c_int64_t"
case $ac_cv_c_int64_t in #(
  no|yes) ;; #(
  *)

cat >>confdefs.h <<_ACEOF
#define int64_t $ac_cv_c_int64_t
_ACEOF
;;
esac


ac_fn_c_check_type "$LINENO" "mode_t" "ac_cv_type_mode_t" "$ac_includes_default"
if test "x$ac_cv_type_mode_t" = x""yes; then :

else

cat >>confdefs.h <<_ACEOF
#define mode_t int
_ACEOF

fi

ac_fn_c_check_type "$LINENO" "off_t" "ac_cv_type_off_t" "$ac_includes_default"
if test "x$ac_cv_type_off_t" = x""yes; then :

else

cat >>confdefs.h <<_ACEOF
#define off_t long int
_ACEOF

fi

ac_fn_c_check_type "$LINENO" "size_t" "ac_cv_type_size_t" "$ac_includes_default"
if test "x$ac_cv_type_size_t" = x""yes; then :

else

cat >>confdefs.h <<_ACEOF
#define size_t unsigned int
_ACEOF

fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether struct tm is in sys/time.h or time.h" >&5
$as_echo_n "checking whether struct tm is in sys/time.h or time.h... " >&6; }
if test "${ac_cv_struct_tm+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
#include <time.h>

int
main ()
{
struct tm tm;
				     int *p = &tm.tm_sec;
				     return !p;
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_struct_tm=time.h
else
  ac_cv_struct_tm=sys/time.h
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_struct_tm" >&5
$as_echo "$ac_cv_struct_tm" >&6; }
if test $ac_cv_struct_tm = sys/time.h; then

$as_echo "#define TM_IN_SYS_TIME 1" >>confdefs.h

fi

ac_fn_c_find_uintX_t "$LINENO" "16" "ac_cv_c_uint16_t"
case $ac_cv_c_uint16_t in #(
  no|yes) ;; #(
  *)


cat >>confdefs.h <<_ACEOF
#define uint16_t $ac_cv_c_uint16_t
_ACEOF
;;
  esac

ac_fn_c_find_uintX_t "$LINENO" "32" "ac_cv_c_uint32_t"
case $ac_cv_c_uint32_t in #(
  no|yes) ;; #(
  *)

$as_echo "#define _UINT32_T 1" >>confdefs.h


cat >>confdefs.h <<_ACEOF
#define uint32_t $ac_cv_c_uint32_t
_ACEOF
;;
  esac

ac_fn_c_find_uintX_t "$LINENO" "64" "ac_cv_c_uint64_t"
case $ac_cv_c_uint64_t in #(
  no|yes) ;; #(
  *)

$as_echo "#define _UINT64_T 1" >>confdefs.h


cat >>confdefs.h <<_ACEOF
#define uint64_t $ac_cv_c_uint64_t
_ACEOF
;;
  esac

ac_fn_c_find_uintX_t "$LINENO" "8" "ac_cv_c_uint8_t"
case $ac_cv_c_uint8_t in #(
  no|yes) ;; #(
  *)

$as_echo "#define _UINT8_T 1" >>confdefs.h


cat >>confdefs.h <<_ACEOF
#define uint8_t $ac_cv_c_uint8_t
_ACEOF
;;
  esac

ac_fn_c_check_type "$LINENO" "fpos_t" "ac_cv_type_fpos_t" "$ac_includes_default"
if test "x$ac_cv_type_fpos_t" = x""yes; then :

cat >>confdefs.h <<_ACEOF
#define HAVE_FPOS_T 1
_ACEOF

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: fpos_t exists on platform" >&5
$as_echo "fpos_t exists on platform" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: WARNING: fpos_t does not exists on platform" >&5
$as_echo "$as_me: WARNING: WARNING: fpos_t does not exists on platform" >&2;}
fi


# Check whether --enable-largefile was given.
if test "${enable_largefile+set}" = set; then :
  enableval=$enable_largefile;
fi

if test "$enable_largefile" != no; then

  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for special C compiler options needed for large files" >&5
$as_echo_n "checking for special C compiler options needed for large files... " >&6; }
if test "${ac_cv_sys_largefile_CC+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_sys_largefile_CC=no
     if test "$GCC" != yes; then
       ac_save_CC=$CC
       while :; do
	 # IRIX 6.2 and later do not support large files by default,
	 # so use the C compiler's -n32 option if that helps.
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
 /* Check that off_t can represent 2**63 - 1 correctly.
    We can't simply define LARGE_OFF_T to be 9223372036854775807,
    since some C++ compilers masquerading as C compilers
    incorrectly reject 9223372036854775807.  */
#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
		       && LARGE_OFF_T % 2147483647 == 1)
		      ? 1 : -1];
int
main ()
{

  ;
  return 0;
}
_ACEOF
	 if ac_fn_c_try_compile "$LINENO"; then :
  break
fi
rm -f core conftest.err conftest.$ac_objext
	 CC="$CC -n32"
	 if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_sys_largefile_CC=' -n32'; break
fi
rm -f core conftest.err conftest.$ac_objext
	 break
       done
       CC=$ac_save_CC
       rm -f conftest.$ac_ext
    fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_CC" >&5
$as_echo "$ac_cv_sys_largefile_CC" >&6; }
  if test "$ac_cv_sys_largefile_CC" != no; then
    CC=$CC$ac_cv_sys_largefile_CC
  fi

  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for _FILE_OFFSET_BITS value needed for large files" >&5
$as_echo_n "checking for _FILE_OFFSET_BITS value needed for large files... " >&6; }
if test "${ac_cv_sys_file_offset_bits+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  while :; do
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
 /* Check that off_t can represent 2**63 - 1 correctly.
    We can't simply define LARGE_OFF_T to be 9223372036854775807,
    since some C++ compilers masquerading as C compilers
    incorrectly reject 9223372036854775807.  */
#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
		       && LARGE_OFF_T % 2147483647 == 1)
		      ? 1 : -1];
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_sys_file_offset_bits=no; break
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#define _FILE_OFFSET_BITS 64
#include <sys/types.h>
 /* Check that off_t can represent 2**63 - 1 correctly.
    We can't simply define LARGE_OFF_T to be 9223372036854775807,
    since some C++ compilers masquerading as C compilers
    incorrectly reject 9223372036854775807.  */
#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
		       && LARGE_OFF_T % 2147483647 == 1)
		      ? 1 : -1];
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_sys_file_offset_bits=64; break
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  ac_cv_sys_file_offset_bits=unknown
  break
done
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_file_offset_bits" >&5
$as_echo "$ac_cv_sys_file_offset_bits" >&6; }
case $ac_cv_sys_file_offset_bits in #(
  no | unknown) ;;
  *)
cat >>confdefs.h <<_ACEOF
#define _FILE_OFFSET_BITS $ac_cv_sys_file_offset_bits
_ACEOF
;;
esac
rm -rf conftest*
  if test $ac_cv_sys_file_offset_bits = unknown; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for _LARGE_FILES value needed for large files" >&5
$as_echo_n "checking for _LARGE_FILES value needed for large files... " >&6; }
if test "${ac_cv_sys_large_files+set}" = set; then :
  $as_echo_n "(cached) " >&6
else
  while :; do
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <sys/types.h>
 /* Check that off_t can represent 2**63 - 1 correctly.
    We can't simply define LARGE_OFF_T to be 9223372036854775807,
    since some C++ compilers masquerading as C compilers
    incorrectly reject 9223372036854775807.  */
#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
		       && LARGE_OFF_T % 2147483647 == 1)
		      ? 1 : -1];
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_sys_large_files=no; break
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#define _LARGE_FILES 1
#include <sys/types.h>
 /* Check that off_t can represent 2**63 - 1 correctly.
    We can't simply define LARGE_OFF_T to be 9223372036854775807,
    since some C++ compilers masquerading as C compilers
    incorrectly reject 9223372036854775807.  */
#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
		       && LARGE_OFF_T % 2147483647 == 1)
		      ? 1 : -1];
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_sys_large_files=1; break
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  ac_cv_sys_large_files=unknown
  break
done
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_large_files" >&5
$as_echo "$ac_cv_sys_large_files" >&6; }
case $ac_cv_sys_large_files in #(
  no | unknown) ;;
  *)
cat >>confdefs.h <<_ACEOF
#define _LARGE_FILES $ac_cv_sys_large_files
_ACEOF
;;
esac
rm -rf conftest*
  fi
fi


$as_echo "#define _FILE_OFFSET_BITS 64" >>confdefs.h






# correspondence between X_BUILD shell variables and subdirectory names. Could be avoided with lesser flexibility in naming conventions.


{ $as_echo "$as_me:${as_lineno-$LINENO}: Configuring ${PACKAGE_TARNAME}..." >&5
$as_echo "$as_me: Configuring ${PACKAGE_TARNAME}..." >&6;}
ac_config_files="$ac_config_files Makefile dvda-author.desktop dvda-author-shared.spec dvda-author.spec dvda-author.nsi src/Makefile src/include/Makefile libutils/Makefile libutils/src/Makefile libutils/src/include/Makefile libutils/src/private/Makefile libfixwav/Makefile libfixwav/src/Makefile libfixwav/src/include/Makefile CB_project/Makefile CB_project/dvda-author/Makefile CB_project/libc_utils/Makefile CB_project/libfixwav/Makefile CB_project/libats2wav/Makefile libglibc/Makefile libglibc/src/Makefile libglibc/src/include/Makefile libats2wav/Makefile libats2wav/src/Makefile libats2wav/src/include/Makefile images/Makefile script script1 EXAMPLES"




cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# `ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* `ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, we kill variables containing newlines.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
(
  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done

  (set) 2>&1 |
    case $as_nl`(ac_space=' '; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      # `set' does not quote correctly, so add quotes: double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \.
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;; #(
    *)
      # `set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
) |
  sed '
     /^ac_cv_env_/b end
     t clear
     :clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
     t end
     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     :end' >>confcache
if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
  if test -w "$cache_file"; then
    test "x$cache_file" != "x/dev/null" &&
      { $as_echo "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
$as_echo "$as_me: updating cache $cache_file" >&6;}
    cat confcache >$cache_file
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
$as_echo "$as_me: not updating unwritable cache $cache_file" >&6;}
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

DEFS=-DHAVE_CONFIG_H

ac_libobjs=
ac_ltlibobjs=
for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
  ac_i=`$as_echo "$ac_i" | sed "$ac_script"`
  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
  #    will be set to the directory where LIBOBJS objects are built.
  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
done
LIBOBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs


if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
  as_fn_error "conditional \"AMDEP\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
  as_fn_error "conditional \"am__fastdepCC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
 if test -n "$EXEEXT"; then
  am__EXEEXT_TRUE=
  am__EXEEXT_FALSE='#'
else
  am__EXEEXT_TRUE='#'
  am__EXEEXT_FALSE=
fi

if test -z "${HAVE_IBERTY_BUILD_TRUE}" && test -z "${HAVE_IBERTY_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_IBERTY_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_HELP2MAN_TRUE}" && test -z "${HAVE_HELP2MAN_FALSE}"; then
  as_fn_error "conditional \"HAVE_HELP2MAN\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MAN2HTML_TRUE}" && test -z "${HAVE_MAN2HTML_FALSE}"; then
  as_fn_error "conditional \"HAVE_MAN2HTML\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CURL_TRUE}" && test -z "${HAVE_CURL_FALSE}"; then
  as_fn_error "conditional \"HAVE_CURL\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_JPEG2YUV_TRUE}" && test -z "${HAVE_JPEG2YUV_FALSE}"; then
  as_fn_error "conditional \"HAVE_JPEG2YUV\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MPLEX_TRUE}" && test -z "${HAVE_MPLEX_FALSE}"; then
  as_fn_error "conditional \"HAVE_MPLEX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MP2ENC_TRUE}" && test -z "${HAVE_MP2ENC_FALSE}"; then
  as_fn_error "conditional \"HAVE_MP2ENC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MPEG2ENC_TRUE}" && test -z "${HAVE_MPEG2ENC_FALSE}"; then
  as_fn_error "conditional \"HAVE_MPEG2ENC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SPUMUX_TRUE}" && test -z "${HAVE_SPUMUX_FALSE}"; then
  as_fn_error "conditional \"HAVE_SPUMUX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MOGRIFY_TRUE}" && test -z "${HAVE_MOGRIFY_FALSE}"; then
  as_fn_error "conditional \"HAVE_MOGRIFY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CONVERT_TRUE}" && test -z "${HAVE_CONVERT_FALSE}"; then
  as_fn_error "conditional \"HAVE_CONVERT\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MKISOFS_TRUE}" && test -z "${HAVE_MKISOFS_FALSE}"; then
  as_fn_error "conditional \"HAVE_MKISOFS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CDRECORD_TRUE}" && test -z "${HAVE_CDRECORD_FALSE}"; then
  as_fn_error "conditional \"HAVE_CDRECORD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_MD5SUM_TRUE}" && test -z "${HAVE_MD5SUM_FALSE}"; then
  as_fn_error "conditional \"HAVE_MD5SUM\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_AUTOCONF_TRUE}" && test -z "${HAVE_AUTOCONF_FALSE}"; then
  as_fn_error "conditional \"HAVE_AUTOCONF\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_AUTOMAKE_TRUE}" && test -z "${HAVE_AUTOMAKE_FALSE}"; then
  as_fn_error "conditional \"HAVE_AUTOMAKE\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SOX_BUILD_TRUE}" && test -z "${HAVE_SOX_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_SOX_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_IBERTY_BUILD_TRUE}" && test -z "${HAVE_IBERTY_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_IBERTY_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SOX_BUILD_TRUE}" && test -z "${HAVE_SOX_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_SOX_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_IBERTY_BUILD_TRUE}" && test -z "${HAVE_IBERTY_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_IBERTY_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_LIBOGG_BUILD_TRUE}" && test -z "${HAVE_LIBOGG_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_LIBOGG_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FLAC_BUILD_TRUE}" && test -z "${HAVE_FLAC_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_FLAC_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SOX_BUILD_TRUE}" && test -z "${HAVE_SOX_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_SOX_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_ALL_BUILDS_TRUE}" && test -z "${HAVE_ALL_BUILDS_FALSE}"; then
  as_fn_error "conditional \"HAVE_ALL_BUILDS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_DVDAUTHOR_BUILD_TRUE}" && test -z "${HAVE_DVDAUTHOR_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_DVDAUTHOR_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CDRTOOLS_BUILD_TRUE}" && test -z "${HAVE_CDRTOOLS_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_CDRTOOLS_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_STATIC_SOX_TRUE}" && test -z "${HAVE_STATIC_SOX_FALSE}"; then
  as_fn_error "conditional \"HAVE_STATIC_SOX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_DVDAUTHOR_PATCH_TRUE}" && test -z "${HAVE_DVDAUTHOR_PATCH_FALSE}"; then
  as_fn_error "conditional \"HAVE_DVDAUTHOR_PATCH\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CDRTOOLS_PATCH_TRUE}" && test -z "${HAVE_CDRTOOLS_PATCH_FALSE}"; then
  as_fn_error "conditional \"HAVE_CDRTOOLS_PATCH\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SOX_PATCH_TRUE}" && test -z "${HAVE_SOX_PATCH_FALSE}"; then
  as_fn_error "conditional \"HAVE_SOX_PATCH\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FLAC_DOWNLOAD_TRUE}" && test -z "${HAVE_FLAC_DOWNLOAD_FALSE}"; then
  as_fn_error "conditional \"HAVE_FLAC_DOWNLOAD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_LIBOGG_DOWNLOAD_TRUE}" && test -z "${HAVE_LIBOGG_DOWNLOAD_FALSE}"; then
  as_fn_error "conditional \"HAVE_LIBOGG_DOWNLOAD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FLAC_CVS_TRUE}" && test -z "${HAVE_FLAC_CVS_FALSE}"; then
  as_fn_error "conditional \"HAVE_FLAC_CVS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_ALL_DEPS_TRUE}" && test -z "${HAVE_ALL_DEPS_FALSE}"; then
  as_fn_error "conditional \"HAVE_ALL_DEPS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_FLAC_TRUE}" && test -z "${WITH_FLAC_FALSE}"; then
  as_fn_error "conditional \"WITH_FLAC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_EXTERNAL_FLAC_TRUE}" && test -z "${HAVE_EXTERNAL_FLAC_FALSE}"; then
  as_fn_error "conditional \"HAVE_EXTERNAL_FLAC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FLAC_TRUE}" && test -z "${HAVE_FLAC_FALSE}"; then
  as_fn_error "conditional \"HAVE_FLAC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_OGG_TRUE}" && test -z "${WITH_OGG_FALSE}"; then
  as_fn_error "conditional \"WITH_OGG\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_EXTERNAL_OGG_TRUE}" && test -z "${HAVE_EXTERNAL_OGG_FALSE}"; then
  as_fn_error "conditional \"HAVE_EXTERNAL_OGG\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_OGG_TRUE}" && test -z "${HAVE_OGG_FALSE}"; then
  as_fn_error "conditional \"HAVE_OGG\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_FIXWAV_TRUE}" && test -z "${WITH_FIXWAV_FALSE}"; then
  as_fn_error "conditional \"WITH_FIXWAV\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_EXTERNAL_FIXWAV_TRUE}" && test -z "${HAVE_EXTERNAL_FIXWAV_FALSE}"; then
  as_fn_error "conditional \"HAVE_EXTERNAL_FIXWAV\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FIXWAV_TRUE}" && test -z "${HAVE_FIXWAV_FALSE}"; then
  as_fn_error "conditional \"HAVE_FIXWAV\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_SOX_TRUE}" && test -z "${WITH_SOX_FALSE}"; then
  as_fn_error "conditional \"WITH_SOX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_EXTERNAL_SOX_TRUE}" && test -z "${HAVE_EXTERNAL_SOX_FALSE}"; then
  as_fn_error "conditional \"HAVE_EXTERNAL_SOX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SOX_TRUE}" && test -z "${HAVE_SOX_FALSE}"; then
  as_fn_error "conditional \"HAVE_SOX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WITH_IBERTY_TRUE}" && test -z "${WITH_IBERTY_FALSE}"; then
  as_fn_error "conditional \"WITH_IBERTY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_EXTERNAL_IBERTY_TRUE}" && test -z "${HAVE_EXTERNAL_IBERTY_FALSE}"; then
  as_fn_error "conditional \"HAVE_EXTERNAL_IBERTY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_IBERTY_TRUE}" && test -z "${HAVE_IBERTY_FALSE}"; then
  as_fn_error "conditional \"HAVE_IBERTY\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_DVDAUTHOR_BUILD_TRUE}" && test -z "${HAVE_DVDAUTHOR_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_DVDAUTHOR_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CDRTOOLS_BUILD_TRUE}" && test -z "${HAVE_CDRTOOLS_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_CDRTOOLS_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FLAC_BUILD_TRUE}" && test -z "${HAVE_FLAC_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_FLAC_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SOX_BUILD_TRUE}" && test -z "${HAVE_SOX_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_SOX_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_LIBOGG_BUILD_TRUE}" && test -z "${HAVE_LIBOGG_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_LIBOGG_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_IBERTY_BUILD_TRUE}" && test -z "${HAVE_IBERTY_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_IBERTY_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_FIXWAV_BUILD_TRUE}" && test -z "${HAVE_FIXWAV_BUILD_FALSE}"; then
  as_fn_error "conditional \"HAVE_FIXWAV_BUILD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi

: ${CONFIG_STATUS=./config.status}
ac_write_fail=0
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
$as_echo "$as_me: creating $CONFIG_STATUS" >&6;}
as_write_fail=0
cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=\${CONFIG_SHELL-$SHELL}
export SHELL
_ASEOF
cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error ERROR [LINENO LOG_FD]
# ---------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with status $?, using 1 if that was 0.
as_fn_error ()
{
  as_status=$?; test $as_status -eq 0 && as_status=1
  if test "$3"; then
    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
  fi
  $as_echo "$as_me: error: $1" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if ( -- /) >/dev/null 2>&1 && test "X` -- / 2>&1`" = "X/"; then
  as_basename=
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
_ASEOF
test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by dvda-author $as_me 10.06, which was
generated by GNU Autoconf 2.65.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

_ACEOF

case $ac_config_files in *"
"*) set x $ac_config_files; shift; ac_config_files=$*;;
esac

case $ac_config_headers in *"
"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
esac


cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
# Files that config.status was made for.
config_files="$ac_config_files"
config_headers="$ac_config_headers"
config_commands="$ac_config_commands"

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <fabnicol@users.sourceforge.net>."

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
ac_cs_version="\\
dvda-author config.status 10.06
configured by $0, generated by GNU Autoconf 2.65,
  with options \\"\$ac_cs_config\\"

Copyright (C) 2009 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='$ac_pwd'
srcdir='$srcdir'
INSTALL='$INSTALL'
MKDIR_P='$MKDIR_P'
AWK='$AWK'
test -n "\$AWK" || AWK=awk
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
if \$ac_cs_recheck; then
  set X '$SHELL' '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
  shift
  \$as_echo "running CONFIG_SHELL=$SHELL \$*" >&6
  CONFIG_SHELL='$SHELL'
  export CONFIG_SHELL
  exec "\$@"
fi

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
#
# INIT-COMMANDS
#
AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1

# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "dvda-author.desktop") CONFIG_FILES="$CONFIG_FILES dvda-author.desktop" ;;
    "dvda-author-shared.spec") CONFIG_FILES="$CONFIG_FILES dvda-author-shared.spec" ;;
    "dvda-author.spec") CONFIG_FILES="$CONFIG_FILES dvda-author.spec" ;;
    "dvda-author.nsi") CONFIG_FILES="$CONFIG_FILES dvda-author.nsi" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "src/include/Makefile") CONFIG_FILES="$CONFIG_FILES src/include/Makefile" ;;
    "libutils/Makefile") CONFIG_FILES="$CONFIG_FILES libutils/Makefile" ;;
    "libutils/src/Makefile") CONFIG_FILES="$CONFIG_FILES libutils/src/Makefile" ;;
    "libutils/src/include/Makefile") CONFIG_FILES="$CONFIG_FILES libutils/src/include/Makefile" ;;
    "libutils/src/private/Makefile") CONFIG_FILES="$CONFIG_FILES libutils/src/private/Makefile" ;;
    "libfixwav/Makefile") CONFIG_FILES="$CONFIG_FILES libfixwav/Makefile" ;;
    "libfixwav/src/Makefile") CONFIG_FILES="$CONFIG_FILES libfixwav/src/Makefile" ;;
    "libfixwav/src/include/Makefile") CONFIG_FILES="$CONFIG_FILES libfixwav/src/include/Makefile" ;;
    "CB_project/Makefile") CONFIG_FILES="$CONFIG_FILES CB_project/Makefile" ;;
    "CB_project/dvda-author/Makefile") CONFIG_FILES="$CONFIG_FILES CB_project/dvda-author/Makefile" ;;
    "CB_project/libc_utils/Makefile") CONFIG_FILES="$CONFIG_FILES CB_project/libc_utils/Makefile" ;;
    "CB_project/libfixwav/Makefile") CONFIG_FILES="$CONFIG_FILES CB_project/libfixwav/Makefile" ;;
    "CB_project/libats2wav/Makefile") CONFIG_FILES="$CONFIG_FILES CB_project/libats2wav/Makefile" ;;
    "libglibc/Makefile") CONFIG_FILES="$CONFIG_FILES libglibc/Makefile" ;;
    "libglibc/src/Makefile") CONFIG_FILES="$CONFIG_FILES libglibc/src/Makefile" ;;
    "libglibc/src/include/Makefile") CONFIG_FILES="$CONFIG_FILES libglibc/src/include/Makefile" ;;
    "libats2wav/Makefile") CONFIG_FILES="$CONFIG_FILES libats2wav/Makefile" ;;
    "libats2wav/src/Makefile") CONFIG_FILES="$CONFIG_FILES libats2wav/src/Makefile" ;;
    "libats2wav/src/include/Makefile") CONFIG_FILES="$CONFIG_FILES libats2wav/src/include/Makefile" ;;
    "images/Makefile") CONFIG_FILES="$CONFIG_FILES images/Makefile" ;;
    "script") CONFIG_FILES="$CONFIG_FILES script" ;;
    "script1") CONFIG_FILES="$CONFIG_FILES script1" ;;
    "EXAMPLES") CONFIG_FILES="$CONFIG_FILES EXAMPLES" ;;

  *) as_fn_error "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp=
  trap 'exit_status=$?
  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error "cannot create a temporary directory in ." "$LINENO" 5

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$tmp/subs1.awk" &&
_ACEOF


{
  echo "cat >conf$$subs.awk <<_ACEOF" &&
  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
  echo "_ACEOF"
} >conf$$subs.sh ||
  as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
ac_delim_num=`echo "$ac_subst_vars" | grep -c '$'`
ac_delim='%!_!# '
for ac_last_try in false false false false false :; do
  . ./conf$$subs.sh ||
    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5

  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
  if test $ac_delim_n = $ac_delim_num; then
    break
  elif $ac_last_try; then
    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done
rm -f conf$$subs.sh

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
cat >>"\$tmp/subs1.awk" <<\\_ACAWK &&
_ACEOF
sed -n '
h
s/^/S["/; s/!.*/"]=/
p
g
s/^[^!]*!//
:repl
t repl
s/'"$ac_delim"'$//
t delim
:nl
h
s/\(.\{148\}\)..*/\1/
t more1
s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
p
n
b repl
:more1
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t nl
:delim
h
s/\(.\{148\}\)..*/\1/
t more2
s/["\\]/\\&/g; s/^/"/; s/$/"/
p
b
:more2
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t delim
' <conf$$subs.awk | sed '
/^[^""]/{
  N
  s/\n//
}
' >>$CONFIG_STATUS || ac_write_fail=1
rm -f conf$$subs.awk
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACAWK
cat >>"\$tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
  || as_fn_error "could not setup config files machinery" "$LINENO" 5
_ACEOF

# VPATH may cause trouble with some makes, so we remove $(srcdir),
# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
s/:*\$(srcdir):*/:/
s/:*\${srcdir}:*/:/
s/:*@srcdir@:*/:/
s/^\([^=]*=[	 ]*\):*/\1/
s/:*$//
s/^[^=]*=[	 ]*$//
}'
fi

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$tmp/defines.awk" <<\_ACAWK ||
BEGIN {
_ACEOF

# Transform confdefs.h into an awk script `defines.awk', embedded as
# here-document in config.status, that substitutes the proper values into
# config.h.in to produce config.h.

# Create a delimiter string that does not exist in confdefs.h, to ease
# handling of long lines.
ac_delim='%!_!# '
for ac_last_try in false false :; do
  ac_t=`sed -n "/$ac_delim/p" confdefs.h`
  if test -z "$ac_t"; then
    break
  elif $ac_last_try; then
    as_fn_error "could not make $CONFIG_HEADERS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done

# For the awk script, D is an array of macro values keyed by name,
# likewise P contains macro parameters if any.  Preserve backslash
# newline sequences.

ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
sed -n '
s/.\{148\}/&'"$ac_delim"'/g
t rset
:rset
s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
t def
d
:def
s/\\$//
t bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3"/p
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
d
:bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3\\\\\\n"\\/p
t cont
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
t cont
d
:cont
n
s/.\{148\}/&'"$ac_delim"'/g
t clear
:clear
s/\\$//
t bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/"/p
d
:bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
b cont
' <confdefs.h | sed '
s/'"$ac_delim"'/"\\\
"/g' >>$CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
  line = \$ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
  as_fn_error "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$tmp/stdin" \
      || as_fn_error "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  ac_datarootdir_hack='
  s&@datadir@&$datadir&g
  s&@docdir@&$docdir&g
  s&@infodir@&$infodir&g
  s&@localedir@&$localedir&g
  s&@mandir@&$mandir&g
  s&\\\${datarootdir}&$datarootdir&g' ;;
esac
_ACEOF

# Neutralize VPATH when `$srcdir' = `.'.
# Shell code in configure.ac might set extrasub.
# FIXME: do we really want to maintain this feature?
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_sed_extra="$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
  || as_fn_error "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined." >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined." >&2;}

  rm -f "$tmp/stdin"
  case $ac_file in
  -) cat "$tmp/out" && rm -f "$tmp/out";;
  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
  esac \
  || as_fn_error "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
    } >"$tmp/config.h" \
      || as_fn_error "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$tmp/config.h" "$ac_file" \
	|| as_fn_error "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;

  esac
done # for ac_tag


as_fn_exit 0
_ACEOF
ac_clean_files=$ac_clean_files_save

test $ac_write_fail = 0 ||
  as_fn_error "write failure creating $CONFIG_STATUS" "$LINENO" 5


# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || as_fn_exit $?
fi
if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
$as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
fi




{ $as_echo "$as_me:${as_lineno-$LINENO}: result:

*************************************************
* ${PACKAGE_TARNAME} was configured
*************************************************

You can now build ${PACKAGE_TARNAME} by issuing 'make'.
When the build is complete, become root and install
it by issuing 'make install'.
A ${PACKAGE_TARNAME} man page will be installed on Unix system

  Configuration summary :

    Version : ..................... $VERSION

    Dependencies:
                    fixwav..........$(echo $FIXWAV_LIB)
                    flac............$(echo $FLAC_LIB) $FLAC_LINK
                    ogg.............$(echo $LIBOGG_LIB) $LIBOGG_LINK
                    sox.............$(echo $SOX_LIB) $SOX_LINK


    Build libraries:
                    libFLAC ........$FLAC_BUILD
                    libsox  ........$SOX_BUILD
                    gnu libc .......$IBERTY_BUILD
                    libats2wav .....yes
                    libutils .......yes

    Ogg FLAC support:
                     ...............$LIBOGG_BUILD

    Static sox build:
                     ...............$STATIC_SOX


" >&5
$as_echo "

*************************************************
* ${PACKAGE_TARNAME} was configured
*************************************************

You can now build ${PACKAGE_TARNAME} by issuing 'make'.
When the build is complete, become root and install
it by issuing 'make install'.
A ${PACKAGE_TARNAME} man page will be installed on Unix system

  Configuration summary :

    Version : ..................... $VERSION

    Dependencies:
                    fixwav..........$(echo $FIXWAV_LIB)
                    flac............$(echo $FLAC_LIB) $FLAC_LINK
                    ogg.............$(echo $LIBOGG_LIB) $LIBOGG_LINK
                    sox.............$(echo $SOX_LIB) $SOX_LINK


    Build libraries:
                    libFLAC ........$FLAC_BUILD
                    libsox  ........$SOX_BUILD
                    gnu libc .......$IBERTY_BUILD
                    libats2wav .....yes
                    libutils .......yes

    Ogg FLAC support:
                     ...............$LIBOGG_BUILD

    Static sox build:
                     ...............$STATIC_SOX


" >&6; }

if  test x$ac_cv_c_compiler_gnu = xyes ; then :

  { $as_echo "$as_me:${as_lineno-$LINENO}: result:
  Tools :
         Compiler is GCC : ............. $ac_cv_c_compiler_gnu
" >&5
$as_echo "
  Tools :
         Compiler is GCC : ............. $ac_cv_c_compiler_gnu
" >&6; }

fi

if  test x$IBIBERTY_LIB -o x$IBIBERTY_LINK != x ; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: libiberty.a will be linked to" >&5
$as_echo "libiberty.a will be linked to" >&6; }
fi

if  test x$IBERTY_BUILD = xyes ; then :

  { $as_echo "$as_me:${as_lineno-$LINENO}: result: GNU lib sources in glibc/ will be recompiled for enhanced portability." >&5
$as_echo "GNU lib sources in glibc/ will be recompiled for enhanced portability." >&6; }
  if  test x$circumvent_sox_bug = xyes ; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   This is made necessary by SoX bug in versions <= 14.3" >&5
$as_echo "  This is made necessary by SoX bug in versions <= 14.3" >&6; }
fi

fi


if test x$ac_cv_c_big_endian = xyes; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   Machine is big- endian" >&5
$as_echo "  Machine is big- endian" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   Machine is little-endian" >&5
$as_echo "  Machine is little-endian" >&6; }
fi

if  test x$HELP2MAN != x ; then :

  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   Man page will be generated (man 1)" >&5
$as_echo "  Man page will be generated (man 1)" >&6; }
  if  test x$MAN2HTML != x ; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   Html man page will be generated " >&5
$as_echo "  Html man page will be generated " >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   Html man page will not be generated " >&5
$as_echo "  Html man page will not be generated " >&6; }
fi

else

  { $as_echo "$as_me:${as_lineno-$LINENO}: result:   Man page will not be generated" >&5
$as_echo "  Man page will not be generated" >&6; }

fi


if  test x$MP2ENC = x -o x$JPEG2YUV = x -o x$MPEG2ENC = x -o x$MPLEX = x; then :

 { $as_echo "$as_me:${as_lineno-$LINENO}: result:   You will have to author top menus from available MPEG background files, as tools are missing to automate generation." >&5
$as_echo "  You will have to author top menus from available MPEG background files, as tools are missing to automate generation." >&6; }
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: result:

  Auxiliary tools:
    curl: .........................$CURL
    help2man: .....................$HELP2MAN
    man2html: .....................$MAN2HTML
    spumux: .......................$SPUMUX
    dvdauthor: ....................$DVDAUTHOR
    mkisofs: ......................$MKISOFS
    cdrecord: .....................$CDRECORD
    mp2enc: .......................$MP2ENC
    jpeg2yuv: .....................$JPEG2YUV
    mpeg2enc: .....................$MPEG2ENC
    mplex: ........................$MPLEX
    mogrify:.......................$MOGRIFY

  These tools should all be installed to enable advanced dvda-author features.

  Installation directories :
    prefix is: ....................$prefix
    Library directory: ........... $(echo $libdir)
    Program directory: ........... $(echo $bindir)
    Man pages: ................... $datarootdir/man/man1
    Documentation directory: ..... $datarootdir/doc/${PACKAGE_TARNAME}
    Images directory: ............ $(echo $PIXDIR)
    Configuration files: ......... $SHORTLINKDIR
    Images directory: ............ $MENUDIR

" >&5
$as_echo "

  Auxiliary tools:
    curl: .........................$CURL
    help2man: .....................$HELP2MAN
    man2html: .....................$MAN2HTML
    spumux: .......................$SPUMUX
    dvdauthor: ....................$DVDAUTHOR
    mkisofs: ......................$MKISOFS
    cdrecord: .....................$CDRECORD
    mp2enc: .......................$MP2ENC
    jpeg2yuv: .....................$JPEG2YUV
    mpeg2enc: .....................$MPEG2ENC
    mplex: ........................$MPLEX
    mogrify:.......................$MOGRIFY

  These tools should all be installed to enable advanced dvda-author features.

  Installation directories :
    prefix is: ....................$prefix
    Library directory: ........... $(echo $libdir)
    Program directory: ........... $(echo $bindir)
    Man pages: ................... $datarootdir/man/man1
    Documentation directory: ..... $datarootdir/doc/${PACKAGE_TARNAME}
    Images directory: ............ $(echo $PIXDIR)
    Configuration files: ......... $SHORTLINKDIR
    Images directory: ............ $MENUDIR

" >&6; }

